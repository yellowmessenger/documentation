"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[83874],{14005:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"platform_concepts/engagement/cdp/user_data/userid-flow","title":"User identification flow","description":"Overview","source":"@site/docs/platform_concepts/engagement/cdp/user_data/userid-flow.md","sourceDirName":"platform_concepts/engagement/cdp/user_data","slug":"/platform_concepts/engagement/cdp/user_data/userid-flow","permalink":"/docs/platform_concepts/engagement/cdp/user_data/userid-flow","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"User identification flow","sidebar_label":"User identification flow"},"sidebar":"platform_concepts","previous":{"title":"How are user records created from conversations & unified in User 360","permalink":"/docs/platform_concepts/engagement/cdp/user_data/data_capture_convers"},"next":{"title":"Add/update user properties from AI-agent conversations","permalink":"/docs/platform_concepts/engagement/cdp/user_data/store_conv_data"}}');var r=t(74848),s=t(28453);const o={title:"User identification flow",sidebar_label:"User identification flow"},a=void 0,l={},c=[{value:"Overview",id:"overview",level:2},{value:"Significance of identifying users",id:"significance-of-identifying-users",level:3},{value:"Understand how user identification flow works",id:"understand-how-user-identification-flow-works",level:3},{value:"Setup user identification flow",id:"setup-user-identification-flow",level:2},{value:"Phone identifier flow",id:"phone-identifier-flow",level:3},{value:"Email identifier flow",id:"email-identifier-flow",level:3},{value:"Custom property identifier flow",id:"custom-property-identifier-flow",level:3},{value:"1. To collect property values from user input",id:"1-to-collect-property-values-from-user-input",level:4},{value:"2. To capture property values from other variables",id:"2-to-capture-property-values-from-other-variables",level:4},{value:"3. To capture user property values from bot script",id:"3-to-capture-user-property-values-from-bot-script",level:4},{value:"4. To capture property values from API response",id:"4-to-capture-property-values-from-api-response",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The User Identification flow in AI-agent conversation is the process of identifying the user interacting with the AI-agent. This is achieved by requesting the unique identifier from the user. It could be an email address, phone number or other identifier."}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Date data types are not supported for the userId. It supports String, Number, email, and phone types."})}),"\n",(0,r.jsx)(n.h3,{id:"significance-of-identifying-users",children:"Significance of identifying users"}),"\n",(0,r.jsx)(n.p,{children:"The user identification is an important aspect of AI-agent conversation design, as it allows for a more personalized and engaging user experience. User identification helps in the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Personalized responses"}),": When a user is identified, the AI-agent can tailor its responses to the individual user's needs and preferences. This can lead to more relevant and helpful responses, which can improve the overall user experience."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Context maintenance"}),": User identification allows the AI-agent to maintain context throughout the conversation and across different channels. This means that the AI-agent can use user data and the interaction with the user, and use that information to provide more accurate and useful responses in subsequent interactions."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Improved engagement"}),": By providing personalized responses and maintaining context, the AI-agent can create a more engaging conversation with the user. This can lead to increased user satisfaction and higher levels of engagement with the AI-agent."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Better data collection"}),": User identification also allows the AI-agent to collect more detailed and accurate data on individual users. This can be used to improve the AI-agent's performance over time, by providing insights into user behavior and preferences."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"understand-how-user-identification-flow-works",children:"Understand how user identification flow works"}),"\n",(0,r.jsx)(n.p,{children:"The primary objective of the User Identification flow is to ensure that the userId is captured for users that interact with the AI-agent on any channel."}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"userId"})," is not captured before initiating a conversation, a blank user record is created without a ",(0,r.jsx)(n.code,{children:"userId"})," with a user starts conversation. If capturing of userId is not managed properly, it may result in the creation of duplicate records for the same user, one with a userId and one without. This can also lead to the creation of multiple unidentified records for different sessions."]})}),"\n",(0,r.jsx)(n.p,{children:"The following are the steps involved:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"You first need to define the user property that needs to considered as the userId. Whenever the selected property is updated, the userId will be automatically updated with the same value."}),"\n",(0,r.jsxs)(n.p,{children:["For example, if you select the ",(0,r.jsx)(n.code,{children:"phone"})," user property, each time a value is captured for the phone property, that same value will also be automatically copied and assigned to the userId field."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"At the beginning of every conversation, the AI-agent verifies if the userId is known."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If it is not known, the ",(0,r.jsx)(n.strong,{children:"User identification flow"})," is triggered to capture the userId."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["For details on how user records are created through conversations and unified in User 360, see ",(0,r.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/engagement/cdp/user_data/data_capture_convers",children:"this article"}),"."]})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"setup-user-identification-flow",children:"Setup user identification flow"}),"\n",(0,r.jsx)(n.p,{children:"To add the User identification flow to your AI-agent, follow these steps:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["In Automation, click ",(0,r.jsx)(n.strong,{children:"Build"})," > ",(0,r.jsx)(n.strong,{children:"Conversation settings"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://imgur.com/wJg2jQ2.png",alt:""})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["On the pop-up screen that appears, click ",(0,r.jsx)(n.strong,{children:"User identification"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("center",{children:(0,r.jsx)("img",{src:"https://i.imgur.com/dqW7gKF.png",width:"60%"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Select the relevant identification flow - ",(0,r.jsx)(n.a,{href:"#phone-identifier-flow",children:"Phone identification flow"}),", ",(0,r.jsx)(n.a,{href:"#email-identifier-flow",children:"Email identification flow"})," or ",(0,r.jsx)(n.a,{href:"#custom-property-identifier-flow",children:"Custom property flow"}),"."]}),"\n",(0,r.jsx)("img",{src:"https://i.imgur.com/BGOG8WX.png",width:""}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"phone-identifier-flow",children:"Phone identifier flow"}),"\n",(0,r.jsxs)(n.p,{children:["Select this option if the ",(0,r.jsx)(n.code,{children:"phone"})," user property serves as the unique identifier for your users. Make sure to collect the phone number and store it in the ",(0,r.jsx)(n.code,{children:"phone"})," user property, which is already set by default for this identifier flow."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://i.imgur.com/1GIGNvw.png",alt:""})}),"\n",(0,r.jsx)(n.h3,{id:"email-identifier-flow",children:"Email identifier flow"}),"\n",(0,r.jsxs)(n.p,{children:["Select this option if ",(0,r.jsx)(n.code,{children:"email"})," user property serves as the unique identifier for your users. Make sure to collect the email address and store it in the ",(0,r.jsx)(n.code,{children:"email"})," user property, which is already set by default for this identifier flow."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://i.imgur.com/52UpNaU.png",alt:""})}),"\n",(0,r.jsx)(n.h3,{id:"custom-property-identifier-flow",children:"Custom property identifier flow"}),"\n",(0,r.jsx)(n.p,{children:"Select this option if the unique identifier of your users is any property other than email or phone. In this case:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Choose the custom property that serves as the unique identifier for your users. Please note that only String, Number, email, and phone data types are supported for the custom property."}),"\n",(0,r.jsx)("img",{src:"https://i.imgur.com/fqhxItb.png",width:"50%"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["To create a new property and store it as userId, click on ",(0,r.jsx)(n.strong,{children:"+Create new user property"})," > Enter ",(0,r.jsx)(n.strong,{children:"Property name"})," and choose ",(0,r.jsx)(n.strong,{children:"Property type"})," > Click ",(0,r.jsx)(n.strong,{children:"Add"}),"."]}),"\n",(0,r.jsx)("img",{src:"/img/cdp/customproperty.png",width:"60%"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Collect property value."}),"\n",(0,r.jsx)(n.h4,{id:"1-to-collect-property-values-from-user-input",children:"1. To collect property values from user input"}),"\n",(0,r.jsxs)(n.p,{children:["Collect the selected user property using the ",(0,r.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes/prompt-nodes",children:"Prompt node"})," and use ",(0,r.jsx)(n.strong,{children:"Save response in"})," to map the variable to the user property."]}),"\n",(0,r.jsx)(n.h4,{id:"2-to-capture-property-values-from-other-variables",children:"2. To capture property values from other variables"}),"\n",(0,r.jsxs)(n.p,{children:["If you want to capture user properties from other variables, use the syntax: ",(0,r.jsx)(n.code,{children:"{{variables.variableName}}"})]}),"\n",(0,r.jsx)("img",{src:"https://imgur.com/Giwso6b.png",width:"70%"}),"\n",(0,r.jsx)(n.h4,{id:"3-to-capture-user-property-values-from-bot-script",children:"3. To capture user property values from bot script"}),"\n",(0,r.jsx)(n.p,{children:"For example, in the sample script below, to capture the phone number as the userId:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'`<script type="text/javascript">`  \nwindow.ymConfig = {"bot":"x1673261303850","host":"[https://cloud.yellow.ai](https://cloud.yellow.ai/)", "payload":{"name":"Tom","phoneNumber":"9090000000","email":"[tom@example.com](mailto:email@example.com)"},};  \n(function() {  \nvar w = window,  \nic = w.YellowMessenger;  \nif ("function" === typeof ic) ic("reattach_activator"), ic("update", ymConfig);  \nelse {  \nvar d = document,  \ni = function() {  \ni.c(arguments)  \n};  \nfunction l() {  \nvar e = d.createElement("script");  \ne.type = "text/javascript", e.async = !0, e.src = "[https://cdn.yellowmessenger.com/plugin/widget-v2/latest/dist/main.min.js](https://cdn.yellowmessenger.com/plugin/widget-v2/latest/dist/main.min.js)";  \nvar t = d.getElementsByTagName("script")[0];  \nt.parentNode.insertBefore(e, t)  \n}  \ni.q = [], i.c = function(e) {  \ni.q.push(e)  \n}, w.YellowMessenger = i, w.attachEvent ? w.attachEvent("onload", l) : w.addEventListener("load", l, !1)}  \n})();  \n<\/script>\n\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"You can use the Function node to capture and store the variable in the respective user property."}),"\n",(0,r.jsxs)(n.p,{children:["For instance, here ",(0,r.jsx)(n.code,{children:"returnId"})," is the function name containing the provided code."]}),"\n",(0,r.jsxs)(n.p,{children:["To access property values from the ",(0,r.jsx)(n.code,{children:"payload"})," schema above, you can use the syntax: ",(0,r.jsx)(n.code,{children:"data.profile.payload"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'return new Promise(resolve => {\n   let payload = data.profile.payload\n   if (typeof (payload) === "string") {\n      payload = JSON.parse(payload);\n   }\n   console.log(payload);\n   ymLib.logger.log(payload,"init--Payload");\n   resolve(payload)\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:"Store the response returned by the Function in the corresponding variable, in this case, 'userId`."}),"\n",(0,r.jsx)("img",{src:"https://i.imgur.com/qqltmgO.png",width:"70%"}),"\n",(0,r.jsx)(n.h4,{id:"4-to-capture-property-values-from-api-response",children:"4. To capture property values from API response"}),"\n",(0,r.jsx)(n.p,{children:"First, store the response payload in an object variable."}),"\n",(0,r.jsx)("img",{src:"https://i.imgur.com/ZdyD8u7.png",width:""}),"\n",(0,r.jsx)(n.p,{children:"Sample response payload"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'{\n   "name": "Tom",\n   "phoneNumber":"9090000000",\n   "email":"tom@example.com"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["To access a specific key value from the object variable, use the syntax:  ",(0,r.jsx)(n.code,{children:"{{{variables.objVariableName.key}}}"})]}),"\n",(0,r.jsx)("img",{src:"https://i.imgur.com/vwCUkDo.png",width:"60%"}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"{{{variables.userData.phoneNumber}}}"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"{{{variables.userData.email}}}"})}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"You can also use SDK APIs to programmatically set user properties and the user ID."}),"\n",(0,r.jsx)(n.li,{children:"You can also make use of Function to extract the required information from a payload."}),"\n"]})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"What next?"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["See ",(0,r.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/engagement/cdp/user_data/store_conv_data",children:"how to capture user properties from AI-agent conversation"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Know ",(0,r.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/engagement/cdp/user_data/personalise_conversations",children:"how to create personalized conversations in AI-agent conversations"})]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(96540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);