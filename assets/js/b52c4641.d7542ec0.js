"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[5906],{11470:(e,t,n)=>{n.d(t,{A:()=>k});var s=n(96540),o=n(34164),r=n(17559),a=n(23104),i=n(56347),l=n(205),c=n(57485),u=n(31682),d=n(70679);function p(e){var t,n;return null!=(t=null==(n=s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))?void 0:n.filter(Boolean))?t:[]}function h(e){const{values:t,children:n}=e;return(0,s.useMemo)(()=>{const e=null!=t?t:function(e){return p(e).map(e=>{let{props:{value:t,label:n,attributes:s,default:o}}=e;return{value:t,label:n,attributes:s,default:o}})}(n);return function(e){const t=(0,u.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map(e=>e.value).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e},[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some(e=>e.value===t)}function f(e){let{queryString:t=!1,groupId:n}=e;const o=(0,i.W6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,c.aZ)(r),(0,s.useCallback)(e=>{if(!r)return;const t=new URLSearchParams(o.location.search);t.set(r,e),o.replace(Object.assign({},o.location,{search:t.toString()}))},[r,o])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,r=h(e),[a,i]=(0,s.useState)(()=>function(e){var t;let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:s}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+s.map(e=>e.value).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const o=null!=(t=s.find(e=>e.default))?t:s[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:r})),[c,u]=f({queryString:n,groupId:o}),[p,g]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[o,r]=(0,d.Dv)(n);return[o,(0,s.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:o}),b=(()=>{const e=null!=c?c:p;return m({value:e,tabValues:r})?e:null})();(0,l.A)(()=>{b&&i(b)},[b]);return{selectedValue:a,selectValue:(0,s.useCallback)(e=>{if(!m({value:e,tabValues:r}))throw new Error("Can't select invalid tab value="+e);i(e),u(e),g(e)},[u,g,r]),tabValues:r}}var b=n(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(74848);function j(e){let{className:t,block:n,selectedValue:s,selectValue:r,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),u=e=>{const t=e.currentTarget,n=l.indexOf(t),o=i[n].value;o!==s&&(c(t),r(o))},d=e=>{var t;let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{var s;const t=l.indexOf(e.currentTarget)+1;n=null!=(s=l[t])?s:l[0];break}case"ArrowLeft":{var o;const t=l.indexOf(e.currentTarget)-1;n=null!=(o=l[t])?o:l[l.length-1];break}}null==(t=n)||t.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},t),children:i.map(e=>{let{value:t,label:n,attributes:r}=e;return(0,x.jsx)("li",Object.assign({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>{l.push(e)},onKeyDown:d,onClick:u},r,{className:(0,o.A)("tabs__item",v.tabItem,null==r?void 0:r.className,{"tabs__item--active":s===t}),children:null!=n?n:t}),t)})})}function y(e){let{lazy:t,children:n,selectedValue:r}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find(e=>e.props.value===r);return e?(0,s.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==r}))})}function w(e){const t=g(e);return(0,x.jsxs)("div",{className:(0,o.A)(r.G.tabs.container,"tabs-container",v.tabList),children:[(0,x.jsx)(j,Object.assign({},t,e)),(0,x.jsx)(y,Object.assign({},t,e))]})}function k(e){const t=(0,b.A)();return(0,x.jsx)(w,Object.assign({},e,{children:p(e.children)}),String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>a});n(96540);var s=n(34164);const o={tabItem:"tabItem_Ymn6"};var r=n(74848);function a(e){let{children:t,hidden:n,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.A)(o.tabItem,a),hidden:n,children:t})}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(96540);const o={},r=s.createContext(o);function a(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:t},e.children)}},88238:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"platform_concepts/studio/build/nodes/prompt-node-overview/prompt-nodes","title":"Prompt Nodes","description":"Prompts are Interactive or conversational nodes, which expect user input. When a user provides an invalid input to the prompt, a fallback message will be displayed.","source":"@site/docs/platform_concepts/studio/build/nodes/prompt-node-overview/prompt-nodes.md","sourceDirName":"platform_concepts/studio/build/nodes/prompt-node-overview","slug":"/platform_concepts/studio/build/nodes/prompt-node-overview/prompt-nodes","permalink":"/docs/platform_concepts/studio/build/nodes/prompt-node-overview/prompt-nodes","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Prompt Nodes","sidebar_label":"Prompts"},"sidebar":"platform_concepts","previous":{"title":"Dynamic chat node","permalink":"/docs/platform_concepts/studio/dynamicchatnode"},"next":{"title":"Question","permalink":"/docs/platform_concepts/studio/build/nodes/prompt-node-overview/question-node"}}');var o=n(74848),r=n(28453);n(11470),n(19365);const a={title:"Prompt Nodes",sidebar_label:"Prompts"},i=void 0,l={},c=[{value:"Common Features in all the Prompt nodes",id:"common-features-in-all-the-prompt-nodes",level:2},{value:"Make prompt smarter",id:"make-prompt-smarter",level:2},{value:"Auto complete",id:"auto-complete",level:3},{value:"Autoskip",id:"autoskip",level:3},{value:"Additional",id:"additional",level:3},{value:"Use-case",id:"use-case",level:4}];function u(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Prompts are Interactive or conversational nodes, which expect user input. When a user provides an invalid input to the prompt, a fallback message will be displayed."}),"\n",(0,o.jsx)(t.h2,{id:"common-features-in-all-the-prompt-nodes",children:"Common Features in all the Prompt nodes"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Randomization"})}),"\n",(0,o.jsx)(t.p,{children:"Randomization is a feature available in nodes that allows AI-agents show different variation of greeting messages/ questions to users, making the conversation feel more natural and human-like."}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["To add multiple texts, click ",(0,o.jsx)(t.strong,{children:"Add multiple text for randomizing"})," on the node."]}),"\n",(0,o.jsx)(t.li,{children:"Enter variations of the text that you want your users to see."}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://i.imgur.com/plxv0Yb.png",alt:""})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Delay"})}),"\n",(0,o.jsx)(t.p,{children:"You can set a delay in displaying each of these nodes."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Fetch from"})}),"\n",(0,o.jsx)(t.p,{children:"A Fetch from field will be provided in most of the fields to render the dynamic data of that respective node."}),"\n",(0,o.jsx)(t.p,{children:"--- --\x3e"}),"\n",(0,o.jsx)(t.h2,{id:"make-prompt-smarter",children:"Make prompt smarter"}),"\n",(0,o.jsx)(t.p,{children:"Make Prompt Smarter option is available on all the prompt nodes. 3 options available broadly are auto complete, autoskip and other related options."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://i.imgur.com/QoIUylO.png",alt:""})}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.h3,{id:"auto-complete",children:"Auto complete"}),"\n",(0,o.jsx)(t.p,{children:"Autocomplete is set so that the AI-agent can start predicting the rest of the word or sentence for users as they start typing. For example, if you want to find your location and you start typing Jai, you will get the city names starting with Jai - Jaipur. Similarly, if you type Ban, you will get suggestions such as Bangalore, Bangla, Banswara, etc."}),"\n",(0,o.jsx)(t.p,{children:"This feature can be used:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"When the end user wants to easily discover what a AI-agent or a point does."}),"\n",(0,o.jsx)(t.li,{children:"When there are multiple options available and a limit is set on the display, autocomplete is a good singular or assisting alternative to show options."}),"\n",(0,o.jsx)(t.li,{children:"Faster typing, and improved user experience."}),"\n"]}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"Autocomplete shows results after 3 characters are typed and it keeps filtering the results as the customer continues typing / or selects an option."})}),"\n",(0,o.jsx)("img",{src:"https://i.imgur.com/anyDc8z.png",alt:"drawing",width:"50%"}),"\n",(0,o.jsxs)(t.p,{children:["Auto complete is available at a ",(0,o.jsx)(t.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/tools#22-conversation",children:"global level"})," and prompt level (that is triggered inside a prompt)."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://i.imgur.com/Tpm7Qkb.png",alt:""})}),"\n",(0,o.jsx)(t.p,{children:"The following options can be set to auto-complete:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Database column"})," - Select a database table > column directly to populate autocomplete using that."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"List entity"})," - Select a list entity , items of which will be used to populate autocomplete."]}),"\n"]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsx)(t.p,{children:"Only List Item names are considered, the is no search based on all synonyms."}),"\n"]}),"\n",(0,o.jsxs)(t.ol,{start:"3",children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"User properties"})," -  Select a user property(string type ) from Users table to autocomplete. (Note: Only distinct results will be shown) and add up to one filter on any column."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"FAQs"})," - Multi-select categories of FAQs which you want to include in Autocomplete. FAQ descriptions are populated in autocomplete (which are by default same as the question itself)"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Function"})," - If the use case turns is complicated and none of the above steps work, select a function where you can write your custom logic to ultimately return an array of string items which will populate your autocomplete."]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Sample code snippet for function:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'return new Promise(resolve => {\n    console.log("inside autoSuggestion");\n    let result = data.variables.autoComponents;\n    const { term } = data;\n    let suggestions = [];\n    result.forEach((hit) => {\n        if (hit.component.toLowerCase().includes(term.toLowerCase())) {\n            suggestions.push([hit.component, hit.component]);\n        }\n    });\n    resolve(suggestions);\n});\n'})}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.h3,{id:"autoskip",children:"Autoskip"}),"\n",(0,o.jsx)(t.p,{children:"You can keep your conversations from being repetitive by auto-skipping the prompt with entities or variables if you already received the value and have stored it."}),"\n",(0,o.jsx)(t.p,{children:"In the below example, the user wont be asked for the name, phone number and email again in any of the flows."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://i.imgur.com/jIgnQRZ.png",alt:""})}),"\n",(0,o.jsxs)(t.p,{children:["Configure Auto-skip at a global level (from tools section), click ",(0,o.jsx)(t.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/tools#224-autoskipping-settings",children:"here"}),"."]}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.h3,{id:"additional",children:"Additional"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Use this as Unique ID for User"}),": Info entered at this node will be unique for a user.\nFor example, instead of setting a new user ID, you can use the phone number as a unique ID to recognize this user. Other nodes that can be used as Unique IDs are Car Number, Aadhar Card, SSN, etc. that are unique to an individual."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Mark user message as sensitive info"}),": Mask this user info from appearing in conversation logs."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Mark bot message as sensitive info"}),": Mask this AI-agent info from appearing in conversation logs."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://i.imgur.com/0W4y8pO.png",alt:""})}),"\n",(0,o.jsx)(t.h4,{id:"use-case",children:"Use-case"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Where there are 2 nodes in this flow, one asking for a password (marked user message as sensitive info) and the other providing a new password (marked AI-agent message as sensitive info)."}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://i.imgur.com/FKZSynh.jpg",alt:""})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:'Text entered at these nodes will be displayed as "sensitive information" on the chat log.'}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://i.imgur.com/UCfr8gn.png",alt:""})}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["Click the tools icon and configure the node. For more details, see ",(0,o.jsx)(t.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes",children:"Nodes"}),"."]})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}}}]);