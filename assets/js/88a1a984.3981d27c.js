"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[71295],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(96540);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}},76622:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"cookbooks/integrations/google-sheets","title":"Google sheet integration for dynamic record update","description":"This guide will walk you through integrating Google sheets with your AI-agent to automatically update records based on user interactions.","source":"@site/docs/cookbooks/integrations/google-sheets.md","sourceDirName":"cookbooks/integrations","slug":"/cookbooks/integrations/google-sheets","permalink":"/docs/cookbooks/integrations/google-sheets","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Google sheet integration for dynamic record update","sidebar_label":"Google Sheet integration for dynamic record update"},"sidebar":"cookbooks","previous":{"title":"Parse API response field","permalink":"/docs/cookbooks/integrations/parseapi"},"next":{"title":"Marketplace templates","permalink":"/docs/platform_concepts/get_started/marketplaceintro"}}');var o=t(74848),r=t(28453);const i={title:"Google sheet integration for dynamic record update",sidebar_label:"Google Sheet integration for dynamic record update"},a=void 0,l={},c=[{value:"Steps to automatically update a Google sheet",id:"steps-to-automatically-update-a-google-sheet",level:3}];function d(e){const n={a:"a",code:"code",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"This guide will walk you through integrating Google sheets with your AI-agent to automatically update records based on user interactions."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Scenario"})}),"\n",(0,o.jsxs)(n.p,{children:["Consider that you have created a ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/engagement/outbound/outbound-campaigns/run-campaign",children:"campaign"})," to notify users about current offers, and you want to automatically update a Google sheet with user interaction details when the campaign is sent. The goal is to capture and insert the following information into the Google sheet:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Template name"}),": Name of the template used in the campaign."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Quick reply clicked"}),": User's selected quick reply option."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Campaign ID"}),": Unique identifier for the campaign."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"User phone number"}),": Contact number of the user."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Timestamp"}),": Date and time of the interaction."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Prerequisites"})}),"\n",(0,o.jsx)(n.p,{children:"Consider the following prerequisite to automatically update records in Google sheet:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Google sheets integration"}),": Configure the integration with ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/appConfiguration/google-sheets#scope-of-integration",children:"Google sheets"}),".\n",(0,o.jsx)(n.img,{src:"https://i.imgur.com/DKcySrP.png",alt:""})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Create an event"}),": Set up an ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/events/event-hub",children:"event"})," in the ",(0,o.jsx)(n.strong,{children:"Engagement"})," section to trigger the data capture flow.\n",(0,o.jsx)(n.img,{src:"https://i.imgur.com/RqrWo8v.png",alt:""})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"steps-to-automatically-update-a-google-sheet",children:"Steps to automatically update a Google sheet"}),"\n",(0,o.jsx)(n.p,{children:"To configure a bot flow that dynamically updates a Google sheet based on user interactions, follow these steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Go to the flow editor and select the start trigger type as ",(0,o.jsx)(n.strong,{children:"Event"})," and choose the event that you have created."]}),"\n",(0,o.jsx)("img",{src:"https://i.imgur.com/x7TL32I.png",alt:"drawing",width:"50%"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Add a Variable node to store to store all template values retrieved from the quick reply event and the values of the Google sheets nodes:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"spreadSheetID"}),": Unique Google Sheet ID."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"range"}),": Defines the cell range for data insertion/deletion/updates."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"majorDimension"}),": Specifies how data is should be arranged (ROWS or COLUMNS)."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["To append new entries in new rows and to avoid overwriting existing records, use the ",(0,o.jsx)(n.strong,{children:"Google sheets"})," node to retrieve existing sheet data and store the result in an object variable."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Sample success response of GetValuesFromSheet:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-c",children:'{\n  "spreadsheetId": "1FXBz2k8m9Ys3zkJy6n8G4237q1x43Tq4nu6CdM1A66Y",\n  "valueRanges": [\n    {\n      "range": "Sheet1!A1:A5",\n      "majorDimension": "COLUMNS",\n      "values": [\n        [\n          "J",\n          "O",\n          "H",\n          "N"\n        ]\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)("img",{src:"https://i.imgur.com/ZEORR4B.png",alt:"drawing",width:"80%"}),"\n",(0,o.jsxs)(n.ol,{start:"4",children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Connect ",(0,o.jsx)(n.strong,{children:"Analytics"})," node to the Google Sheets node\u2019s fallback to capture any errors or event data for further analysis."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://i.imgur.com/4DH3WbE.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"After retrieving the sheet records, add a Function node to insert the data. The function node performs two operations:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Adjust the range value"}),": The function increments the row index by +1 to ensure new data is inserted into the next available row, avoiding any overwriting of existing records."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Output"}),": The function's output should be saved in an object variable that includes the array of values to be inserted into the sheet and the updated range for data placement."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://i.imgur.com/7j0hE4s.png",alt:""})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"A sample code to get the total length of records and to populate an array variable for inserting the records in the sheet:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-c",children:'return new Promise(resolve => {\n        // Your logic goes here\n\n    let templateName = data.variables.template_name\n    let phone = data.variables.phone\n    let campaignid = data.variables.campaignId\n\n    let qrclicked = data.variables.QRclicked\n\n    let currentTime = new Date();\n    \n\n    let currentOffset = currentTime.getTimezoneOffset();\n    let ISTOffset = 330;   // IST offset UTC +5:30 \n    let ISTTime = new Date(currentTime.getTime() + (ISTOffset + currentOffset) * 60000);\n    console.log(ISTTime, " istToday ")\n    let hoursIST = ISTTime.getHours()\n    let minutes = ISTTime.getMinutes()\n    // console.log(hoursIST, " hoursIST ")\n    // console.log(minutes, " minutes ")\n\n    let date = ISTTime.getDate()\n    let month = ISTTime.getMonth() + 1\n    let year = ISTTime.getFullYear()\n    let day = ISTTime.getDay()\n    console.log(month, "month ==")\n\n    console.log(day, "day ==")\n\n    let d = `${date}/${month}/${year}`\n   let t\n\n    if (hoursIST >= 0 && hoursIST < 12) {\n        t = " AM";\n    } else if (hoursIST >= 12 && hoursIST < 24) {\n      t = " PM";\n    }\n    let time = `${d}, ${hoursIST}:${minutes} ${t}`\n    console.log(time, " time ")\n\n\n    let myArray = [\n                    [phone], \n                    [qrclicked],\n                    [templateName],\n                    [campaignid],\n                    [time]\n                     ]\n\n console.log(myArray, " ==== my array ====")\n \n    let y = data.variables.obj.valueRanges[0].values.length\n    // console.log(data.variables.obj, " === data.variables.obj")\n    console.log(y, "====== Number of Records =====" )\n //Range = Main!A:Z\n    let range = `Main!A${y + 1}:Z`\n\n\n    let obj = {\n        "a": myArray,\n        "b": range\n    }\n\n     console.log(obj," === obj ===")\n        resolve(obj);\n    });                                 \n'})}),"\n",(0,o.jsxs)(n.ol,{start:"6",children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Add a Variable node to modify the ",(0,o.jsx)(n.strong,{children:"majorDimension"}),' variable to "COLUMNS". This ensures each array record is added to a separate column within the sheet.']}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://i.imgur.com/Rn8RqLu.png",alt:""})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Example"}),": If your data is:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:" [\n    [1, 2, 3],\n    [4, 5, 6]\n]\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"If major dimension is rows the data in the sheets will be added as vertically"}),"\n",(0,o.jsx)("img",{src:"https://i.imgur.com/vfecWkN.png",alt:"drawing",width:"60%"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"If the major dimension is COLUMNS then the data shall be added as horizontally."}),"\n",(0,o.jsx)("img",{src:"https://i.imgur.com/dkAHzID.png",alt:"drawing",width:"60%"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.ol,{start:"7",children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"In Google sheets nodes, define the following:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Select ",(0,o.jsx)(n.strong,{children:"Insert/UpdateValuesInSheet"})," option from Google Sheets node."]}),"\n",(0,o.jsx)(n.li,{children:"Pass the parameters such as majorDimension, Range (updated value from step 5), values (data array to be inserted), spreadSheetID."}),"\n",(0,o.jsx)(n.li,{children:"Store the node output in an object variable."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://i.imgur.com/c7drrps.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Connect ",(0,o.jsx)(n.strong,{children:"Analytics"})," node to the Google sheet's node fallback. This node will capture the event name and error response for analysis."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://i.imgur.com/4DH3WbE.png",alt:""})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The screenshot below illustrates how user interaction data from a campaign is automatically inserted into a Google sheet:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://i.imgur.com/noNjlSl.png",alt:""})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);