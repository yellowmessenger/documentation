"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[49238],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var o=n(96540);const a={},s=o.createContext(a);function i(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(s.Provider,{value:t},e.children)}},39914:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"cookbooks/studio/usecases-functions","title":"Function use cases","description":"---","source":"@site/docs/cookbooks/studio/usecases-functions.md","sourceDirName":"cookbooks/studio","slug":"/cookbooks/studio/usecases-functions","permalink":"/docs/cookbooks/studio/usecases-functions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Function use cases","sidebar_label":"Function use cases"},"sidebar":"cookbooks","previous":{"title":"Trigger a specific bot flow","permalink":"/docs/cookbooks/studio/trigger-bot"},"next":{"title":"Capture events when a ticket is assigned","permalink":"/docs/cookbooks/studio/ticket-assignedevent"}}');var a=n(74848),s=n(28453);const i={title:"Function use cases",sidebar_label:"Function use cases"},r=void 0,d={},l=[{value:"1. Display weather information in a carousel node",id:"1-display-weather-information-in-a-carousel-node",level:2},{value:"Objective",id:"objective",level:3},{value:"Steps to implement",id:"steps-to-implement",level:3},{value:"1.1. Add the weather API",id:"11-add-the-weather-api",level:4},{value:"1.2. Create a flow and add the API node",id:"12-create-a-flow-and-add-the-api-node",level:4},{value:"1.3. Store the API response",id:"13-store-the-api-response",level:4},{value:"1.4. Write a function to format the response",id:"14-write-a-function-to-format-the-response",level:4},{value:"1.5. Include a function node",id:"15-include-a-function-node",level:3},{value:"1.6. Populate the Carousel Node",id:"16-populate-the-carousel-node",level:3},{value:"2. Calculate a date 45 days before today",id:"2-calculate-a-date-45-days-before-today",level:2},{value:"Objective",id:"objective-1",level:3},{value:"Steps to implement",id:"steps-to-implement-1",level:3},{value:"2.1. Create a flow and define a variable node",id:"21-create-a-flow-and-define-a-variable-node",level:4},{value:"2.2. Display the captured date",id:"22-display-the-captured-date",level:4},{value:"2.3. Write a function to calculate the new date",id:"23-write-a-function-to-calculate-the-new-date",level:4},{value:"2.4. Display the computed date",id:"24-display-the-computed-date",level:4},{value:"Example output",id:"example-output",level:3},{value:"3. Code snippet for sentence autocompletion",id:"3-code-snippet-for-sentence-autocompletion",level:2},{value:"4. Code snippet for BASE64 decoding",id:"4-code-snippet-for-base64-decoding",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.hr,{}),"\n",(0,a.jsxs)(t.p,{children:["This guide introduces you to different ways of using ",(0,a.jsx)(t.strong,{children:"Functions"})," in ",(0,a.jsx)(t.strong,{children:"Automation"}),". It shows you how to automate tasks within your bot in a simple and easy way. By exploring practical examples and clear explanations, you'll learn how to use Functions to streamline your bot\u2019s capabilities."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"1-display-weather-information-in-a-carousel-node",children:"1. Display weather information in a carousel node"}),"\n",(0,a.jsx)(t.h3,{id:"objective",children:"Objective"}),"\n",(0,a.jsx)(t.p,{children:"Show real-time weather data within a carousel format in your bot interface."}),"\n",(0,a.jsx)(t.h3,{id:"steps-to-implement",children:"Steps to implement"}),"\n",(0,a.jsx)(t.h4,{id:"11-add-the-weather-api",children:"1.1. Add the weather API"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/api/add-api#1-add-a-new-api-using-url",children:"Add the Weather API"})," to your bot platform to enable it to retrieve weather information."]}),"\n",(0,a.jsx)(t.h4,{id:"12-create-a-flow-and-add-the-api-node",children:"1.2. Create a flow and add the API node"}),"\n",(0,a.jsxs)(t.p,{children:["Next, ",(0,a.jsx)(t.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/Flows/journeys#2-create-a-flow",children:"create a flow"})," and insert an ",(0,a.jsx)(t.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes/action-nodes-overview/api-node",children:"API node"}),". Use this node to call the Weather API and fetch real-time data."]}),"\n",(0,a.jsx)("img",{src:"https://i.imgur.com/Jklf0Ia.png",width:"80%"}),"\n",(0,a.jsx)(t.h4,{id:"13-store-the-api-response",children:"1.3. Store the API response"}),"\n",(0,a.jsx)(t.p,{children:"Store the API response in an object variable so that you can extract required information easily using functions."}),"\n",(0,a.jsx)("img",{src:"https://i.imgur.com/dKN4rrr.png",width:"80%"}),"\n",(0,a.jsx)(t.h4,{id:"14-write-a-function-to-format-the-response",children:"1.4. Write a function to format the response"}),"\n",(0,a.jsxs)(t.p,{children:["Navigate to the ",(0,a.jsx)(t.strong,{children:"Functions"})," section and write a function to process the saved API response. Ensure that the response is formatted to match the dynamic structure required for a carousel display. For more details on dynaamic carousel formatting, refer ",(0,a.jsx)(t.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes/message-nodes1/carousel-message-node",children:"here"}),"."]}),"\n",(0,a.jsx)("img",{src:"https://i.imgur.com/Jklf0Ia.png",width:"80%"}),"\n",(0,a.jsx)(t.h3,{id:"15-include-a-function-node",children:"1.5. Include a function node"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["Add a ",(0,a.jsx)(t.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes/action-nodes-overview/function-node",children:"Function Node"})," in the flow."]}),"\n",(0,a.jsx)(t.li,{children:"Choose the function you created."}),"\n",(0,a.jsx)(t.li,{children:"Store the response in your preferred variable and mention its datatype  (e.g., object, string, etc.) for clarity."}),"\n"]}),"\n",(0,a.jsx)("img",{src:"https://i.imgur.com/PQhxMKE.png",width:"80%"}),"\n",(0,a.jsx)(t.h3,{id:"16-populate-the-carousel-node",children:"1.6. Populate the Carousel Node"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["Insert a ",(0,a.jsx)(t.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes/message-nodes1/message-nodes",children:"Carousel Node"})," in the flow."]}),"\n",(0,a.jsxs)(t.li,{children:["In the ",(0,a.jsx)(t.strong,{children:"Fetch from"})," field, select the variable with the formatted weather data."]}),"\n",(0,a.jsx)(t.li,{children:"Display the data in the carousel format."}),"\n"]}),"\n",(0,a.jsx)("img",{src:"https://i.imgur.com/Mlh4Xzv.png",width:"80%"}),"\n",(0,a.jsxs)(t.admonition,{type:"note",children:[(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Alternate Method"}),": You can directly pass the function into the ",(0,a.jsx)(t.strong,{children:"Parse API response"})," field if you prefer not to use the Function Node."]}),(0,a.jsx)("img",{src:"https://i.imgur.com/eIReCNg.png",width:"80%"})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"2-calculate-a-date-45-days-before-today",children:"2. Calculate a date 45 days before today"}),"\n",(0,a.jsx)(t.h3,{id:"objective-1",children:"Objective"}),"\n",(0,a.jsx)(t.p,{children:"Compute a date that is 45 days before the current date and display it in the bot."}),"\n",(0,a.jsx)(t.h3,{id:"steps-to-implement-1",children:"Steps to implement"}),"\n",(0,a.jsx)(t.h4,{id:"21-create-a-flow-and-define-a-variable-node",children:"2.1. Create a flow and define a variable node"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/Flows/journeys#2-create-a-flow",children:"Create a new flow"})," and add a ",(0,a.jsx)(t.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes/action-nodes-overview/variables-node",children:"variable node"}),". Define a variable - ",(0,a.jsx)(t.strong,{children:"bookingDate"})," and assign it the value ",(0,a.jsx)(t.code,{children:"{{{date.timestamp}}}"})," , which captures the current date and time."]}),"\n",(0,a.jsx)("img",{src:"https://i.imgur.com/e2JnHnf.png",width:"80%"}),"\n",(0,a.jsx)(t.h4,{id:"22-display-the-captured-date",children:"2.2. Display the captured date"}),"\n",(0,a.jsxs)(t.p,{children:["Insert a ",(0,a.jsx)(t.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes/message-nodes1/message-nodes",children:"Text Node"})," and display the ",(0,a.jsx)(t.strong,{children:"bookingDate"})," value to verify that the current date has been captured correctly."]}),"\n",(0,a.jsx)("img",{src:"https://i.imgur.com/aQMaaUM.png",width:"80%"}),"\n",(0,a.jsx)(t.h4,{id:"23-write-a-function-to-calculate-the-new-date",children:"2.3. Write a function to calculate the new date"}),"\n",(0,a.jsx)(t.p,{children:"Now, create a function that processes the timestamp and subtracts 45 days from the current date."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:'return new Promise(resolve => {\n    // Retrieve the current booking date from the variables\n    let bookingDate = data.variables.bookingDate;\n\n    // Convert the booking date string into a Date object\n    let dt = new Date(bookingDate);\n\n    // Subtract 45 days from the current date\n    dt.setDate(dt.getDate() - 45);\n\n    // Format the new date to a localized string\n    let pdate = dt.toLocaleString();\n\n    // Split the formatted date string to isolate the date components\n    const myArraydate = pdate.split(",");\n\n    // Further split the date component to extract day, month, and year\n    const myArray = myArraydate[0].split("/");\n\n    // Construct a new date string in the desired format (MM/DD/YYYY)\n    let newDate = myArray[1] + "/" + myArray[0] + "/" + myArray[2];\n\n    // Update the bookingDate variable with the newly formatted date\n    data.variables.bookingDate = newDate;\n\n    // Resolve the promise with the new date string\n    resolve(newDate);\n});\n'})}),"\n",(0,a.jsx)(t.h4,{id:"24-display-the-computed-date",children:"2.4. Display the computed date"}),"\n",(0,a.jsxs)(t.p,{children:["Insert another ",(0,a.jsx)(t.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes/message-nodes1/message-nodes",children:"Text Node"})," to display the date that was calculated (45 days before the current date). Use the variable containing the new date."]}),"\n",(0,a.jsx)("img",{src:"https://i.imgur.com/2cCX1By.png",width:"80%"}),"\n",(0,a.jsx)(t.h3,{id:"example-output",children:"Example output"}),"\n",(0,a.jsx)(t.p,{children:"Once the flow runs, the bot will display the result to the user like this:"}),"\n",(0,a.jsx)("img",{src:"https://i.imgur.com/fioBFmp.png",width:"75%"}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"3-code-snippet-for-sentence-autocompletion",children:"3. Code snippet for sentence autocompletion"}),"\n",(0,a.jsx)(t.p,{children:"This code helps your bot suggest sentence completions based on user input. When the user starts typing, the bot looks for matches within its existing data and provides suggestions."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:'return new Promise(resolve => {\n    console.log("inside autoSuggestion");\n    let result = data.variables.autoComponents;\n    const { term } = data;\n    let suggestions = [];\n    result.forEach((hit) => {\n        if (hit.component.toLowerCase().includes(term.toLowerCase())) {\n            suggestions.push([hit.component, hit.component]);\n        }\n    });\n    resolve(suggestions);\n});\n'})}),"\n",(0,a.jsx)(t.h2,{id:"4-code-snippet-for-base64-decoding",children:"4. Code snippet for BASE64 decoding"}),"\n",(0,a.jsx)(t.p,{children:"Base64 encoding represents data using 64 ASCII characters. When an encrypted string is received via an API, we decrypt it to obtain the original object. After decoding, the file can be uploaded to a server, such as Yellow's server. Here's an example that demonstrates decoding, uploading, and sharing the file URL."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"// Execute an API call and wait for the response\nlet call_api = await app.executeApi('api_name', { argument: _value });\n\n// Parse the JSON response from the API call\nlet api_data = JSON.parse(call_api.body);\n\n// Log the API data for debugging or tracking purposes\napp.log(api_data, \"#####API DATA\");\n\n// Decode the base64-encoded file from the API response\nlet buffer = new Buffer.from(api_data.obj_name, \"base64\");\n\n// Upload the decoded file to the Yellow.ai server and get the file URL\nlet file_url = await app.uploadFile(buffer, 'File.pdf'); // 'File.pdf' is the name of the uploaded file\n\n// Optional: Uncomment the line below to send the file as a document to the user\n// await app.sendDocument(file_url, { caption: \"FILE\", filename: 'File.pdf', mime: 'application/pdf' });\n\n// Create and send a card with a download link for the uploaded file\nawait app.sendCards([\n    {\n        title: \"Kindly download the same as PDF\", // Title of the card\n        actions: [{\n            title: \"DOWNLOAD\", // Action button title\n            url: file_url // URL for downloading the file\n        }]\n    }\n]);\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);