"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[98054],{9232:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"platform_concepts/analyze/analyseoverview","title":"Analytics for Dynamic chat node","description":"Analyze chat metrics provides insights into bot performance, focusing on Dynamic chat nodes. Key metrics include total user sessions, node completion rates, inputs captured, node failures, and token consumption. These metrics help assess user engagement, track failures, and help to optimize bot interactions to meet business goals.","source":"@site/docs/platform_concepts/analyze/analyseoverview.md","sourceDirName":"platform_concepts/analyze","slug":"/platform_concepts/analyze/analyseoverview","permalink":"/docs/platform_concepts/analyze/analyseoverview","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Analytics for Dynamic chat node","sidebar_label":"Chat metrics"},"sidebar":"platform_concepts","previous":{"title":"Conversations","permalink":"/docs/platform_concepts/analyze/chat-logs"},"next":{"title":"Message view","permalink":"/docs/platform_concepts/analyze/training-performance"}}');var i=t(74848),o=t(28453);const r={title:"Analytics for Dynamic chat node",sidebar_label:"Chat metrics"},a=void 0,c={},l=[];function h(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Analyze chat metrics"})," provides insights into bot performance, focusing on Dynamic chat nodes. Key metrics include total user sessions, node completion rates, inputs captured, node failures, and token consumption. These metrics help assess user engagement, track failures, and help to optimize bot interactions to meet business goals."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://imgur.com/w9Uy0tt.png",alt:"image"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"These metrics can be filtered for a particular time-range by clicking the data dropdown on the top right."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The Chat Metrics tab offers the following widgets which can be used for the user decisions / business goals/ billing purpose:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Total user sessions"}),": This widget shows the overall count of sessions that took place between users and the bot during the chosen time frame, specifically when utilizing dynamic chat nodes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Node user stats"}),": Node user stats offer insights into user interactions with the Dynamic chat node. For instance, if 100 people initially engaged with the chat node, and 40 discontinued their participation during the conversation, the remaining 60 users either exited the flow upon request, submitted all required information, or successfully reached the goal set in the dynamic chat node, resulting in a 60% completion rate.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Users entered"}),": This represents the count of unique users who entered the dynamic chat node (same user can enter the flow more than once increasing the count)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Users dropped"}),": This indicates the number of users who abandoned the conversation or remained unresponsive for over 24 hours."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Users completed"}),": This shows the number of users who either supplied all mandatory inputs, attained the business objective specified in the dynamic chat node, or were allowed to exit the node as per their request."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Completion rate"}),": This metric signifies the completion rate of the Dynamic chat node, calculated as (Users Completed / Users Entered) * 100."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)("img",{src:"https://imgur.com/dv6bOxq.png",alt:"drawing",width:"100%"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.strong,{children:"View Chat"})," link next to the relevant node name, to access conversation logs filtered by the chosen time frame, flow name, and node name within that flow."]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Inputs Captured"}),": This widget tracks the number of users who have supplied specific information, such as their name and phone number, to the bot while utilizing the dynamic chat node. You can narrow down the data for each node by selecting the node name from the dropdown menu located at the bottom.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Input"}),": Displays the user's utterance provided to the bot."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Count"}),": Shows how many times a specific utterance has been used on the bot."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)("img",{src:"https://imgur.com/adXoNwK.png",alt:"drawing",width:"50%"}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Node failures"}),": This widget highlights the reasons behind bot failures during specific interactions. You can refine the data for each node by choosing the node name from the dropdown menu at the bottom."]}),"\n"]}),"\n",(0,i.jsx)("img",{src:"https://imgur.com/7vVYoQw.png",alt:"drawing",width:"90%"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Click the ",(0,i.jsx)(n.strong,{children:"View Chat"})," link next to the relevant reason, to view conversation logs filtered by the chosen time frame for a specific node within the flow and categorized under the node failure reason."]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Token consumption"}),": This widget tracks the utilization of tokens in dynamic chat node usage, providing information on various aspects:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Model"}),": Indicates the specific LLM model employed, such as GPT-3.5 Turbo, etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Credentials"}),": Refers to the source of credentials, which can either be from a third-party provider or from yellow.ai."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Provider"}),": Identifies the service provider, which could be Azure, Open AI, Anthropic, Yellow G, etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prompt tokens"}),": Represents the input tokens furnished to the model."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response (completion) tokens"}),": Denotes the output tokens generated by the model."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)("img",{src:"https://imgur.com/tmdeOcs.png",alt:"drawing",width:"100%"}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Tokens explained:"})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Tokens"})," can be understood as fragments of words. Prior to processing prompts through the API, the input is divided into tokens. It's worth noting that tokens don't always align exactly with the beginnings or endings of words; they can encompass trailing spaces and even sub-words. To provide a sense of token lengths, here are some helpful guidelines:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"1 token approximately equals 4 characters in English."}),"\n",(0,i.jsx)(n.li,{children:"1 token is roughly equivalent to 3/4 words."}),"\n",(0,i.jsx)(n.li,{children:"About 100 tokens correspond to approximately 75 words."}),"\n",(0,i.jsx)(n.li,{children:"Alternatively, 1-2 sentences are encompassed in approximately 30 tokens, while a single paragraph is around 100 tokens."}),"\n",(0,i.jsx)(n.li,{children:"Approximately 1,500 words are represented by roughly 2048 tokens."}),"\n"]}),(0,i.jsx)(n.p,{children:"If you wish to explore how various providers calculate token quantities, you can refer to the following resources:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://platform.openai.com/tokenizer",children:"Open AI token"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://azure.microsoft.com/en-in/pricing/calculator/?service=openai-service",children:"Azure Open AI token"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.anthropic.com/pricing#api",children:"Anthropic token"})}),"\n"]})]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(96540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);