"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[86075],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(96540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},74501:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"platform_concepts/AIAgent/conversations","title":"Configure AI agent conversations","description":"AI agent conversations let your users interact naturally with your agent by asking questions and getting relevant answers or help. Instead of building complex rules, you set up conversations using simple prompts and instructions.","source":"@site/docs/platform_concepts/AIAgent/conversations.md","sourceDirName":"platform_concepts/AIAgent","slug":"/platform_concepts/AIAgent/conversations","permalink":"/docs/platform_concepts/AIAgent/conversations","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Configure AI agent conversations","sidebar_label":"Configure AI agent conversations"}}');var i=s(74848),r=s(28453);const o={title:"Configure AI agent conversations",sidebar_label:"Configure AI agent conversations"},a=void 0,l={},c=[{value:"Key components of the AI Agent conversation",id:"key-components-of-the-ai-agent-conversation",level:3},{value:"Setup agent conversations",id:"setup-agent-conversations",level:2},{value:"Step 1: Create a new Agent",id:"step-1-create-a-new-agent",level:4},{value:"Step 2: Design Conversation",id:"step-2-design-conversation",level:4},{value:"Step 3: Add Actions in Prompt section",id:"step-3-add-actions-in-prompt-section",level:4},{value:"Step 4: Call workflow",id:"step-4-call-workflow",level:4},{value:"Step 5: Variables",id:"step-5-variables",level:4},{value:"Step 6: Test the Agent",id:"step-6-test-the-agent",level:4},{value:"Step 7: Preview and Deploy",id:"step-7-preview-and-deploy",level:4},{value:"Best practices for creating an Agent",id:"best-practices-for-creating-an-agent",level:2},{value:"Start trigger",id:"start-trigger",level:3},{value:"Prompts",id:"prompts",level:3},{value:"Add Actions to your AI agent prompts",id:"add-actions-to-your-ai-agent-prompts",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"AI agent conversations let your users interact naturally with your agent by asking questions and getting relevant answers or help. Instead of building complex rules, you set up conversations using simple prompts and instructions."}),"\n",(0,i.jsx)(n.p,{children:"Our prompt-based configuration makes it easy to create flexible, human-like dialogues that can handle anything from basic questions to more advanced tasks. You only add extra logic when needed, keeping the setup simple and efficient."}),"\n",(0,i.jsx)(n.p,{children:"This approach is more efficient because it:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Understands user intent more effectively"}),"\n",(0,i.jsx)(n.li,{children:"Responds with contextual relevance"}),"\n",(0,i.jsx)(n.li,{children:"Eliminates the need for complex scripting or flowchart-like designs"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"key-components-of-the-ai-agent-conversation",children:"Key components of the AI Agent conversation"}),"\n",(0,i.jsx)(n.p,{children:"The conversation design is modular and built with flexibility in mind. You can configure the following:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Start triggers"})," \u2013 Detect user intent and launch the appropriate conversation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prompts"})," \u2013 Define how the AI agent interacts, asks questions, and provides answers."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Actions"})," \u2013 Collect user inputs, handle fallback scenarios, or trigger backend logic."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Variables"})," \u2013 Store user inputs and context to maintain continuity throughout the conversation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Workflows"})," \u2013 Integrate with backend systems to fetch, process, or update data."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"setup-agent-conversations",children:"Setup agent conversations"}),"\n",(0,i.jsx)(n.p,{children:"You can set up agent conversations using Start trigger and Prompts, which define how and when the AI agent initiates and responds during a conversation."}),"\n",(0,i.jsx)(n.p,{children:"To set up agent conversations, follow these steps:"}),"\n",(0,i.jsx)(n.p,{children:"To create an agent from scratch, follow these steps:"}),"\n",(0,i.jsx)(n.h4,{id:"step-1-create-a-new-agent",children:"Step 1: Create a new Agent"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Navigate to ",(0,i.jsx)(n.strong,{children:"Automation"})," > ",(0,i.jsx)(n.strong,{children:"AI agent lab"})," > ",(0,i.jsx)(n.strong,{children:"Agents"})," > ",(0,i.jsx)(n.strong,{children:"+ New agent"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/AIagentlab.png",alt:""})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["By default, the agent name is auto-filled. To rename the agent, click the ",(0,i.jsx)(n.strong,{children:"Edit"})," icon next to the name."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/editagent.png",alt:""})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Enter the agent\u2019s name and click the ",(0,i.jsx)(n.strong,{children:"Save"})," icon."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/saveagent.png",alt:""})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The newly created agent will display under the Agents section."}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"step-2-design-conversation",children:["Step 2: ",(0,i.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/conversations",children:"Design Conversation"})]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.strong,{children:"Start trigger"})," and ",(0,i.jsx)(n.strong,{children:"Prompts"})," section, define how the conversation should begin and what the agent should say or ask."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/AGENTS.png",alt:"image"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"step-3-add-actions-in-prompt-section",children:["Step 3: ",(0,i.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/aiagent-architecture#add-actions-in-prompts",children:"Add Actions in Prompt section"})]}),"\n",(0,i.jsx)(n.p,{children:"Within prompts, use Get Input actions to collect user information such as name, email, or booking details."}),"\n",(0,i.jsxs)(n.h4,{id:"step-4-call-workflow",children:["Step 4: ",(0,i.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/call-workflow",children:"Call workflow"})]}),"\n",(0,i.jsx)(n.p,{children:"Use the Call Workflow action to trigger backend logic. Workflows allow the agent to fetch or store data by integrating with APIs or databases to enable dynamic and automated conversations."}),"\n",(0,i.jsxs)(n.h4,{id:"step-5-variables",children:["Step 5: ",(0,i.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/aigent-variables",children:"Variables"})]}),"\n",(0,i.jsx)(n.p,{children:"Store user responses or fetched values in variables. These variables can be reused across the conversation for data handling."}),"\n",(0,i.jsxs)(n.h4,{id:"step-6-test-the-agent",children:["Step 6: ",(0,i.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/manage-conversation#ai-copilot",children:"Test the Agent"})]}),"\n",(0,i.jsx)(n.p,{children:"Use Copilot or Test Suites to simulate user conversations. Verify how the agent responds, whether logic is working correctly, and if data integrations behave as expected."}),"\n",(0,i.jsxs)(n.h4,{id:"step-7-preview-and-deploy",children:["Step 7: ",(0,i.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/manage-conversation",children:"Preview and Deploy"})]}),"\n",(0,i.jsx)(n.p,{children:"Once the agent behavior is validated, save all configurations. The agent is now ready to be published on channels such as WhatsApp, Voice, and other channels."}),"\n",(0,i.jsx)(n.h2,{id:"best-practices-for-creating-an-agent",children:"Best practices for creating an Agent"}),"\n",(0,i.jsx)(n.p,{children:"Designing an Agent is important in the conversation, data handling, actions, and testing. Follow these best practices while creating agents:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Define the purpose clearly"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Identify the key goals the agent should achieve (example, booking, support, FAQs)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Start with a Conversation design"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use the Start trigger to set user expectations with a clear welcome message."}),"\n",(0,i.jsx)(n.li,{children:"Define prompts for common use cases with static and dynamic prompts."}),"\n",(0,i.jsx)(n.li,{children:"Guide users step-by-step using friendly and  conversational language."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Use Prompts wisely"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use Static Prompts to display information without expecting input."}),"\n",(0,i.jsx)(n.li,{children:"Use Get Input prompts to collect user data (name, email, phone, Location)."}),"\n",(0,i.jsx)(n.li,{children:"Keep prompts short and focused, avoid asking multiple questions in one message."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Add Workflows for dynamic logic"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use Call Workflow actions to fetch or push data from/to APIs or databases."}),"\n",(0,i.jsx)(n.li,{children:"Ensure workflows are modular and reusable across different agents or flows."}),"\n",(0,i.jsx)(n.li,{children:"Handle API errors and add fallback responses"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Use Variables"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Store user responses or API outputs in variables and reuse them across the conversation."}),"\n",(0,i.jsxs)(n.li,{children:["Personalize conversations using variables (example, ",(0,i.jsx)(n.code,{children:'"Hi {{user_name}}")'}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Follow naming conventions (example, user_name, booking_id) to maintain clarity."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.strong,{children:"Help"})," button on the top. Help section provides a sample structure that shows how a conversation should be designed. It includes examples of how to define start triggers and write prompts. This helps users understand how to structure conversations."]})}),"\n",(0,i.jsx)(n.h3,{id:"start-trigger",children:"Start trigger"}),"\n",(0,i.jsx)(n.p,{children:"A Start trigger is the initial message that initiates a conversation between the AI agent and the user. It acts as the entry point that tells the AI agent when to begin a specific conversation."}),"\n",(0,i.jsx)(n.p,{children:"Start trigger ensures that the right conversation is initiated at the right time. When a user's message matches the trigger (example, a keyword or intent), the configured conversation will be triggered."}),"\n",(0,i.jsx)(n.p,{children:"Types of inputs that can be used as Start Triggers:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Phrases"}),' \u2013 Direct user expressions like "I want to book a demo".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Intents"}),' \u2013 User goals, such as "Loan inquiry" or "Product help".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Keywords"}),' \u2013 Specific terms such as "support", "pricing", "Loan inquiry", or "Product help", "apply now".']}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Examples of start triggers"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'When the user says they want to apply for a loan, such as: "I want to apply for a loan", "Help me get a loan", "Apply for personal loan", or similar variations.'}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'When the user wants to cancel a flight ticket, such as: "I want to cancel my flight ticket", "Help me cancel my flight", "Need to cancel my plane ticket", "Cancel my trip booking", or similar variations.'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/starttrigger.png",alt:""})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"prompts",children:"Prompts"}),"\n",(0,i.jsx)(n.p,{children:"A prompt is a set of instructions that tells the AI agent what to say or do during a conversation. It guides the conversation flow and helps the agent respond appropriately based on the user\u2019s input"}),"\n",(0,i.jsxs)(n.p,{children:["In conversation design, a prompt can be a question, confirmation, statement, ",(0,i.jsx)(n.a,{href:"#step-3-add-actions-in-prompt-section",children:"call to action"})," (Get input, call worflow, or call fallback), or ",(0,i.jsx)(n.a,{href:"#step-5-variables",children:"Variables"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Prompts can be used to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ask the user a question and wait for a reply"}),"\n",(0,i.jsx)(n.li,{children:"Show information or messages"}),"\n",(0,i.jsx)(n.li,{children:"Trigger backend tasks (like calling an API or updating a database)"}),"\n",(0,i.jsx)(n.li,{children:"Validate user inputs and handle errors"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"A well-written prompt keeps the conversation clear and natural. Key elements include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tone"}),": Tone sets the interaction between AI agent and user. Examples:",(0,i.jsx)("br",{})," * ",(0,i.jsx)(n.strong,{children:"Friendly"}),': "Hey there! What can I help you with today?"  ',(0,i.jsx)("br",{}),"* ",(0,i.jsx)(n.strong,{children:"Professional"}),': "Please provide your invoice number to proceed".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Clarity"}),": Use simple, direct language. Avoid technical jargon, complex phrases, or ambiguous terms. Clear vs Vague example:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"When would you like to schedule your appointment? (Clear and actionable)"}),"\n",(0,i.jsx)(n.li,{children:"Provide a preferred timeslot. (Vague and robotic)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Context"}),': Give users enough context to understand why you are asking something. This makes the conversation feel logical and purposeful.\nExample: "To check your order status, I will need your order ID".']}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Best practices"})}),"\n",(0,i.jsx)(n.p,{children:"While writing the prompts, consider the following best practices:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Keep it short and conversational"}),": Use simple, friendly language that feels natural to the user."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Handle unexpected inputs"}),": Always include fallback prompts to guide users back on track if they give incorrect or unclear responses."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Validate user input"}),": Use clear instructions and examples to show users the correct format. Example: Enter a 10-digit phone number with country code (example, +91 9876543210)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use quick replies or buttons"}),": Help users respond easily and reduce mistakes by offering predefined response options."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Below is a sample screenshot showing how prompts are written:"}),"\n",(0,i.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/promptsample1.png",alt:"drawing",width:"90%"}),"\n",(0,i.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/demo-icp.png",alt:"drawing",width:"90%"}),"\n",(0,i.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/loanemi.png",alt:"drawing",width:"90%"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"add-actions-to-your-ai-agent-prompts",children:"Add Actions to your AI agent prompts"}),"\n",(0,i.jsx)(n.p,{children:"Actions let the agent collect input, run workflows, or handle fallbacks\u2014making conversations more dynamic and goal-driven."}),"\n",(0,i.jsx)(n.p,{children:"In the Prompt section, you can add the following actions:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/get-input",children:"Get input"}),": Collect specific information from the user, such as their name, phone number, and email."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/call-workflow",children:"Call workflow"}),": Trigger an external process or function, such as retrieving data from a database, calling an API, or executing backend operations, allowing the AI agent to handle complex tasks."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/call-fallback",children:"Call a Fallback"}),": Trigger a predefined fallback action when the AI agent is unable to understand or fulfill the user\u2019s request."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["You can quickly access the above actions by using the",(0,i.jsx)(n.code,{children:"@"})," shortcut key."]})}),"\n",(0,i.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/getactions.png",alt:"drawing",width:"80%"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);