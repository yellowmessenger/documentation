"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[49904],{603905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(667294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(n),h=o,d=u["".concat(s,".").concat(h)]||u[h]||m[h]||r;return n?a.createElement(d,i(i({ref:t},c),{},{components:n})):a.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=h;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:o,i[1]=p;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},450877:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return u}});var a=n(487462),o=n(263366),r=(n(667294),n(603905)),i=["components"],p={title:"Setup WhatsApp forms",sidebar_label:"Setup WhatsApp forms"},s=void 0,l={unversionedId:"platform_concepts/channelConfiguration/whatsapp-forms",id:"platform_concepts/channelConfiguration/whatsapp-forms",title:"Setup WhatsApp forms",description:"WhatsApp (WA) forms are predefined structured interactions in WhatsApp AI-agents. The forms are designed to guide users through specific tasks or conversations. These forms facilitate various actions, including:",source:"@site/docs/platform_concepts/channelConfiguration/whatsapp-forms.md",sourceDirName:"platform_concepts/channelConfiguration",slug:"/platform_concepts/channelConfiguration/whatsapp-forms",permalink:"/docs/platform_concepts/channelConfiguration/whatsapp-forms",draft:!1,tags:[],version:"current",frontMatter:{title:"Setup WhatsApp forms",sidebar_label:"Setup WhatsApp forms"},sidebar:"platform_concepts",previous:{title:"Get WhatsApp opt-in",permalink:"/docs/platform_concepts/channelConfiguration/wa-opt-in"},next:{title:"Create WhatsApp bot",permalink:"/docs/platform_concepts/channelConfiguration/WA-bot-bestpractices"}},c={},u=[{value:"Create a form",id:"create-a-form",level:2},{value:"Integrate WhatsApp form with your Bot",id:"integrate-whatsapp-form-with-your-bot",level:4}],m={toc:u};function h(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"WhatsApp (WA) forms are predefined structured interactions in WhatsApp AI-agents. The forms are designed to guide users through specific tasks or conversations. These forms facilitate various actions, including:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Scheduling and confirming appointments"),": Users can easily confirm bookings through guided steps."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Collecting user feedback"),": Businesses can gather valuable feedback by displaying users with structured questions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Collecting user information"),": Businesses can collect required user data, such as contact details, preferences, or other relevant information.")),(0,r.kt)("p",null,"Here is how a sample WhatsApp form look in a chatbot:"),(0,r.kt)("p",null,"   ",(0,r.kt)("img",{parentName:"p",src:"https://imgur.com/Bw4inNd.png",alt:null})),(0,r.kt)("h2",{id:"create-a-form"},"Create a form"),(0,r.kt)("p",null,"To set up a form for WhatsApp, you should have a ",(0,r.kt)("a",{parentName:"p",href:"https://docs.yellow.ai/docs/platform_concepts/channelConfiguration/whatsapp-configuration#connect-your-whatsapp-business-account"},"WhatsApp Business Account")," (WABA). Each form is assigned a unique flow ID, which can be found next to the flow name or within the flow URL. For detailed instructions, refer to ",(0,r.kt)("a",{parentName:"p",href:"https://developers.facebook.com/docs/whatsapp/flows/reference/flowjson"},"Facebook's documentation"),"."),(0,r.kt)("p",null,"To create a form, follow these steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Log on to ",(0,r.kt)("a",{parentName:"p",href:"https://business.facebook.com/settings"},"Facebook Business Manager")," (FBM).")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Navigate to ",(0,r.kt)("strong",{parentName:"p"},"Account tools")," > ",(0,r.kt)("strong",{parentName:"p"},"Flows"),"."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://imgur.com/RJQzTac.png",alt:null}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In ",(0,r.kt)("strong",{parentName:"p"},"Create flow")," section, enter the ",(0,r.kt)("strong",{parentName:"p"},"Name")," of the flow")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select your preferred template. Choose either with endpoint or without endpoint, depending on your use case.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Choose a category based on your business use case.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Create"),"."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://imgur.com/t4hqnUd.png",alt:null})))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You can view the selected endpoint URL under the ",(0,r.kt)("strong",{parentName:"p"},"Preview")," section."),(0,r.kt)("img",{src:"https://imgur.com/VgBi8Gi.png",alt:"drawing",width:"70%"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This will create a form in draft mode. You can modify this form as required by editing the JSON script. Refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://developers.facebook.com/docs/whatsapp/flows/reference/components"},"Facebook documentation")," to learn more about the syntax as well as the components to build the Form.\n"))),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Under ",(0,r.kt)("strong",{parentName:"p"},"Edit")," flow, click the ",(0,r.kt)("strong",{parentName:"p"},"Setup")," icon. Ensure that the flow version is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"Version: 6.0")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"data_api_version: 3.0"),"."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://imgur.com/OfLfoGv.png",alt:null})))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Once you have finished modifying the script and running successfully, you need to set up the endpoint. ")),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To set up the endpoint URI, use the following Node.js script to generate an encrypted key."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://imgur.com/109mCgM.png",alt:null})))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const crypto = require('crypto');\nconst algorithm = 'aes-256-ctr';\nconst password = 'tL9M3ah5MdUo6wkg1IKqSZRquoPl1V3N';\nconst encrypt = (text, cipher = crypto.createCipher(algorithm, password), encoding = 'hex') => {\n    let crypted = cipher.update(text, 'utf8', encoding);\n    crypted += cipher.final(encoding);\n    return crypted;\n};\nconsole.log(\"encrypt::\", encrypt('{{botId}}&&{{whatspp_number_with_country_code}}'));\n")),(0,r.kt)("ol",{start:9},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Setup the endpoint URI as explained below:"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"After you run this script, you will get an {{encryted_key}}, so your Endpoint URI will be:\n",(0,r.kt)("inlineCode",{parentName:"li"},"https://{{host_name}}/integrations/whatsapp/extension/channel/{{encryted_key}}")),(0,r.kt)("li",{parentName:"ol"},"Enter the host name of the AI Agent (Example: cloud.yellow.ai) in {{host_name}} and generated key in  {{encrypted_key}}. You may encounter a version deprecation warning while running this script. You can ignore this warning message."),(0,r.kt)("li",{parentName:"ol"},"After configuring the endpoint URL, contact the ",(0,r.kt)("a",{parentName:"li",href:"mailto:customersuccess@yellow.ai"},"platform support team")," to connect the Meta App. Provide the Flow ID, Bot ID, and the associated WhatsApp number. Note that once submitted, the Meta App cannot be changed."),(0,r.kt)("li",{parentName:"ol"},"In ",(0,r.kt)("strong",{parentName:"li"},"Add phone number"),", enter the phone number for which you want to create the form and test it. "),(0,r.kt)("li",{parentName:"ol"},"In ",(0,r.kt)("strong",{parentName:"li"},"Sign public key"),", enter the Endpoint URI provided by the delivery team. Contact the delivery team to obtain the URI.\n",(0,r.kt)("img",{parentName:"li",src:"https://imgur.com/xkQPeHo.png",alt:null})),(0,r.kt)("li",{parentName:"ol"},"Select ",(0,r.kt)("strong",{parentName:"li"},"Connect Meta app")," to enable communication between the flow and your endpoint.\n",(0,r.kt)("img",{parentName:"li",src:"https://imgur.com/I7hILAm.png",alt:null})," "),(0,r.kt)("li",{parentName:"ol"},"In ",(0,r.kt)("strong",{parentName:"li"},"Health check"),", verify if the endpoint URL is responding correctly."),(0,r.kt)("li",{parentName:"ol"},"Click ",(0,r.kt)("strong",{parentName:"li"},"Submit"),".")))),(0,r.kt)("h4",{id:"integrate-whatsapp-form-with-your-bot"},"Integrate WhatsApp form with your Bot"),(0,r.kt)("p",null,"Once you have created your WhatsApp forms, you can use them in your AI agent's (bot) flow as explained below:``"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create an ",(0,r.kt)("inlineCode",{parentName:"li"},"initExtensionWA")," on the bot by adding the following function to the bot:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'return new Promise(resolve => {\n   let payload = {\n       finalData: {}\n   }\n   console.log("==logging initScreen 1st function==", payload)\n   resolve({ data: payload });\n});\n')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"To log the data from the Whatsapp form, create another function called ",(0,r.kt)("inlineCode",{parentName:"li"},"leadGenFunction"),". You need to use this function in your bot journey after executing step 5.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'return new Promise(resolve => {\n   // Step 1: Construct the payload for extension_message_response\n   console.log("logging Data from WA Form", data)\n   // Step 2: Create a wrapper object for the payload\n   let val = {\n       finalData: {}\n   };\n   resolve({ data: val });\n}) \n')),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Run the below API only once to set up your flow.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-curl"},"curl --location 'https://{{host}}/integrations/whatsapp/extension/create-extension?bot={{botId}}' \\\n--header 'Content-Type: application/json' \\\n--header 'x-api-key: {{apiKey}}' \\\n--data '{\n    \"extensionId\": \"{{extensionId}}\",\n    \"wellJson\": {\n           paste the copy of your Form's JSON script here exactly as it is on FBM\n            }\n}'\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Once your form setup is completed, you can now add it to your bot flows.")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Run the below API only once to setup the form.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"FIRST SCREEN NAME")," as per your first screen\u2019s name in your JSON script.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'curl --location \'https://{{host}}/integrations/whatsapp/extension/steps?bot={{botId}}\' \\\n--header \'Content-Type: application/json\' \\\n--header \'x-api-key: {{apiKey}}\' \\\n--data \'{\n    "extensionId": "{{extensionId}}",\n    "steps": {\n        "INIT": [\n            {\n                "id": 1,\n                "type": "FUNCTION",\n                "name": "initExtensionWA",\n                "lastStep": true\n            }\n        ],\n        "<<FIRST SCREEN NAME>>": [\n            {\n                "id": 1,\n                "type": "FUNCTION",\n                "name": "leadGenFunction",\n                "lastStep": true\n            }\n        ]\n    }\n}\'\n')),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"To send the form to the user, use the below API:")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Make sure you replace unique flow token generated by using a simple function with a flow token generated by using a simple function. This token needs to be unique every time when this API is executed.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'    curl --location \'https://{{host}}/integrations/whatsapp/extension/message?bot={{botId}}\' \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "from": "{{BUSINESS_WA_NUMBER}}",\n    "extension": {\n        "to": "{{END_USER_WA_NUMBER}}",\n        "headerText": "Hey this is header",\n        "bodyText": "Hey please complete the quiz",\n        "footerText": "Hey this is footer text1",\n        "flowToken": "<unique flow token generated by using a simple function>",\n        "extensionId": "{{extensionId}}",\n        "mode": "draft",\n        "ctaText": "Click Here"\n    }\n}\'\n')),(0,r.kt)("p",null,"A sample whatsApp form bot flow:"),(0,r.kt)("p",null,"   ",(0,r.kt)("img",{parentName:"p",src:"https://imgur.com/9HwnRIw.png",alt:null})))}h.isMDXComponent=!0}}]);