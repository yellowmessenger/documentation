"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[56954],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var i=t(96540);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}},68405:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"platform_concepts/channelConfiguration/android_push","title":"Android push notifications","description":"Configure Android push notification","source":"@site/docs/platform_concepts/channelConfiguration/android_push.md","sourceDirName":"platform_concepts/channelConfiguration","slug":"/platform_concepts/channelConfiguration/android_push","permalink":"/docs/platform_concepts/channelConfiguration/android_push","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Android push notifications","sidebar_label":"Android push notifications"},"sidebar":"platform_concepts","previous":{"title":"Push notifications","permalink":"/docs/platform_concepts/channelConfiguration/mobilepush"},"next":{"title":"iOS push notifications","permalink":"/docs/platform_concepts/channelConfiguration/ios_push"}}');var o=t(74848),s=t(28453);const a={title:"Android push notifications",sidebar_label:"Android push notifications"},d=void 0,r={},c=[{value:"Configure Android push notification",id:"configure-android-push-notification",level:2},{value:"Step 1: Add project to FCM &amp; generate private key",id:"step-1-add-project-to-fcm--generate-private-key",level:3},{value:"Step 2: Add key to Yellow.ai",id:"step-2-add-key-to-yellowai",level:3},{value:"Code snippets for Android Push notifications",id:"code-snippets-for-android-push-notifications",level:2},{value:"Notification without custom action",id:"notification-without-custom-action",level:3},{value:"Notification with deep link",id:"notification-with-deep-link",level:3},{value:"Notification with bot response",id:"notification-with-bot-response",level:3},{value:"Payload to trigger bot flow",id:"payload-to-trigger-bot-flow",level:4},{value:"Payload to open the bot with a predefined response",id:"payload-to-open-the-bot-with-a-predefined-response",level:4},{value:"Implementation codes for Android app developer",id:"implementation-codes-for-android-app-developer",level:2},{value:"Fetch additional data from notifications when clicked",id:"fetch-additional-data-from-notifications-when-clicked",level:3},{value:"Start chatbot with bot details and additional data",id:"start-chatbot-with-bot-details-and-additional-data",level:3},{value:"Handle notifications in the foreground when the bot is closed",id:"handle-notifications-in-the-foreground-when-the-bot-is-closed",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"configure-android-push-notification",children:"Configure Android push notification"}),"\n",(0,o.jsx)(n.h3,{id:"step-1-add-project-to-fcm--generate-private-key",children:"Step 1: Add project to FCM & generate private key"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Log on to the ",(0,o.jsx)(n.a,{href:"https://console.firebase.google.com/",children:"Firebase Developer Console"})," and add Firebase to your ",(0,o.jsx)(n.a,{href:"https://firebase.google.com/docs/android/setup",children:"Android app"}),".\n",(0,o.jsx)(n.img,{src:"https://i.imgur.com/wWLefrH.png",alt:""})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["In Project settings, navigate to ",(0,o.jsx)(n.strong,{children:"Service accounts"}),"."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://i.imgur.com/3Z1ga3w.png",alt:""})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Click on ",(0,o.jsx)(n.strong,{children:"Generate new private key"}),". A JSON file will be downloaded which contains all the credentials."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://i.imgur.com/Qzdl7Cf.png",alt:""})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["To set up Firebase Cloud Messaging client app on Android,  see the ",(0,o.jsx)(n.a,{href:"https://firebase.google.com/docs/cloud-messaging/android/client",children:"Firebase official documentation"}),"."]})}),"\n",(0,o.jsx)(n.h3,{id:"step-2-add-key-to-yellowai",children:"Step 2: Add key to Yellow.ai"}),"\n",(0,o.jsx)(n.p,{children:"Once you get the key JSON file, upload the key on Yellow.ai to establish a connection and grant access to send push notifications from Yellow.ai."}),"\n",(0,o.jsx)(n.p,{children:"To connect FCM to yellow.ai, follow these steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["On the left navigation bar, click ",(0,o.jsx)(n.strong,{children:"Extensions"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://imgur.com/PIOvT6K.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Click ",(0,o.jsx)(n.strong,{children:"Channels"})," > ",(0,o.jsx)(n.strong,{children:"Push Notifications"})," > ",(0,o.jsx)(n.strong,{children:"Android (FCM)"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://imgur.com/LAsXF6T.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Click ",(0,o.jsx)(n.strong,{children:"+ Connect your account"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://imgur.com/zrtg4lV.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Cick ",(0,o.jsx)(n.strong,{children:"Upload"})," and choose the downloaded JSON file from your local folder and click ",(0,o.jsx)(n.strong,{children:"Add"}),"."]}),"\n",(0,o.jsx)("img",{src:"https://imgur.com/g0eAcCC.png",alt:"drawing",width:"70%"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["To know how to create a push notification campaign, see ",(0,o.jsx)(n.a,{href:"/docs/platform_concepts/engagement/outbound/templates/mobilepush",children:"Mobile push template"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"code-snippets-for-android-push-notifications",children:"Code snippets for Android Push notifications"}),"\n",(0,o.jsx)(n.p,{children:"Notifications are sent to Firebase which then pushes them to the app using the user's device token. This section provides payloads that are sent to Firebase for different on-tap actions (action performed when the user taps on the push notification)."}),"\n",(0,o.jsx)(n.p,{children:"The following table provides descriptions of different parameters:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Parameter"}),(0,o.jsx)(n.th,{children:"Datatype"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"notification"}),(0,o.jsx)(n.td,{children:"Object"}),(0,o.jsx)(n.td,{children:"Details of the notification"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"title"}),(0,o.jsx)(n.td,{children:"String"}),(0,o.jsx)(n.td,{children:"Title of the notification."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"body"}),(0,o.jsx)(n.td,{children:"String"}),(0,o.jsx)(n.td,{children:"Content of the notification."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"payload"}),(0,o.jsx)(n.td,{children:"String"}),(0,o.jsx)(n.td,{children:"Contains additional parameters such as image, botId, deeplink and journeySlug."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"botId"}),(0,o.jsx)(n.td,{children:"String"}),(0,o.jsx)(n.td,{children:"The bot ID for which the notification has been triggered."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"image"}),(0,o.jsx)(n.td,{children:"String"}),(0,o.jsx)(n.td,{children:"Path of the image file or URL of the image."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"deeplink"}),(0,o.jsx)(n.td,{children:"String"}),(0,o.jsx)(n.td,{children:"URL which redirects the user to a particular page of the application."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"journeySlug"}),(0,o.jsx)(n.td,{children:"String"}),(0,o.jsx)(n.td,{children:"The name of the journey which has to be triggered in the bot, when the user taps on the notification"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"token*"}),(0,o.jsx)(n.td,{children:"String"}),(0,o.jsx)(n.td,{children:"A unique identifier or device ID generated for the operating system and specific device. Notifications are sent to the user's device ID."})]})]})]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Parameters with * are mandatory."}),"\n",(0,o.jsxs)(n.li,{children:["Either ",(0,o.jsx)(n.code,{children:"deviceToken"})," or ",(0,o.jsx)(n.code,{children:"ymAuthToken"})," is needed. For campaigns, ",(0,o.jsx)(n.code,{children:"deviceToken"})," is mandatory and ",(0,o.jsx)(n.code,{children:"ymAuthToken"})," is optional. ",(0,o.jsx)("br",{}),"However, to push notifications from from your app to User 360, only ",(0,o.jsx)(n.code,{children:"ymAuthToken"})," is required."]}),"\n",(0,o.jsx)(n.li,{children:"Ensure you create users along with their device and ym authentication tokens."}),"\n",(0,o.jsx)(n.li,{children:"When sending out notifications, the yellow.ai consumes these details automatically, decides the platform, and sends out notifications accordingly."}),"\n"]})}),"\n",(0,o.jsx)(n.h3,{id:"notification-without-custom-action",children:"Notification without custom action"}),"\n",(0,o.jsxs)(n.p,{children:["This is used to redirect to the main activity of the app when a user clicks on the notification - On tap action, open the app (your app). See Step 7 of ",(0,o.jsx)(n.a,{href:"/docs/platform_concepts/engagement/outbound/templates/mobilepush",children:"Push notification template"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"We do not send any payload, instead, we just trigger the notification containing the title and body along with the image (if included). There is no action included in the payload."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'{\n    "notification": {\n        "title": "Hey there",\n        "body": "Body",\n        "image": "{ImageUrl}"\n    },\n    "token": "{deviceToken}"\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"notification-with-deep-link",children:"Notification with deep link"}),"\n",(0,o.jsx)(n.p,{children:"This is used for the On tap action to open a deep link to the app - when a user clicks on the notification, it redirects to a specific screen of the app where the deeplink is pointing to."}),"\n",(0,o.jsxs)(n.p,{children:["The payload consists of the standard notification details (title, body, and image) along with the ",(0,o.jsx)(n.code,{children:"botId"})," and ",(0,o.jsx)(n.code,{children:"deeplink"})," URI."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'{\n    "notification": {\n        "title": "Hey there",\n        "body": "Body",\n        "image": "{imageUrl}"\n    },\n    "data": {\n        "botId": {botId},\n        "deeplink": "{uri}"\n    },\n    "token": "{deviceToken}"\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"notification-with-bot-response",children:"Notification with bot response"}),"\n",(0,o.jsxs)(n.p,{children:["This is used for the On tap action to open a specific bot flow - when a user clicks on the notification, it opens the bot that can ",(0,o.jsx)(n.a,{href:"#payload-to-trigger-bot-flow",children:"trigger a specific bot flow"})," or ",(0,o.jsx)(n.a,{href:"#payload-to-open-the-bot-with-a-predefined-response",children:"shows a predefined response"}),"."]}),"\n",(0,o.jsx)(n.h4,{id:"payload-to-trigger-bot-flow",children:"Payload to trigger bot flow"}),"\n",(0,o.jsx)(n.p,{children:"Here is the payload to trigger a specific bot flow when the user clicks on the notification."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'{\n    "notification": {\n        "title": "Hey there",\n        "body": "Body",\n        "image": "{imageUrl}"\n    },\n    "data": {\n        "botId": "{botId}",\n        "journeySlug": "{slug}"\n    },\n    "token": "{deviceToken}"\n}\n'})}),"\n",(0,o.jsx)(n.h4,{id:"payload-to-open-the-bot-with-a-predefined-response",children:"Payload to open the bot with a predefined response"}),"\n",(0,o.jsx)(n.p,{children:"Here is the payload to show a specific bot response (text message) when the user clicks on the notification."}),"\n",(0,o.jsxs)(n.p,{children:["It just contains ",(0,o.jsx)(n.code,{children:"botId"})," in the response under the ",(0,o.jsx)(n.code,{children:"data"})," parameter."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'{\n    "notification": {\n        "title": "Hey there",\n        "body": "Body",\n        "image": "{imageUrl}"\n    },\n    "data": {\n        "botId": "{botId}",\n    },\n    "token": "{deviceToken}"\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"implementation-codes-for-android-app-developer",children:"Implementation codes for Android app developer"}),"\n",(0,o.jsx)(n.p,{children:"The following are the code snippets for the Android app developer to get the notifications and handle different scenarios."}),"\n",(0,o.jsx)(n.h3,{id:"fetch-additional-data-from-notifications-when-clicked",children:"Fetch additional data from notifications when clicked"}),"\n",(0,o.jsx)(n.p,{children:"Use the following code snippet fetch additional information from the user when the user clicks on the notification."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'HashMap < String, Object > payloadData = new HashMap < > ();\nHashMap < String, Object > botPayloadData = new HashMap < > ();\n\nBundle bundle = getIntent().getExtras();\nif (bundle != null) {\n    String tmp = "";\n    for (String key: bundle.keySet()) {\n        Object value = bundle.get(key);\n        payloadData.put(key, value);\n        tmp += key + ": " + value + "\\n\\n";\n    }\n    mTextView.setText(tmp);\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"start-chatbot-with-bot-details-and-additional-data",children:"Start chatbot with bot details and additional data"}),"\n",(0,o.jsx)(n.p,{children:"Use the following code snippet to open the bot and trigger a specific bot flow when the user clicks on the notification."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'if (payloadData.get("botId") != null) {\n    String botId = (String) payloadData.get("botId");\n    YMChat ymChat = YMChat.getInstance();\n\n    ymChat.config = new YMConfig(botId);\n    ymChat.config.version = 2;\n    ymChat.config.ymAuthenticationToken = "2gs20emoof1666164936076";\n\n    if (payloadData.get("journeySlug") != null) {\n        String journeySlug = (String) payloadData.get("journeySlug");\n        botPayloadData.put("JourneySlug", journeySlug);\n        ymChat.config.payload = botPayloadData;\n    }\n\n    try {\n        ymChat.startChatbot(this);\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"handle-notifications-in-the-foreground-when-the-bot-is-closed",children:"Handle notifications in the foreground when the bot is closed"}),"\n",(0,o.jsx)(n.p,{children:"Use the following code snippet to handle the notifications you receive when the app is open in the foreground."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'import android.util.Log\nimport com.google.firebase.messaging.FirebaseMessagingService\nimport com.google.firebase.messaging.RemoteMessage\n\nclass MyFirebaseMessagingService: FirebaseMessagingService() {\n    final\n    var TAG: String = "YMLog"\n    override fun onMessageReceived(remoteMessage: RemoteMessage) {\n        Log.i(TAG + " Remote message", remoteMessage.toString())\n        Log.i(TAG + " Remote message", remoteMessage.data.toString())\n        super.onMessageReceived(remoteMessage)\n    }\n}\n'})}),"\n",(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsx)(n.p,{children:"For more details regarding the integration, see"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/mobile/chatbot/android",children:"Android SDK documentation"}),"."]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/yellowmessenger/YmChatBot-Android-DemoApp",children:"Test app with Android SDK and Firebase integration"})}),"\n"]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);