"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[4227],{21618:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"platform_concepts/growth/insightskpi","title":"Insights KPIs","description":"All the mentioned KPIs are not readily available in form of widgets/tables.","source":"@site/docs/platform_concepts/growth/insightskpi.md","sourceDirName":"platform_concepts/growth","slug":"/platform_concepts/growth/insightskpi","permalink":"/docs/platform_concepts/growth/insightskpi","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"sidebar_label":"Insights KPIs","title":"Insights KPIs"}}');var r=t(74848),i=t(28453);const o={sidebar_label:"Insights KPIs",title:"Insights KPIs"},a=void 0,d={},c=[];function l(e){const s={a:"a",admonition:"admonition",code:"code",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsx)(s.p,{children:"All the mentioned KPIs are not readily available in form of widgets/tables."})}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:(0,r.jsx)(s.strong,{children:"Metric"})}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.strong,{children:"Description"})}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.strong,{children:"Calculation/Logic"})}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.strong,{children:"Use Cases"})})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Users"})}),(0,r.jsx)(s.td,{children:"Shows the unique number of users who conversed with the bot."}),(0,r.jsxs)(s.td,{children:["Unique count of users from the list of messages exchanged on the bot, calculated using the ",(0,r.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/HyperLogLog",children:"hyperloglog"})," algorithm."]}),(0,r.jsxs)(s.td,{children:["- Measure the bot's reach and popularity through unique user count. ",(0,r.jsx)("br",{})," - Monitor changes in user count to track bot adoption and growth."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"User Traffic"})}),(0,r.jsx)(s.td,{children:"Displays the total number of messages exchanged, categorized into messages between bot and users, and messages between live agents and users."}),(0,r.jsx)(s.td,{children:"Sum of all messages exchanged, including user, bot, agent, and notification messages."}),(0,r.jsxs)(s.td,{children:["- Gain insights into communication volume and patterns between users, the bot, and live agents. ",(0,r.jsx)("br",{})," - Track engagement and interaction levels to improve communication channels."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Sessions"})}),(0,r.jsx)(s.td,{children:"Provides an overview of user sessions, including the total number of sessions and their types (Bot-only sessions vs. Sessions with both bot and live agent)."}),(0,r.jsx)(s.td,{children:"Sum of all sessions created by the user in the selected period."}),(0,r.jsxs)(s.td,{children:["- Get an overview of user sessions, including bot-only sessions and sessions with both bot and live agent. ",(0,r.jsx)("br",{})," - Monitor user engagement patterns and balance between bot and live agent interactions."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Session Traffic"})}),(0,r.jsx)(s.td,{children:"Displays average time spent by users conversing with the bot. A session can last up to 24 hours, after which a new session starts."}),(0,r.jsx)(s.td,{children:"Average of the total time users conversed with the bot divided by the total number of sessions. This metric is captured for all sources."}),(0,r.jsxs)(s.td,{children:["- Analyze average session duration to understand user engagement and satisfaction levels. ",(0,r.jsx)("br",{})," - Use session duration as a metric to assess and improve the bot's effectiveness over time."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Traffic Channels"})}),(0,r.jsx)(s.td,{children:"Frequency of unique users messaging the bot, categorized by source (traffic channel) and aggregated daily for the chosen date range."}),(0,r.jsx)(s.td,{}),(0,r.jsxs)(s.td,{children:["- ",(0,r.jsx)(s.strong,{children:"User acquisition analysis"}),": Assess the effectiveness of traffic channels in acquiring new users. ",(0,r.jsx)("br",{})," - ",(0,r.jsx)(s.strong,{children:"Channel performance evaluation"}),": Evaluate the performance of different channels based on daily user frequency."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Platform/Medium"})}),(0,r.jsx)(s.td,{children:"Frequency of unique users messaging the bot, categorized by device origin, aggregated daily. Note: This data is only available for Yellow Web & Mobile, not for WhatsApp/Facebook."}),(0,r.jsx)(s.td,{}),(0,r.jsxs)(s.td,{children:["- ",(0,r.jsx)(s.strong,{children:"Platform/Medium analysis"}),": Analyze user frequency based on device or platform to tailor bot features and optimize user experience. ",(0,r.jsx)("br",{})," - ",(0,r.jsx)(s.strong,{children:"Platform/Medium comparison"}),": Compare user engagement across platforms to inform resource allocation and marketing strategies."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Unique Users by Country"})}),(0,r.jsx)(s.td,{children:"Shows the count of unique users conversing with the bot from various countries, highlighting the top 5 countries and their percentage contributions."}),(0,r.jsx)(s.td,{children:"Calculated by capturing the IP address of the user and translating it to a standard location using the ip2location database."}),(0,r.jsxs)(s.td,{children:["- ",(0,r.jsx)(s.strong,{children:"Geographical user analysis"}),": Understand user distribution across countries to inform regional strategies. ",(0,r.jsx)("br",{})," - ",(0,r.jsx)(s.strong,{children:"Localization and targeting"}),": Tailor content and features based on the unique users by country data."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"User Activity by Time"})}),(0,r.jsx)(s.td,{children:"Displays user frequency over a specific period, organized by day and time. Useful for analyzing when user activity peaks and dips."}),(0,r.jsx)(s.td,{children:"Calculated by aggregating the number of unique users who interacted with the bot within each hourly interval for the selected period."}),(0,r.jsxs)(s.td,{children:["- ",(0,r.jsx)(s.strong,{children:"Resource allocation"}),": Identify peak user activity hours to allocate resources effectively and ensure prompt responses to user inquiries. ",(0,r.jsx)("br",{})," - ",(0,r.jsx)(s.strong,{children:"Scheduled maintenance"}),": Determine low-activity hours to schedule maintenance, minimizing service disruption. ",(0,r.jsx)("br",{})," - ",(0,r.jsx)(s.strong,{children:"Marketing campaigns"}),": Identify optimal hours with high user engagement and conversion rates for launching targeted marketing campaigns."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Users by Device"})}),(0,r.jsx)(s.td,{children:"Shows the different types of user devices from which the bot was accessed."}),(0,r.jsx)(s.td,{children:"Frequency of unique users conversing with the bot, segregated by device and aggregated for the selected date range."}),(0,r.jsxs)(s.td,{children:["- ",(0,r.jsx)(s.strong,{children:"Device usage analysis"}),": Analyze user distribution across different devices for optimization. ",(0,r.jsx)("br",{})," - ",(0,r.jsx)(s.strong,{children:"Device-specific optimization"}),": Optimize user experience based on device-specific data."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Bot Accuracy"})}),(0,r.jsx)(s.td,{children:"Shows the percentage of user messages identified by the bot with a certain level of confidence."}),(0,r.jsxs)(s.td,{children:["Bot accuracy = ",(0,r.jsx)(s.code,{children:"[1 - (Unidentified user messages / Total User Messages)]*100"})]}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Flow Completion Rate"})}),(0,r.jsx)(s.td,{children:"Measures how many customer intents are fulfilled by the bot for every 100 intents started by users."}),(0,r.jsxs)(s.td,{children:["Flow completion rate = ",(0,r.jsx)(s.code,{children:"[(Flow Completed Events) / (Flow Started Events)]* 100"})]}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Deflection Rate"})}),(0,r.jsx)(s.td,{children:"Percentage of queries resolved by the bot without transferring the chat to a live agent, indicating self-service efficiency."}),(0,r.jsxs)(s.td,{children:["Deflection rate = ",(0,r.jsx)(s.code,{children:"(Bot sessions without agent handover / Total sessions) * 100"})]}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"CSAT"})}),(0,r.jsx)(s.td,{children:"Customer satisfaction score given by users for both bot and agent sessions, rated on a scale of 0 to 5. The graph compares user feedback on bot sessions vs. agent sessions."}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Top Flows Visited"})}),(0,r.jsx)(s.td,{children:"Shows the most frequently triggered flows by users and the average time taken to complete these flows."}),(0,r.jsx)(s.td,{children:"Count of completed events for each flow, along with the average time users spent within the flow."}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Business-Initiated Conversations"})}),(0,r.jsx)(s.td,{children:"Conversations initiated by the bot or business to provide information, send notifications, or engage with users based on predefined triggers or events."}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"User-Initiated Conversations"})}),(0,r.jsx)(s.td,{children:"Conversations initiated by users who send messages or queries to the bot, seeking information or assistance."}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Referral-Initiated"})}),(0,r.jsx)(s.td,{children:"Conversations that occur when users refer the bot to others, allowing the bot to initiate personalized conversations with those referred contacts."}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var n=t(96540);const r={},i=n.createContext(r);function o(e){const s=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);