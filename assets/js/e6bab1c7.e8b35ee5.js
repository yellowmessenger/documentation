"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[93384],{1413:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"platform_concepts/studio/overview","title":"Automation overview","description":"\x3c!--import ArticleCard from \'@site/src/components/ArticleCard\';","source":"@site/docs/platform_concepts/studio/overview.md","sourceDirName":"platform_concepts/studio","slug":"/platform_concepts/studio/overview","permalink":"/docs/platform_concepts/studio/overview","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"create your first bot","permalink":"/docs/tags/create-your-first-bot"}],"version":"current","frontMatter":{"title":"Automation overview","sidebar_label":"Overview","id":"overview","tags":["create your first bot"]},"sidebar":"platform_concepts","previous":{"title":"CRM Integration","permalink":"/docs/enterprise-integration/crm-integration"},"next":{"title":"Prompt-based AI agent","permalink":"/docs/platform_concepts/AIAgent/aiagent-architecture"}}');var o=t(74848),i=t(28453);const r={title:"Automation overview",sidebar_label:"Overview",id:"overview",tags:["create your first bot"]},a=void 0,l={},d=[{value:"Automation module capabilities",id:"automation-module-capabilities",level:2},{value:"Overview of Agentic architecture",id:"overview-of-agentic-architecture",level:2},{value:"Camprision between AI-driven agents and Rule-based agents",id:"camprision-between-ai-driven-agents-and-rule-based-agents",level:3},{value:"AI agent components",id:"ai-agent-components",level:2},{value:"Super agent",id:"super-agent",level:3},{value:"Agent",id:"agent",level:3},{value:"Knowledge Base (KB) Agent",id:"knowledge-base-kb-agent",level:3},{value:"Rule-based agents",id:"rule-based-agents",level:3},{value:"<strong>Nodes in rule-based Agents</strong>",id:"nodes-in-rule-based-agents",level:4},{value:"Workflows in AI-powered Agents and Rule-based Flows",id:"workflows-in-ai-powered-agents-and-rule-based-flows",level:2}];function c(e){const n={a:"a",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Automation is the central workspace to build, orchestrate, and optimize Agentic AI. It brings together key capabilities such as AI Agent creation, workflow automation, database and API integration, and end-to-end testing"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"You can use the Automation module when you want to:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Build AI agents that automate user conversations and tasks."}),"\n",(0,o.jsx)(n.li,{children:"Design workflows, connect backend systems via APIs, or store and retrieve data using a built-in database."}),"\n",(0,o.jsx)(n.li,{children:"Test and validate the agent's behavior and performance before going live, using Copilot sessions or by running test suites."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Watch the introductory video on Automation:"})}),"\n",(0,o.jsx)("div",{style:{position:"relative",paddingBottom:"56.25%",height:0,overflow:"hidden",maxWidth:"100%",borderRadius:"12px"},children:(0,o.jsx)("iframe",{src:"https://www.youtube.com/embed/Bn8TuQgTmIA?si=a7oZMdnmaAh6xgOL",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"},frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowFullScreen:!0})}),"\n",(0,o.jsx)(n.h2,{id:"automation-module-capabilities",children:"Automation module capabilities"}),"\n",(0,o.jsx)(n.p,{children:"The Automation module allows you to design and manage AI agents by combining AI-driven agents, rule-based agents, workflows, integrations, and testing tools to deliver seamless user experiences."}),"\n",(0,o.jsx)("center",{children:(0,o.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/automation-platform-capabilities.png",alt:"drawing",width:"90%"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Key capabilities of the Automation module include"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/aiagent-architecture",children:"AI-Agent building"})}),": This is the core capability of the platform, which allows you to design and configure AI agents.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Provides no-code interface to build agents."}),"\n",(0,o.jsx)(n.li,{children:"Supports both AI-driven and rule-based agents."}),"\n",(0,o.jsx)(n.li,{children:"Allows defining start trigger, prompts, workflows, conversation flows, and integrating business logic."}),"\n",(0,o.jsx)(n.li,{children:"Simplifies deployment and scaling of agents across different channels (web, mobile, chat apps)."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/call-workflow",children:"Workflow automation and integrations"})}),": Handles backend tasks that support the conversation. When triggered, it can call APIs, update ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/database",children:"database"}),", or perform other automated actions to complete user requests.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Both AI-driven and rule-based agents rely on workflows to complete user requests."}),"\n",(0,o.jsxs)(n.li,{children:["Automates backend processes like ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/api/add-api",children:"API"})," integrations, data processing, or business logic. Example: Order tracking, appointment booking, ticket management, and so on."]}),"\n",(0,o.jsx)(n.li,{children:"Integrates with external systems such as CRMs and third-party applications to enable end-to-end automation."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Automated AI testing"}),": Testing ensures that your AI Agent works as expected before going live. The platform provides two testing approaches:","\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AICopilot/copilot",children:"Copilot"})}),": Allows you to manually test the AI Agent in a development environment.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Manual testing tool that simulates real user conversations in a development environment."}),"\n",(0,o.jsx)(n.li,{children:"Allows validation of prompts, workflows, Knowledge Base responses, and conversation logic."}),"\n",(0,o.jsx)(n.li,{children:"It helps to validate tone, accuracy, and flow before publishing."}),"\n",(0,o.jsx)(n.li,{children:"Useful for quick debugging during the agent development."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/automated-agent-testing",children:"Test suites"})}),": Allows you to automatically test your AI agent\u2019s functionality, performance, and accuracy without the need for manual testing.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"You can generate test cases to validate agent behavior."}),"\n",(0,o.jsx)(n.li,{children:"Provides detailed reports highlighting passed and failed cases."}),"\n",(0,o.jsx)(n.li,{children:"Ideal for regression testing and validation."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"overview-of-agentic-architecture",children:"Overview of Agentic architecture"}),"\n",(0,o.jsx)(n.p,{children:"The Agentic architecture in Yellow.ai\u2019s Automation module orchestrates conversations by combining AI-driven intelligence, rule-based logic, and workflows."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/get_started/createfirstbot",children:"AI-driven agents"})})," \u2013 Powered by Large Language Models (LLMs), these agents understand context, handle complex or multi-turn conversations, and generate natural, human-like responses. Ideal for open-ended queries and tasks that require reasoning or dynamic information retrieval."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/create_chatbot",children:"Rule-based agents"})}),"(Deterministic agents) \u2013 These agents operate using structured logic and predefined nodes, progressing through deterministic workflows. Best suited for repetitive tasks such as booking forms, order tracking, or surveys."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/call-workflow",children:"Workflows"})})," \u2013 Workflows act as the backend processes that agents invoke to perform actions like API calls, database updates, sending notifications, or triggering automated tasks. Both AI-driven and rule-based agents depend on workflows to complete tasks and maintain seamless conversation flow.\n",(0,o.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/flow-agent.png",alt:""})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"camprision-between-ai-driven-agents-and-rule-based-agents",children:"Camprision between AI-driven agents and Rule-based agents"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Aspect"}),(0,o.jsx)(n.th,{children:"AI-driven agent"}),(0,o.jsx)(n.th,{children:"Rule-based Agent"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Mechanism"})}),(0,o.jsx)(n.td,{children:"Uses Large Language Models (LLMs) to interpret context and make dynamic decisions."}),(0,o.jsx)(n.td,{children:"Uses structured logic and predefined rules to guide conversations."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Conversation handling"})}),(0,o.jsx)(n.td,{children:"Handles complex, multi-turn, and open-ended conversations."}),(0,o.jsx)(n.td,{children:"Handles linear, step-by-step conversations suited for predictable scenarios."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Context awareness"})}),(0,o.jsx)(n.td,{children:"Retains and uses context from previous interactions to provide personalized responses."}),(0,o.jsx)(n.td,{children:"Relies on predefined conditions and user inputs to guide conversations."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Flexibility"})}),(0,o.jsx)(n.td,{children:"Adapts to varied user inputs and handle unexpected queries."}),(0,o.jsx)(n.td,{children:"Follows rigid flows and handle only predefined scenarios."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Use case"})}),(0,o.jsx)(n.td,{children:"Best for customer support with complex queries, troubleshooting, dynamic FAQs, and personalized recommendations."}),(0,o.jsx)(n.td,{children:"Best for booking processes, order tracking, surveys, feedback collection, and other structured requests."})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"ai-agent-components",children:"AI agent components"}),"\n",(0,o.jsx)(n.h3,{id:"super-agent",children:"Super agent"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/agentpersona",children:"Super agent"})," acts as the central orchestrator of all conversations within the AI agent. It intelligently routes user queries to the appropriate agent whether an AI-driven agent for complex, context-rich conversations or a rule-based agent for structured, deterministic workflows based on the query, conversation context, and predefined criteria."]}),"\n",(0,o.jsx)(n.h3,{id:"agent",children:"Agent"}),"\n",(0,o.jsxs)(n.p,{children:["Individual ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/agent",children:"agents "})," help to focus on specific conversation tasks, such as booking tickets, handling cancellations, or answering product-related queries."]}),"\n",(0,o.jsx)(n.p,{children:"The Super Agent coordinates these interactions by analyzing the user\u2019s intent and routing the query to the most relevant agent. For example, if a user asks about refund eligibility, the Super Agent will trigger the Refund Agent, while a booking query would be directed to the Booking Agent."}),"\n",(0,o.jsx)(n.h3,{id:"knowledge-base-kb-agent",children:"Knowledge Base (KB) Agent"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/kb-agent-config",children:"Knowledge Base agent"})," is a specialized AI-driven component designed to handle knowledge-intensive queries. It retrieves, summarizes, and delivers answers from knowledge sources like documents, FAQs, or external systems. It also supports follow-up questions, multilingual responses, and context-aware answers."]}),"\n",(0,o.jsx)(n.h3,{id:"rule-based-agents",children:"Rule-based agents"}),"\n",(0,o.jsx)(n.p,{children:"Rule-based agents, also known as node-based flows, are a key component of the agentic architecture. Unlike AI agents that rely on LLMs for contextual reasoning, rule-based agents operate through predefined paths and mapped intents. They are best suited for scenarios where interactions must follow a structured, predictable sequence such as authentication, form-filling, or survey collection."}),"\n",(0,o.jsxs)(n.p,{children:["In this setup, the ",(0,o.jsx)(n.strong,{children:"Super agent"})," determines when a conversation should follow a rule-based flow and routes the user to the appropriate agent. The rule-based agent then executes the step-by-step conversation paths to guide the users."]}),"\n",(0,o.jsx)(n.h4,{id:"nodes-in-rule-based-agents",children:(0,o.jsx)(n.strong,{children:"Nodes in rule-based Agents"})}),"\n",(0,o.jsxs)(n.p,{children:["In rule-based agents, ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes",children:"nodes"})," act as the fundamental building blocks of the conversation. Each node represents a specific action such as asking a question, validating input, branching logic, or triggering backend processes. By linking nodes together, these agents create structured paths that guide users to the desired outcome."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Nodes are useful for:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Collecting information"}),": Capture user inputs like name, email, phone number, preferences, or booking details. ",(0,o.jsx)(n.strong,{children:"Example"}),": Asking the user for their flight date or delivery address."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Conditional branching"}),": Direct the conversation along different paths based on user inputs. ",(0,o.jsx)(n.strong,{children:"Example"}),': If a user selects "Yes" \u2192 proceed to payment, if "No" \u2192 proceed to next step.']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Fetching data"}),": Retrieve information from databases, APIs, or external systems. Example: Fetching flight availability, order status, or user account details."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Data pushing / Backend integration"}),": Send collected information to external systems or databases for processing.\n",(0,o.jsx)(n.strong,{children:"Example"}),": Storing booking details in a Database."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Mathematical and Logical Operations"}),": Perform calculations or validations during the conversation using ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/code",children:"Functions"}),". ",(0,o.jsx)(n.strong,{children:"Example"}),": Calculating total cost, validating an age or date, or checking inventory."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Dynamic rich media generation"}),": Create interactive and engaging responses using carousels, images, and quick replies. ",(0,o.jsx)(n.strong,{children:"Example"}),": Displaying flight options in a carousel or showing payment instructions with buttons."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Triggering Workflows or APIs"}),": Initiate automated workflows or external API calls from within the conversation."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"workflows-in-ai-powered-agents-and-rule-based-flows",children:"Workflows in AI-powered Agents and Rule-based Flows"}),"\n",(0,o.jsx)(n.p,{children:"Workflows are specialized automation that agents call during a conversation to perform backend tasks, such as making API calls, updating database, or sending notifications. Both AI-powered agents and rule-based flows can use workflows, but they trigger them differently:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"AI-powered agents"})," \u2013 Use the ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/AIAgent/call-workflow#call-a-workflow-in-prompt",children:"Call Workflow"})," action within the prompts to trigger a workflow. This allows the agent to dynamically process user input, fetch data, or complete actions before continuing the conversation."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Rule-based agents"})," \u2013 Use the ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes/action-nodes-overview/execute-flow",children:"Execute node "}),"to call a ",(0,o.jsx)(n.a,{href:"http://localhost:3000/docs/platform_concepts/studio/build/Flows/journeys#create-a-workflow-via-workflow-builder-section",children:"workflow"})," from a predefined step in the conversational flow."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(96540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);