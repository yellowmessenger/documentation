"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[86067],{8220:(e,t,i)=>{i.r(t),i.d(t,{contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"type":"api","id":"update-user","title":"Update user","description":"","slug":"/update-user","frontMatter":{},"api":{"security":[{"ApiKeyAuth":[]}],"tags":["User"],"description":"Updates user properties of an existing user. There is a rate limit is 1500 per minute.","parameters":[{"name":"userId","in":"path","description":"The unique ID of the user.","required":true,"schema":{"type":"string"}},{"name":"bot","in":"query","description":"The unique bot ID associated with the user record.","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Invalid userId provided"},"404":{"description":"User not found"}},"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"firstName":{"type":"string","description":"The first name of the user"},"lastName":{"type":"string","description":"The last name of the user"},"phone":{"type":"string","description":"The phone number of the user"},"tags":{"type":"array","items":{"type":"string"},"description":"An array of tags"},"country":{"type":"string","description":"The country of the user"},"emailOptIn":{"type":"boolean","description":"Indicates whether the user has opted in for email notifications"}}}}}},"method":"put","path":"/cdp/api/v1/user/{userId}","servers":[{"url":"https://cloud.yellow.ai","description":"India"},{"url":"https://r1.cloud.yellow.ai","description":"MEA"},{"url":"https://r2.cloud.yellow.ai/cdp/api/v1","description":"Indonasia"},{"url":"https://r3.cloud.yellow.ai","description":"Singapore"},{"url":"https://r4.cloud.yellow.ai","description":"USA"},{"url":"https://r5.cloud.yellow.ai","description":"Europe"},{"url":"https://alpha5.yellowmessenger.com","description":"Alpha5"},{"url":"https://staging.yellowmessenger.com","description":"Staging"}],"securitySchemes":{"ApiKeyAuth":{"type":"apiKey","in":"header","name":"x-api-key","description":"API key to authorize requests"}},"jsonRequestBodyExample":{"firstName":"string","lastName":"string","phone":"string","tags":["string"],"country":"string","emailOptIn":true},"info":{"title":"Yellow.ai APIs","version":"1.0","description":"## API Documentation: Yellow.ai\\n\\nWelcome to the API documentation for Yellow.ai! This comprehensive guide will walk you through the powerful RESTful API provided by Yellow.ai. With our API, you can seamlessly create and manage user data, retrieve user details, update user information, and unlock a host of other functionalities. Our API is designed to offer flexibility and simplicity, while prioritizing the security and integrity of your user data.\\n\\n## Overview\\n\\nYellow.ai offers a robust RESTful API that empowers you to manage user data, user events, outbound notifications, email ticketing, and more. Our API is designed to provide a seamless experience, offering flexibility and simplicity in its usage. We prioritize the security and integrity of your user data, ensuring that it remains protected throughout your interactions with our API. Leverage our powerful API to streamline your workflows and enhance your user management capabilities.\\n\\n ## Authentication\\n Yellow.ai APIs support OAuth for authentication. To generate an authentication token, follow these steps:\\n\\n 1. Ensure that you have super admin privileges for the bot.\\n 2. Access the Yellow.ai platform and navigate to the bot for which you want to generate the authentication token.\\n 3. In the bot settings or administration section, locate the option for generating an authentication token. The exact location may vary depending on the Yellow.ai platform version you are using.\\n 4. Click on the \\"Generate Token\\" or similar button to initiate the token generation process.\\n 5. You may be prompted to provide additional information or permissions for the token generation. Follow the on-screen instructions and provide the necessary details.\\n 6. Once the process is complete, the Yellow.ai platform will generate an authentication token for you.\\n 7. Safely store the authentication token as it will be required for making authenticated API requests to Yellow.ai APIs.\\n 8. Include the authentication token in the request headers of your API calls. Typically, you would add an `Authorization` header with the value `Bearer <authentication_token>`.\\n 9. Please note that the generated authentication token provides access to the APIs based on the permissions and privileges associated with your super admin account. Handle the token with caution.\\n\\n## Generate API Keys\\n\\n\\n API keys act as secure passcodes, granting authorized access to specific functionalities or resources within a system. They serve as an additional layer of protection, safeguarding sensitive data and ensuring that only authenticated users or applications can interact with the API.\\n \\n * Only Admins and Super Admins of the bot can create API keys with different roles.\\n * Key creators or Super Admins can delete keys. Super admin can delete any key, regardless of the creator.\\n\\n\\n To generate an API key, follow these steps:\\n\\n 1. On the left navigation pane, click **Settings** > **API Keys**.\\n\\n    ![](https://cdn.yellowmessenger.com/assets/yellow-docs/apikeys.png)\\n\\n 2. Click **Generate new API key**.\\n\\n    ![](https://cdn.yellowmessenger.com/assets/yellow-docs/generatekeys.png)\\n\\n 3. Name the API key in **API Name** and select **User roles** from the dropdown. You can select multiple roles.\\n\\n    <img src=\\"https://i.imgur.com/UUCmfG1.png\\" width=\\"40%\\"/>\\n\\n 4. Click **+ Add Whitelisted IP** Address to specify the IPs that should be allowed access. This helps prevent disruptions caused by firewall restrictions. You can add multiple IP addresses as needed.\\n 5. Click **Save** to generate the API key.\\n 6. Copy the generated key and use it in your API calls wherever required.\\n\\n ![](https://i.imgur.com/VcDUuHe.png)\\n"},"postman":{"name":"Update user","description":{"content":"Updates user properties of an existing user. There is a rate limit is 1500 per minute.","type":"text/plain"},"url":{"path":["cdp","api","v1","user",":userId"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"description":{"content":"(Required) The unique bot ID associated with the user record.","type":"text/plain"},"key":"bot","value":"<string>"}],"variable":[{"disabled":false,"description":{"content":"(Required) The unique ID of the user.","type":"text/plain"},"type":"any","value":"<string>","key":"userId"}]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"PUT","body":{"mode":"raw","raw":"{\\n  \\"firstName\\": \\"<string>\\",\\n  \\"lastName\\": \\"<string>\\",\\n  \\"phone\\": \\"<string>\\",\\n  \\"tags\\": [\\n    \\"<string>\\",\\n    \\"<string>\\"\\n  ],\\n  \\"country\\": \\"<string>\\",\\n  \\"emailOptIn\\": \\"<boolean>\\"\\n}","options":{"raw":{"language":"json"}}},"auth":{"type":"apikey","apikey":[{"type":"any","value":"x-api-key","key":"key"},{"type":"any","value":"{{apiKey}}","key":"value"},{"type":"any","value":"header","key":"in"}]}}},"source":"@site/api/petstore.yaml","sourceDirName":".","permalink":"/api/update-user","previous":{"title":"Get user details","permalink":"/api/get-user-details"},"next":{"title":"Delete user","permalink":"/api/delete-user"}}');var s=i(74848),r=i(28453);const a={},o="Update user",l=[];function d(e){const t={h1:"h1",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"update-user",children:"Update user"})}),"\n",(0,s.jsx)(t.p,{children:"Updates user properties of an existing user. There is a rate limit is 1500 per minute."}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{style:{textAlign:"left"},children:"Path Parameters"})})}),(0,s.jsx)("tbody",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"userId"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"},children:" REQUIRED"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(t.p,{children:"The unique ID of the user."})})]})})})]}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{style:{textAlign:"left"},children:"Query Parameters"})})}),(0,s.jsx)("tbody",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"bot"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"},children:" REQUIRED"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(t.p,{children:"The unique bot ID associated with the user record."})})]})})})]}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("th",{style:{textAlign:"left"},children:[(0,s.jsx)("span",{children:"Request Body "}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"},children:" REQUIRED"}),(0,s.jsx)("div",{})]})})}),(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"firstName"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(t.p,{children:"The first name of the user"})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"lastName"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(t.p,{children:"The last name of the user"})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"phone"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(t.p,{children:"The phone number of the user"})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"tags"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string[]"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(t.p,{children:"An array of tags"})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"country"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(t.p,{children:"The country of the user"})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"emailOptIn"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" boolean"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(t.p,{children:"Indicates whether the user has opted in for email notifications"})})]})})]})]}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{style:{textAlign:"left"},children:"Responses"})})}),(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsxs)("div",{style:{display:"flex"},children:[(0,s.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)("code",{children:"400"})}),(0,s.jsx)("div",{children:(0,s.jsx)(t.p,{children:"Invalid userId provided"})})]}),(0,s.jsx)("div",{})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsxs)("div",{style:{display:"flex"},children:[(0,s.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)("code",{children:"404"})}),(0,s.jsx)("div",{children:(0,s.jsx)(t.p,{children:"User not found"})})]}),(0,s.jsx)("div",{})]})})]})]})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>o});var n=i(96540);const s={},r=n.createContext(s);function a(e){const t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);