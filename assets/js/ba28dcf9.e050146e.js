"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[91927],{603905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return y}});var n=a(667294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),s=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(a),m=r,y=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(y,l(l({ref:t},c),{},{components:a})):n.createElement(y,l({ref:t},c))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[d]="string"==typeof e?e:r,l[1]=p;for(var s=2;s<o;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},856804:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return d}});var n=a(487462),r=a(263366),o=(a(667294),a(603905)),l=["components"],p={title:"Configure data on default tables",sidebar_label:"Configure data"},i=void 0,s={unversionedId:"platform_concepts/growth/dataexplorer/configure-data",id:"platform_concepts/growth/dataexplorer/configure-data",title:"Configure data on default tables",description:"You can configure data using the following options on the default tables:",source:"@site/docs/platform_concepts/growth/dataexplorer/configure-data.md",sourceDirName:"platform_concepts/growth/dataexplorer",slug:"/platform_concepts/growth/dataexplorer/configure-data",permalink:"/docs/platform_concepts/growth/dataexplorer/configure-data",draft:!1,tags:[],version:"current",frontMatter:{title:"Configure data on default tables",sidebar_label:"Configure data"},sidebar:"platform_concepts",previous:{title:"Analyse default tables",permalink:"/docs/platform_concepts/growth/dataexplorer/defaulttables"},next:{title:"Default DB table descriptions",permalink:"/docs/cookbooks/insights/eventdescriptions"}},c={},d=[{value:"Push custom data to default tables",id:"push-custom-data-to-default-tables",level:2},{value:"Secure PII data on default tables",id:"secure-pii-data-on-default-tables",level:2},{value:"Steps to generate a public key",id:"steps-to-generate-a-public-key",level:3}],u={toc:d};function m(e){var t=e.components,a=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can configure data using the following options on the default tables:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Push custom data"),": You have the capability to push custom data available in the user's 360 profile into the default tables."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Secure data"),": You can enhance the security of your users' data, including personally identifiable information (PII) like names, email addresses, or phone numbers, by encrypting it.")),(0,o.kt)("h2",{id:"push-custom-data-to-default-tables"},"Push custom data to default tables"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"API events, Bot events, Message events, and User engagement events")," tables have two columns blank by default, CUSTOMID 1\tand CUSTOMID 2. You can choose to push any of the user properties that are stored on ",(0,o.kt)("a",{parentName:"p",href:"https://docs.yellow.ai/docs/platform_concepts/engagement/cdp/user_data/user_properties"},"user360")," to all those default tables. "),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This action is irreversible. Once you configure it, the column(s) added will remain as a part of the default tables. ")),(0,o.kt)("p",null,"Steps to push custom data to default tables: "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Add a new user property on the ",(0,o.kt)("a",{parentName:"li",href:"https://docs.yellow.ai/docs/platform_concepts/engagement/cdp/user_data/user_properties#custom-user-properties"},"user360")," page. "),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Data explorer")," > ",(0,o.kt)("strong",{parentName:"li"},"Configure"),".\n",(0,o.kt)("img",{parentName:"li",src:"https://cdn.yellowmessenger.com/assets/docs/image-11.png",alt:"image"})),(0,o.kt)("li",{parentName:"ol"},"Select ",(0,o.kt)("strong",{parentName:"li"},"Map custom data"),". From the dropdown menu, choose a property (the custom data you want to push to API events, Bot events, Message events, and User engagement events tables) for CUSTOMID 1 and CUSTOMID 2.\n",(0,o.kt)("img",{parentName:"li",src:"https://cdn.yellowmessenger.com/assets/docs/image-9.png",alt:"image"})),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Configure")," and ",(0,o.kt)("strong",{parentName:"li"},"Add"),". Your custom data will get populated in the default tables.  ",(0,o.kt)("img",{src:"https://cdn.yellowmessenger.com/assets/docs/image-10.png",width:"50%"}))),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"CUSTOMID 2 can be added only after adding CUSTOMID 1.  ")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"secure-pii-data-on-default-tables"},"Secure PII data on default tables"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Secure data")," feature allows users to encrypt personally identifiable information (PII) data during export and within the user interface of data explorer tables. This encryption of PII data applies to all users, with the exception of super admins, who will retain access to the unencrypted original data."),(0,o.kt)("p",null,"Follow the steps below to secure PII data within default tables:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Data explorer")," > ",(0,o.kt)("strong",{parentName:"li"},"Configure"),".\n",(0,o.kt)("img",{parentName:"li",src:"https://cdn.yellowmessenger.com/assets/docs/image-11.png",alt:"image"})),(0,o.kt)("li",{parentName:"ol"},"Enable the option to encrypt PII data and enter your ",(0,o.kt)("strong",{parentName:"li"},"Public key"),".\n",(0,o.kt)("img",{parentName:"li",src:"https://cdn.yellowmessenger.com/assets/docs/image-12.png",alt:"image"})),(0,o.kt)("li",{parentName:"ol"},"A summary will be displayed, showing which tables and columns will be encrypted. This data will be encrypted in the table UI in Data Explorer, the table UI in Reporting, during export from Data Explorer, and during export from Data Ops.")),(0,o.kt)("p",null,"Encrypted data: "),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Tables"),(0,o.kt)("th",{parentName:"tr",align:null},"ColumnsColumns"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"API events"),(0,o.kt)("td",{parentName:"tr",align:null},"UID, BID")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Message events"),(0,o.kt)("td",{parentName:"tr",align:null},"UID, BID")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"User engagement events"),(0,o.kt)("td",{parentName:"tr",align:null},"UID, BID")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"User feedback"),(0,o.kt)("td",{parentName:"tr",align:null},"UID")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Inbox events"),(0,o.kt)("td",{parentName:"tr",align:null},"UID, AgentId")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Inbox call records"),(0,o.kt)("td",{parentName:"tr",align:null},"UID")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Chat tickets"),(0,o.kt)("td",{parentName:"tr",align:null},"User_ID, Contact_phone, Contact_email, Contact_name")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Email tickets"),(0,o.kt)("td",{parentName:"tr",align:null},"Contact_first_name, Contact_email")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Video chats"),(0,o.kt)("td",{parentName:"tr",align:null},"Client_name, Client_email")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Notifications report"),(0,o.kt)("td",{parentName:"tr",align:null},"UserID, SenderID, cdpUserID")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Call details report"),(0,o.kt)("td",{parentName:"tr",align:null},"SourceNumber, DestinationNumber")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Leads"),(0,o.kt)("td",{parentName:"tr",align:null},"UID, BID")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Conversations"),(0,o.kt)("td",{parentName:"tr",align:null},"UID, userName, replyTo, answeredBy")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Bot tables"),(0,o.kt)("td",{parentName:"tr",align:null},"Masked columns will be encrypted (builder configuration)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Analytics (Under Custom Tables)"),(0,o.kt)("td",{parentName:"tr",align:null},"UID, BID")))),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Configure")," to save the configuration and encrypt all PII data.")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"Data will be encrypted for all users except Super Admin"),(0,o.kt)("li",{parentName:"ul"},"Configuration can be done by only Admins and Super Admin"),(0,o.kt)("li",{parentName:"ul"},"Aggregations on encrypted fields should be allowed"),(0,o.kt)("li",{parentName:"ul"},"Filters and groupBy on encrypted fields will not be possible"))),(0,o.kt)("h3",{id:"steps-to-generate-a-public-key"},"Steps to generate a public key"),(0,o.kt)("p",null,"Follow these steps to generate the keys for encryption:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Generate private key:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"openssl genpkey -algorithm RSA -out private_key.pem\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Extract public key from private key:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"openssl rsa -pubout -in private_key.pem -out public_key.pem\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Copy the public key and paste at Yellow Platform:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pbcopy < public_key.pem\n")),(0,o.kt)("p",null,"The private key should be kept secure for decrypting encrypted data. Any tool that supports RSA decryption can be used with the key."),(0,o.kt)("details",null,(0,o.kt)("summary",null," Sample code for decryption in Node.js "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'const crypto = require("crypto")\n\n// Decrypt using the private key\nconst decryptRSA = (privateKey, encryptedData) => {\n    const encryptedDataBuffer = Buffer.from(encryptedData, \'base64\');\n    const decryptedDataBuffer = crypto.privateDecrypt({\n        key: privateKey,\n        padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,\n        oaepHash: "sha256"\n    }, encryptedDataBuffer);\n    return JSON.parse(decryptedDataBuffer.toString(\'utf-8\'));\n};\n\nprivateKey = `<YOUR PRIVATE KEY>`\nencryptedData = "<cipherText>"\n\nconsole.log(`decrytedData - ${decryptRSA(privateKey, encryptedData)}`);\n\n'))),(0,o.kt)("details",null,(0,o.kt)("summary",null," Sample code for decryption in Python "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import serialization, hashes\nfrom cryptography.hazmat.primitives.asymmetric import padding\nimport base64\nimport json\n\n# RSA private key in PEM format\nprivate_key_pem = """<YOUR PRIVATE KEY>"""\n\ncipherText = "<cipherText>"\n\n# Load the private key\nprivate_key = serialization.load_pem_private_key(\n    private_key_pem.encode(),\n    password=None,\n    backend=default_backend()\n)\n\n# Decode and decrypt the data\nencrypted_data = base64.b64decode(cipherText)\ndecrypted_data = private_key.decrypt(\n    encrypted_data,\n    padding.OAEP(\n        mgf=padding.MGF1(algorithm=hashes.SHA256()),\n        algorithm=hashes.SHA256(),\n        label=None\n    )\n)\n\nprint("Decrypted Data:", json.loads(decrypted_data.decode(\'utf-8\')))\n\n'))),(0,o.kt)("details",null,(0,o.kt)("summary",null," Sample code for decryption in Java "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'import java.security.KeyFactory;\nimport java.security.PrivateKey;\nimport java.security.spec.PKCS8EncodedKeySpec;\nimport java.util.Base64;\nimport javax.crypto.Cipher;\nimport java.security.spec.MGF1ParameterSpec;\nimport javax.crypto.spec.PSource;\nimport javax.crypto.spec.OAEPParameterSpec;\n\n\npublic class RSADecryption {\n    public static void main(String[] args) throws Exception {\n        String privateKeyPEM = "<YOUR PRIVATE KEY>";  // RSA private key in PEM format\n        PrivateKey privateKey = getPrivateKeyFromString(privateKeyPEM);\n        \n        // Base64-encoded encrypted data\n        String encryptedDataBase64 = "<cipherText>";\n        byte[] encryptedData = Base64.getDecoder().decode(encryptedDataBase64);\n        \n        // Decrypt the encrypted data using the private key\n        String decryptedText = decryptWithPrivateKey(encryptedData, privateKey);\n \n        System.out.println("Decrypted Text: " + decryptedText);\n    }\n\n    // Convert PEM private key string to PrivateKey object\n    public static PrivateKey getPrivateKeyFromString(String privateKeyPEM) throws Exception {\n        privateKeyPEM = privateKeyPEM\n                .replace("-----BEGIN PRIVATE KEY-----", "")\n                .replace("-----END PRIVATE KEY-----", "")\n                .replaceAll("\\\\s+", ""); // Remove whitespace characters\n\n        byte[] privateKeyBytes = Base64.getDecoder().decode(privateKeyPEM);\n        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(privateKeyBytes);\n        KeyFactory keyFactory = KeyFactory.getInstance("RSA");\n        return keyFactory.generatePrivate(keySpec);\n    }\n\n    // Decrypt data using the private key\n    public static String decryptWithPrivateKey(byte[] encryptedData, PrivateKey privateKey) throws Exception {\n        Cipher cipher = Cipher.getInstance("RSA/ECB/OAEPWithSHA-256AndMGF1Padding");\n        cipher.init(Cipher.DECRYPT_MODE, privateKey, new OAEPParameterSpec("SHA-256", "MGF1", MGF1ParameterSpec.SHA256, PSource.PSpecified.DEFAULT));\n        byte[] decryptedBytes = cipher.doFinal(encryptedData);\n        return new String(decryptedBytes, "UTF-8");\n    }\n}\n\n'))))}m.isMDXComponent=!0}}]);