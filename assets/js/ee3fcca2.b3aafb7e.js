"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[81653],{22194:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"platform_concepts/studio/build/nodes/action-nodes-overview/generate-pdf-image","title":"Generate PDF/Image node","description":"The Generate PDF/Image node allows you to create PDF and image files (JPG, JPEG, PNG) from DOCX, HTML, or Base64-encoded files. You can use this node when you want to generate documents (PDF) or images (PNG, JPG, and JPEG) based on user inputs.","source":"@site/docs/platform_concepts/studio/build/nodes/action-nodes-overview/generate-pdf-image.md","sourceDirName":"platform_concepts/studio/build/nodes/action-nodes-overview","slug":"/platform_concepts/studio/build/nodes/action-nodes-overview/generate-pdf-image","permalink":"/docs/platform_concepts/studio/build/nodes/action-nodes-overview/generate-pdf-image","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Generate PDF/Image node","sidebar_label":"Generate PDF/Image"},"sidebar":"platform_concepts","previous":{"title":"File validator","permalink":"/docs/platform_concepts/studio/build/nodes/action-nodes-overview/file-validator"},"next":{"title":"Knowledge search","permalink":"/docs/platform_concepts/studio/build/nodes/action-nodes-overview/knowledge-search-node"}}');var s=t(74848),i=t(28453);const r={title:"Generate PDF/Image node",sidebar_label:"Generate PDF/Image"},l=void 0,a={},d=[{value:"To convert from docx to PDF format",id:"to-convert-from-docx-to-pdf-format",level:3},{value:"To convert HTML to PDF/JPG/JPEG format",id:"to-convert-html-to-pdfjpgjpeg-format",level:3},{value:"To convert from Base64",id:"to-convert-from-base64",level:3},{value:"APIs",id:"apis",level:4},{value:"Variables",id:"variables",level:4},{value:"Generate PDF file from CDN url",id:"generate-pdf-file-from-cdn-url",level:3},{value:"Steps to implement",id:"steps-to-implement",level:4}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"The Generate PDF/Image node allows you to create PDF and image files (JPG, JPEG, PNG) from DOCX, HTML, or Base64-encoded files. You can use this node when you want to generate documents (PDF) or images (PNG, JPG, and JPEG) based on user inputs."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Use cases"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Flight boarding pass"}),": Automatically generate a PDF of a boarding pass for users after booking a flight."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Medical prescription"}),": Generate a patient's prescription as a downloadable PDF or image that can be easily accessed after a consultation"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configure Generate PDF/Image node"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Drag and drop the Generate PDF/Image node to the workflow in the flow editor."}),"\n",(0,s.jsx)("img",{src:"https://imgur.com/yY1xHYY.png",alt:"drawing",width:"80%"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"You can select the following formats to convert:"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#to-convert-from-docx-to-pdf-format",children:"docx (to PDF)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#to-convert-html-to-pdfjpgjpeg-format",children:"HTML (to PDF/JPG/JPEG/PNG)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#to-convert-from-base64",children:"Base64"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"to-convert-from-docx-to-pdf-format",children:"To convert from docx to PDF format"}),"\n",(0,s.jsx)(n.p,{children:"To convert docx to PDF format, follow these steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Choose the ",(0,s.jsx)(n.strong,{children:"Docs"})," option."]}),"\n",(0,s.jsx)("img",{src:"https://imgur.com/yY1xHYY.png",alt:"drawing",width:"80%"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Define the following fields:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In ",(0,s.jsx)(n.strong,{children:"Template"}),": Click ",(0,s.jsx)(n.strong,{children:"Upload file"})," and upload the template based on which the PDF should be generated. This document should be in ",(0,s.jsx)(n.code,{children:".docx"})," format and have placeholder values wherever the dynamic data is to be inserted. The placeholder should be enclosed in single brackets, that is",(0,s.jsx)(n.code,{children:"{placeholdername}"}),". For example, The user name is ",(0,s.jsx)(n.code,{children:"{user name}"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["In ",(0,s.jsx)(n.strong,{children:"+ Add Variable Mapping"}),": Enter the placeholder name that you have included in docx without the brackets in the left column and select a variable (in which the value is collected from the user) in the right column. You can multiple placeholder names."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Select an output format:"})," Choose the PDF option as that's the only available option for docs."]}),"\n",(0,s.jsx)(n.li,{children:"Store the response in an object variable. For example, 'pdf_response'."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Include a text node and enter this syntax:",(0,s.jsx)(n.code,{children:"{{{variables.pdf_response.file.url}}}"})," to view the pdf file."]}),"\n",(0,s.jsx)("img",{src:"https://imgur.com/9lq68qv.png",alt:"drawing",width:"70%"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Refer to the following gif to see how the docx format is converted to pdf."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://imgur.com/t1lvWpt.gif",alt:""})}),"\n",(0,s.jsx)(n.h3,{id:"to-convert-html-to-pdfjpgjpeg-format",children:"To convert HTML to PDF/JPG/JPEG format"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Choose the ",(0,s.jsx)(n.strong,{children:"HTML"})," option."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://i.imgur.com/IP7PcU4.png",alt:""})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Define the following fields:\ni. In ",(0,s.jsx)(n.strong,{children:"Select variable containing HTML string"}),": Choose the variable that contains the HTML string.\nii. In ",(0,s.jsx)(n.strong,{children:"Select an output format"}),", choose the format in which the file should be generated, ",(0,s.jsx)(n.strong,{children:"PDF"}),"/",(0,s.jsx)(n.strong,{children:"JPG"}),"/",(0,s.jsx)(n.strong,{children:"JPEG"}),"/",(0,s.jsx)(n.strong,{children:"PNG"}),".\niii. Enable ",(0,s.jsx)(n.strong,{children:"Advanced options"})," to set the margin and dimensions based on which the file should be geenrated."]}),"\n",(0,s.jsx)("img",{src:"https://i.imgur.com/JTS0zZ8.png",alt:"drawing",width:"50%"}),"\n",(0,s.jsxs)(n.p,{children:["iv. Store the response in an object variable like 'pdf_response'. For example, ",(0,s.jsx)(n.strong,{children:"pdf_response"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Include a text node and enter this syntax:",(0,s.jsx)(n.code,{children:"{{{variables.pdf_response.file.url}}}"})," to view the file in pdf or image format."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Refer to the following gif to see how the HTML format is converted to PDF/JPG/JPEG format."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://imgur.com/VadEPOc.gif",alt:""})}),"\n",(0,s.jsx)(n.h3,{id:"to-convert-from-base64",children:"To convert from Base64"}),"\n",(0,s.jsx)(n.p,{children:"There are two ways by which you can convert Base64 files from:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#apis",children:"APIs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#variables",children:"Variables"})}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"apis",children:"APIs"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.strong,{children:"Input type"})," choose ",(0,s.jsx)(n.strong,{children:"API"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.strong,{children:"API"}),", choose the API added to your bot. If your API has dynamic paramters, add nodes to collect that information from users."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.strong,{children:"Path to a BASE64 key"}),", enter the path to the BASE64 key."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Select an output format"}),": Choose the PDF option."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://i.imgur.com/fVfihOO.png",alt:""})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["To display PDFs from an API response, store the response in  an object variable, for example ",(0,s.jsx)(n.strong,{children:"pdf_response"}),". Include a text node and enter this syntax ",(0,s.jsx)(n.code,{children:"{{{variables.pdf_response.file.url}}}"})]})}),"\n",(0,s.jsx)(n.h4,{id:"variables",children:"Variables"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In ",(0,s.jsx)(n.strong,{children:"Input type"})," choose ",(0,s.jsx)(n.strong,{children:"Variable"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["In ",(0,s.jsx)(n.strong,{children:"Select variable"}),", choose the variable that contains the BASE64 file."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Select an output format"}),": Choose the PDF option."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Display the file through the ",(0,s.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes/message-nodes1/file-node",children:"File node"}),". Simply choose the relevant variable from the ",(0,s.jsx)(n.strong,{children:"fetch from variable"})," dropdown, it will send the dynamically generated file as a PDF to the user."]}),"\n",(0,s.jsx)(n.h3,{id:"generate-pdf-file-from-cdn-url",children:"Generate PDF file from CDN url"}),"\n",(0,s.jsx)(n.p,{children:"When PDF URLs are retrieved from an API response or internal database, you can use a custom script to generate a downloadable PDF file and share it with the user."}),"\n",(0,s.jsx)(n.p,{children:"This is done by formatting the file details into a JavaScript object and storing it in a variable of type Object, which is then used in the File node to deliver the file to the user."}),"\n",(0,s.jsx)(n.p,{children:"Let's say your API returns a PDF file URL like:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"https://cdn.yellowmessenger.com/PpfArbF4dxlI1744625393376.pdf"})}),"\n",(0,s.jsxs)(n.p,{children:["You can format and return this URL in a structure supported by the ",(0,s.jsx)(n.a,{href:"https://docs/platform_concepts/studio/build/nodes/prompt-node-overview/file-prompt-node",children:"File node"})," using a script function."]}),"\n",(0,s.jsx)(n.h4,{id:"steps-to-implement",children:"Steps to implement"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Step 1"}),": Write a ",(0,s.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/code",children:"Function"})," to format the File object. Use a function node or logic node to write the following script. It consists of PDF link and file name inside an object format expected by the File node:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:'return new Promise(resolve => {\n    // Replace the static link with your logic to extract the PDF link from API/database\n    // Example: let pdflink = data.variables.pdfLink;\n    let pdflink = "https://cdn.yellowmessenger.com/PpfArbF4dxlI1744625393376.pdf";\n\n    let obj = {\n        "file": {\n            "url": `${pdflink}`,\n            "name": "file name"\n        }\n    };\n\n    console.log(pdflink, "link of the file");\n    resolve(obj);\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"url"}),": Provide the full PDF URL."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"name"}),": Provide the file name that will appear to the user when they download it."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Step 2"}),": Store the response in an object variable"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Save the output of the above function in a variable."}),"\n",(0,s.jsx)(n.li,{children:"The variable should be of type Object."}),"\n",(0,s.jsx)(n.li,{children:"Example variable name: pdfFileObject."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/filenodepdf.png",alt:""})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Step 3"}),": Use the Object Variable in a File Node"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Add a File node to your conversation flow."}),"\n",(0,s.jsx)(n.li,{children:"In the Fetch from section, select Variable."}),"\n",(0,s.jsx)(n.li,{children:"Choose the variable name used in Step 2 (example, pdfFileObject)."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/objectdata.png",alt:""})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var o=t(96540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);