"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[77467],{28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var t=s(96540);const o={},r=t.createContext(o);function i(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},44428:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"platform_concepts/AIAgent/call-workflow","title":"Call workflow","description":"A workflow is a predefined action or process your AI agent can trigger during a conversation. Use this option to execute tasks like retrieving booking details, processing payments, verifying user information, or updating records. You can pass user inputs as variables to the workflow and capture the output for use in later steps.","source":"@site/docs/platform_concepts/AIAgent/call-workflow.md","sourceDirName":"platform_concepts/AIAgent","slug":"/platform_concepts/AIAgent/call-workflow","permalink":"/docs/platform_concepts/AIAgent/call-workflow","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Call workflow","sidebar_label":"Call workflow"},"sidebar":"platform_concepts","previous":{"title":"Get input","permalink":"/docs/platform_concepts/AIAgent/get-input"},"next":{"title":"Transfer to Live agent","permalink":"/docs/platform_concepts/AIAgent/transfer-live-agent"}}');var o=s(74848),r=s(28453);const i={title:"Call workflow",sidebar_label:"Call workflow"},l=void 0,a={},c=[{value:"Output node in Workflows",id:"output-node-in-workflows",level:3},{value:"Output path",id:"output-path",level:3},{value:"Create a workflow",id:"create-a-workflow",level:3},{value:"Define a workflow",id:"define-a-workflow",level:3},{value:"Call a workflow in prompt",id:"call-a-workflow-in-prompt",level:3},{value:"Use case: Fetch weather updates using API via workflow",id:"use-case-fetch-weather-updates-using-api-via-workflow",level:3},{value:"Step 1: Define the Workflow",id:"step-1-define-the-workflow",level:4},{value:"Step 2: Call workflow in prompt",id:"step-2-call-workflow-in-prompt",level:4}];function d(e){const n={a:"a",code:"code",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"A workflow is a predefined action or process your AI agent can trigger during a conversation. Use this option to execute tasks like retrieving booking details, processing payments, verifying user information, or updating records. You can pass user inputs as variables to the workflow and capture the output for use in later steps."}),"\n",(0,o.jsx)(n.p,{children:"The table below describes the fields available in the Workflow action (How does the workflow work?):"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Step"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Trigger the workflow"})}),(0,o.jsx)(n.td,{children:"When the conversation reaches the Call workflow action, the AI agent activates the linked workflow."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Pass input variables"})}),(0,o.jsx)(n.td,{children:"The AI agent sends relevant input data (e.g., booking ID, user name) collected earlier in the conversation to the workflow."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Workflow processing"})}),(0,o.jsxs)(n.td,{children:["The workflow executes its logic to perform tasks, automate backend operations, and handle complex scenarios, such as: ",(0,o.jsxs)("ul",{children:[(0,o.jsx)("li",{children:"Fetching data from APIs or databases (e.g., retrieving weather updates using location data)"}),(0,o.jsx)("li",{children:"Raising support tickets (e.g., for flight cancellations)"}),(0,o.jsx)("li",{children:"Connecting to a human agent when needed"}),(0,o.jsx)("li",{children:"Executing custom functions (e.g., calculating baggage charges)"})]})]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Store output"})}),(0,o.jsx)(n.td,{children:"The workflow\u2019s response (e.g., booking status, payment confirmation) is stored in a variable for use in subsequent conversation steps."})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"output-node-in-workflows",children:"Output node in Workflows"}),"\n",(0,o.jsx)(n.p,{children:"The Output node in a Workflow defines what data is returned once the workflow has finished executing. This data can be text, variables, or rich media, and it is passed back to the conversation that triggered the workflow. The returned output can then be used in the following steps of the conversation to deliver dynamic responses."}),"\n",(0,o.jsx)(n.p,{children:"The Output node ensures that results from operations like API calls, database queries, or logic functions are returned in a structured usable form to the AI agent to continue the conversation based on real-time data."}),"\n",(0,o.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/outputnode1.png",alt:"drawing",width:"90%"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Types of Output"})}),"\n",(0,o.jsx)(n.p,{children:"You can configure the Output node to return one of the following types:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Static"}),": Returns a predefined text message when the Workflow completes.",(0,o.jsx)("br",{})," ",(0,o.jsx)(n.strong,{children:"Use case"}),": Use this when the output is static and does not depend on dynamic input.",(0,o.jsx)("br",{})," ",(0,o.jsx)(n.strong,{children:"Example"}),': "Thank you! Your request has been submitted."']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Variable"}),": Returns dynamic content stored in a variable, such as values fetched from APIs, databases, or functions.",(0,o.jsx)("br",{})," ",(0,o.jsx)(n.strong,{children:"Use case"}),": When the workflow depends on user inputs or dynamic data.",(0,o.jsx)("br",{}),"  Store the weather temperature fetched from an API and use it later in the conversation."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Rich media"}),": Returns visually enhanced responses for user engagement. Rich media is supported across web and messaging platforms like WhatsApp. Types of Rich media:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Quick reply"})," \u2013 Displays button-based options for easy user input."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Quick reply workflow",src:s(48549).A+"",width:"1920",height:"1080"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"WhatsApp list"})," \u2013 Displays a structured list of selectable items."]}),"\n",(0,o.jsx)("gif",{}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Cards"})," \u2013 Display images, titles, and buttons in a visually engaging format."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Carousel workflow",src:s(67088).A+"",width:"1920",height:"1080"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"output-path",children:"Output path"}),"\n",(0,o.jsx)(n.p,{children:"Use the Output path when you set the Output type to Variable. It lets the workflow return specific data from a larger API response."}),"\n",(0,o.jsx)(n.p,{children:"When the workflow receives a complex or nested response (like JSON), you can extract only the needed data by using dot notation in the Output path field."}),"\n",(0,o.jsx)(n.p,{children:"By using the Output path, you ensure the workflow sends only the relevant part of the response back to the conversation."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"How to use it"}),":"]}),"\n",(0,o.jsx)(n.p,{children:"Suppose your API response looks like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "main": {\n    "temp": 27.5,\n    "humidity": 80\n  },\n  "weather": [\n    {\n      "description": "partly cloudy"\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"You can use the Output path to extract:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"String"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Temperature: ",(0,o.jsx)(n.code,{children:"main.temp"})]}),"\n",(0,o.jsxs)(n.li,{children:["Humidity: ",(0,o.jsx)(n.code,{children:"main.humidity"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Array"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Weather description: ",(0,o.jsx)(n.code,{children:"weather[0].description"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"These paths will extract specific value from the response and assign it to your selected output variable to use in the next conversation step."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Best practices:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Always preview the structure of your API before defining the path."}),"\n",(0,o.jsx)(n.li,{children:"Use an Output path when you want the particular value, not the full response."}),"\n",(0,o.jsx)(n.li,{children:"Use array notation ([0], [1]) for accessing items in lists or arrays."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"create-a-workflow",children:"Create a workflow"}),"\n",(0,o.jsx)(n.p,{children:"To create a worflow, follow these steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Navigate to ",(0,o.jsx)(n.strong,{children:"Agents"})," > ",(0,o.jsx)(n.strong,{children:"Prompts"})," > ",(0,o.jsx)(n.strong,{children:"Actions"})," > ",(0,o.jsx)(n.strong,{children:"Call workflow"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/callworkflow.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Click ",(0,o.jsx)(n.strong,{children:"+ Create workflow"}),"."]}),"\n",(0,o.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/createworkflow1.png",alt:"drawing",width:"40%"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Provide a ",(0,o.jsx)(n.strong,{children:"Workflow name"})," and ",(0,o.jsx)(n.strong,{children:"Description"})," to explain the purpose of the workflow."]}),"\n",(0,o.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/workdetails.png",alt:"drawing",width:"50%"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"This will create a new workflow where you can configure with the required input parameters, logic, and output settings."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["You can also create a workflow via the ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/Flows/journeys#create-a-workflow-via-workflow-builder-section",children:"Workflow builder section"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"define-a-workflow",children:"Define a workflow"}),"\n",(0,o.jsx)(n.p,{children:"Defining a workflow allows the AI agent to perform automated backend tasks such as retrieving, validating, or storing data based on the user's input during a conversation."}),"\n",(0,o.jsx)(n.p,{children:"When defining a workflow, you need to use variables collected during the conversation (such as user name, travel date, or contact number) and pass them into the workflow. These variables drive the logic within the workflow and determine what actions are taken."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"A well-defined workflow helps you to:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Automate backend operations like API calls or database updates."}),"\n",(0,o.jsx)(n.li,{children:"Use dynamic inputs from the user by mapping variables into the workflow."}),"\n",(0,o.jsx)(n.li,{children:"Maintain consistency and reduce duplication across conversation flows."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Use case"}),": Fetch and store user booking details"]}),"\n",(0,o.jsx)(n.p,{children:"To define a workflow, follow these steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Use prompts to collect user details for flight booking and store them in input variables."}),"\n",(0,o.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/database.png",alt:"drawing",width:"80%"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/database#create-database-table",children:"Create a database"})," with columns matching the fields you want to store (example, name, phone number, destination)."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/db.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Go to the workflow that you have created and add a Database node and select the created database. For more information, click ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/database#insert-new-records-or-values-into-a-database-table",children:"here"}),"."]}),"\n",(0,o.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/dbserach.png",alt:"drawing",width:"80%"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Click ",(0,o.jsx)(n.strong,{children:"Define"})," and map the input variables to the corresponding database columns."]}),"\n",(0,o.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/definewrok.png",alt:"drawing",width:"50%"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Link the Database node to the Output node to complete the workflow."}),"\n",(0,o.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/output.png",alt:"drawing",width:"80%"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"call-a-workflow-in-prompt",children:"Call a workflow in prompt"}),"\n",(0,o.jsx)(n.p,{children:"Once you have defined a workflow, you need to call it from a prompt to trigger it during a conversation. This allows the AI agent to perform backend operations such as fetching or storing data based on user input collected earlier in the conversation."}),"\n",(0,o.jsx)(n.p,{children:"This connects the user\u2019s interaction to backend logic in real-time to enable actions such as database updates, API calls, or data validation."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Use cases"})}),"\n",(0,o.jsx)(n.p,{children:"Here are some examples of how workflows can be triggered via prompts:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Database"}),": Store a user\u2019s booking details (example, name, phone, destination)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"API integration"}),": Fetch real-time flight status or weather updates."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Validation"}),": Confirm if an entered email is already registered."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Service ticket"}),": Submit a refund or cancellation request and get a reference ID."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Let us consider the below use case:"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Use case:"})," Book a flight and store booking details"]}),"\n",(0,o.jsx)(n.p,{children:"A user provides travel information (example, name, destination, travel date). The AI agent collects this data through prompts and then calls a predefined workflow to store the information in a database."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"How to call a workflow in a prompt?"})}),"\n",(0,o.jsx)(n.p,{children:"To call a workflow in a prompt, follow these steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Navigate to ",(0,o.jsx)(n.strong,{children:"Agents"})," > ",(0,o.jsx)(n.strong,{children:"Prompts"}),", and go to the prompt where the workflow should be triggered."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Click ",(0,o.jsx)(n.strong,{children:"Action"})," and select ",(0,o.jsx)(n.strong,{children:"Call workflow"}),", or use the shortcut key ",(0,o.jsx)(n.code,{children:"$"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/callworkflow.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Choose the workflow you previously created from the drop-down."}),"\n",(0,o.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/traveldb.png",alt:"drawing",width:"80%"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Click the ",(0,o.jsx)(n.strong,{children:"Edit"})," icon next to the selected workflow and map the required input variables (example, user_name, travel_date) that were collected during the conversation."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/mapworkflow.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Click ",(0,o.jsx)(n.strong,{children:"Save"})," to complete the configuration."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Once configured, the workflow will automatically be triggered when the conversation reaches this prompt. The workflow\u2019s output can be stored in a variable and used in the next steps of the conversation."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"use-case-fetch-weather-updates-using-api-via-workflow",children:"Use case: Fetch weather updates using API via workflow"}),"\n",(0,o.jsx)(n.p,{children:"This use case demonstrates how the AI agent can retrieve and display real-time weather updates based on user-provided location inputs using a backend API workflow."}),"\n",(0,o.jsx)(n.h4,{id:"step-1-define-the-workflow",children:"Step 1: Define the Workflow"}),"\n",(0,o.jsx)(n.p,{children:"You need to create a backend workflow that accepts location inputs, calls a weather API, and returns the temperature and weather conditions."}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Navigate to ",(0,o.jsx)(n.strong,{children:"Agents"})," > ",(0,o.jsx)(n.strong,{children:"Prompts"})," > ",(0,o.jsx)(n.strong,{children:"Actions"})," > ",(0,o.jsx)(n.strong,{children:"Call workflow"})," and click ",(0,o.jsx)(n.strong,{children:"+ Create workflow"}),". (name workflow GetWeatherUpdate)."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/callworkflow.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Use a Variable node at the start of the workflow to define the input parameters needed for the API. For this use case, define: ",(0,o.jsx)(n.strong,{children:"latitude"})," and ",(0,o.jsx)(n.strong,{children:"longitude"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/variableskill.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/api/add-api-apinode#import-api",children:"Add a API node"})," to import a weather API and configure it with the following details:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"API"}),": Select the API that you have added."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Name"}),": Enter the name of the API."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Method"}),":  Enter the method as GET."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"URL"}),": Enter the URL as ",(0,o.jsx)(n.code,{children:"https://api.openweathermap.org/data/2.5/weather?lat=12.9716&lon=77.5946&appid=fab8b859cea632996b45a82f2361b345&units=metric"})]}),"\n"]}),"\n",(0,o.jsx)("img",{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/APInode.png",alt:"drawing",width:"80%"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Store the full API response in a variable."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/storeresponse.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Define the workflow by mapping the specific fields that you want to use from the API response, like latitude, longitude, or humidity."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/apimap.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Add an Output node to return the mapped values and set:",(0,o.jsx)("br",{})]}),"\n",(0,o.jsxs)(n.p,{children:["i. ",(0,o.jsx)(n.strong,{children:"Type of output"}),": Choose ",(0,o.jsx)(n.strong,{children:"Variable"})," as the output type.",(0,o.jsx)("br",{}),"\nii. ",(0,o.jsx)(n.strong,{children:"Select a variable"}),": Select a variable storing the API response.",(0,o.jsx)("br",{}),"\niii. ",(0,o.jsx)(n.strong,{children:"Path"}),": Use dot notation (example, main.temp) to extract specific values from the API response."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"This set up completes the workflow definition. You can now use the workflow in the conversation."}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"step-2-call-workflow-in-prompt",children:"Step 2: Call workflow in prompt"}),"\n",(0,o.jsxs)(n.p,{children:["Once the workflow is defined, connect it to your conversation using the ",(0,o.jsx)(n.strong,{children:"Call workflow"})," action in  the prompt section."]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:'Write a prompt that asks the user for their location. Example: "Please share your location or enter latitude and longitude".'}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Call workflow"})," action in the prompt and choose the GetWeatherUpdate workflow from the list."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/callworkflowpro.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Click the ",(0,o.jsx)(n.strong,{children:"Edit"})," icon and map the collected latitude and longitude to the workflow inputs and assign the output from the workflow to a variable."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/assets/yellow-docs/loading.png",alt:""})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Click ",(0,o.jsx)(n.strong,{children:"Save"})," to complete the configuration."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["To download the API logs, click ",(0,o.jsx)(n.a,{href:"https://docs.yellow.ai/docs/cookbooks/studio/downloadapilogs",children:"here"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Refer to the following GIF to see the complete process of fetching weather updates using an API via a workflow:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Weather API skill",src:s(89872).A+"",width:"1920",height:"1080"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},48549:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/quickreplyworkflow-e80d43e54187324dc9cc1843ed718c20.gif"},67088:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/carouselworkflow-69e83cea501c699ad803eadeb06e4711.gif"},89872:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/weatherAPIskill-aa1399ea82ae1ca5d9fef50b83b30df5.gif"}}]);