"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[53683],{603905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,f=p["".concat(d,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},277574:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return d},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=n(487462),a=n(263366),o=(n(667294),n(603905)),i=["components"],l={title:"Date and time validator",sidebar_label:"Date and time validator"},d=void 0,s={unversionedId:"platform_concepts/studio/build/nodes/action-nodes-overview/date-time-validator",id:"platform_concepts/studio/build/nodes/action-nodes-overview/date-time-validator",title:"Date and time validator",description:"Date and time validator node helps validate whether date and time inputs provided during a bot conversation are valid and follow a predefined format.",source:"@site/docs/platform_concepts/studio/build/nodes/action-nodes-overview/date-time-validator.md",sourceDirName:"platform_concepts/studio/build/nodes/action-nodes-overview",slug:"/platform_concepts/studio/build/nodes/action-nodes-overview/date-time-validator",permalink:"/docs/platform_concepts/studio/build/nodes/action-nodes-overview/date-time-validator",draft:!1,tags:[],version:"current",frontMatter:{title:"Date and time validator",sidebar_label:"Date and time validator"},sidebar:"platform_concepts",previous:{title:"Delay",permalink:"/docs/platform_concepts/studio/build/nodes/action-nodes-overview/delay"},next:{title:"Execute flow",permalink:"/docs/platform_concepts/studio/build/nodes/action-nodes-overview/execute-flow"}},c={},p=[],u={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Date and time validator node helps validate whether date and time inputs provided during a bot conversation are valid and follow a predefined format. "),(0,o.kt)("p",null,"You can use this node in scenarios such as scheduling appointments, booking reservations, or managing time-sensitive information, like reminders and deadlines."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Use case")),(0,o.kt)("p",null,"In a healthcare chatbot, the Date and time validator node can be used when scheduling an appointment. When the user provides a date and time for their appointment, the bot checks that the date is in the correct format (example, DD/MM/YYYY) and the time is within working hours (example, 9 AM to 5 PM). If the input is invalid, the bot prompts the user to enter a valid date and time."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Limitation")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'This node is limited to specific formats and cannot handle unconventional or ambiguous date/time inputs (for example, natural language inputs like "next Monday").'),(0,o.kt)("li",{parentName:"ul"},"It requires a predefined format, so flexibility for various time zones or regional date formats may be limited.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Configure Date and time validator node")),(0,o.kt)("p",null,"To configure date and time validator node, follow these steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Drag and drop the Date and time validator node to the flow editor.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Enter a validation message if the Date and time format is valid."),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{parentName:"p",src:"https://imgur.com/2y9xqY1.png",alt:null})))))}m.isMDXComponent=!0}}]);