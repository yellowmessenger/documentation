"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[39740],{28453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>i});var s=t(96540);const n={},o=s.createContext(n);function a(e){const r=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(o.Provider,{value:r},e.children)}},49942:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"platform_concepts/engagement/cdp/user_data/store_conv_data","title":"Add or update user properties from AI-agent conversations","description":"Auto-capturing of location-specific user properties","source":"@site/docs/platform_concepts/engagement/cdp/user_data/store_conv_data.md","sourceDirName":"platform_concepts/engagement/cdp/user_data","slug":"/platform_concepts/engagement/cdp/user_data/store_conv_data","permalink":"/docs/platform_concepts/engagement/cdp/user_data/store_conv_data","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Add or update user properties from AI-agent conversations","sidebar_label":"Add/update user properties from AI-agent conversations"},"sidebar":"platform_concepts","previous":{"title":"User identification flow","permalink":"/docs/platform_concepts/engagement/cdp/user_data/userid-flow"},"next":{"title":"Personalize conversations with user properties","permalink":"/docs/platform_concepts/engagement/cdp/user_data/personalise_conversations"}}');var n=t(74848),o=t(28453);const a={title:"Add or update user properties from AI-agent conversations",sidebar_label:"Add/update user properties from AI-agent conversations"},i=void 0,c={},p=[{value:"Auto-capturing of location-specific user properties",id:"auto-capturing-of-location-specific-user-properties",level:2},{value:"Different ways to add/update user properties",id:"different-ways-to-addupdate-user-properties",level:2},{value:"Store user properties from AI-agent conversations",id:"store-user-properties-from-ai-agent-conversations",level:3},{value:"To capture property values from other variables",id:"to-capture-property-values-from-other-variables",level:4},{value:"To capture user property values from bot script/function",id:"to-capture-user-property-values-from-bot-scriptfunction",level:3},{value:"Capture user properties from API or integration action payload",id:"capture-user-properties-from-api-or-integration-action-payload",level:3},{value:"Update user properties through AI-agent conversations",id:"update-user-properties-through-ai-agent-conversations",level:2}];function d(e){const r={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h2,{id:"auto-capturing-of-location-specific-user-properties",children:"Auto-capturing of location-specific user properties"}),"\n",(0,n.jsx)(r.p,{children:"The system can automatically capture essential user details based on the user's location for both Web and WhatsApp AI-agents."}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Channel"}),(0,n.jsx)(r.th,{children:"User properties captured"}),(0,n.jsx)(r.th,{children:"Additional details"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"WhatsApp AI-agent"}),(0,n.jsx)(r.td,{children:"Phone number, Country code"}),(0,n.jsxs)(r.td,{children:["Captures ",(0,n.jsx)(r.code,{children:"country"})," using the country code in phone number. However, the system may not capture the user's name in all cases, as the user might not have provided it, or the name might contain numbers or special characters that fail validation for the ",(0,n.jsx)(r.code,{children:"firstName"})," and ",(0,n.jsx)(r.code,{children:"lastName"})," properties."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Web AI-agent"}),(0,n.jsx)(r.td,{children:"Timezone and country code"}),(0,n.jsx)(r.td,{children:"Uses IP address to capture these details."})]})]})]}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsx)(r.p,{children:"This is currently supported for web, and WhatsApp AI-agents."})}),"\n",(0,n.jsx)(r.h2,{id:"different-ways-to-addupdate-user-properties",children:"Different ways to add/update user properties"}),"\n",(0,n.jsx)(r.p,{children:"There are four different ways in which you can capture user properties:"}),"\n",(0,n.jsx)(r.h3,{id:"store-user-properties-from-ai-agent-conversations",children:"Store user properties from AI-agent conversations"}),"\n",(0,n.jsxs)(r.p,{children:["In addition to the userId, you can also store other user properties in real-time within the user record. User properties are stored in the current record, which is mapped in User 360. You can utilize these properties to ",(0,n.jsx)(r.a,{href:"https://docs.yellow.ai/docs/platform_concepts/engagement/cdp/user_data/personalise_conversations",children:"create personalized conversations"})," with AI-agent users, taking into account their previous interactions and preferences."]}),"\n",(0,n.jsxs)(r.p,{children:["To store user details (such as name, email address, phone number, and any other relevant information) through the AI-agent, use ",(0,n.jsx)(r.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes/prompt-nodes",children:"Prompt nodes"})," or ",(0,n.jsx)(r.a,{href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes/action-nodes-overview/variables-node",children:"Variables node"})," in the AI-agent Builder."]}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"All user properties captured for a record will be mapped to the user as soon as the `userId' is captured during the session."}),"\n"]})}),"\n",(0,n.jsxs)(r.p,{children:["To store the user\u2019s response in User 360, in ",(0,n.jsx)(r.strong,{children:"Store Response in"}),", choose variables only under ",(0,n.jsx)(r.strong,{children:"User properties"}),". If a specific user property is not available, ",(0,n.jsx)(r.a,{href:"https://docs.yellow.ai/docs/platform_concepts/engagement/cdp/user_data/user_properties#custom-user-properties",children:"create a custom property"})," and use it."]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{src:"https://i.imgur.com/h8FfpZE.png",alt:""})}),"\n",(0,n.jsx)(r.h4,{id:"to-capture-property-values-from-other-variables",children:"To capture property values from other variables"}),"\n",(0,n.jsxs)(r.p,{children:["If you want to capture user properties from other variables, use the syntax: ",(0,n.jsx)(r.code,{children:"{{variables.variableName}}"}),"."]}),"\n",(0,n.jsx)("img",{src:"https://imgur.com/Giwso6b.png",width:"70%"}),"\n",(0,n.jsxs)(r.p,{children:["Check out the list of all the ",(0,n.jsx)(r.a,{href:"https://docs.yellow.ai/docs/platform_concepts/engagement/cdp/user_data/user_properties",children:"user properties"}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"to-capture-user-property-values-from-bot-scriptfunction",children:"To capture user property values from bot script/function"}),"\n",(0,n.jsx)(r.p,{children:"For example, in the sample script below, to capture the phone number as the userId:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'`<script type="text/javascript">`  \nwindow.ymConfig = {"bot":"x1673261303850","host":"[https://cloud.yellow.ai](https://cloud.yellow.ai/)", "payload":{"name":"Tom","phoneNumber":"9090000000","email":"[tom@example.com](mailto:email@example.com)"},};  \n(function() {  \nvar w = window,  \nic = w.YellowMessenger;  \nif ("function" === typeof ic) ic("reattach_activator"), ic("update", ymConfig);  \nelse {  \nvar d = document,  \ni = function() {  \ni.c(arguments)  \n};  \nfunction l() {  \nvar e = d.createElement("script");  \ne.type = "text/javascript", e.async = !0, e.src = "[https://cdn.yellowmessenger.com/plugin/widget-v2/latest/dist/main.min.js](https://cdn.yellowmessenger.com/plugin/widget-v2/latest/dist/main.min.js)";  \nvar t = d.getElementsByTagName("script")[0];  \nt.parentNode.insertBefore(e, t)  \n}  \ni.q = [], i.c = function(e) {  \ni.q.push(e)  \n}, w.YellowMessenger = i, w.attachEvent ? w.attachEvent("onload", l) : w.addEventListener("load", l, !1)}  \n})();  \n<\/script>\n\n'})}),"\n",(0,n.jsx)(r.p,{children:"You can use the Function node to capture and store the variable in the respective user property."}),"\n",(0,n.jsxs)(r.p,{children:["For instance, here ",(0,n.jsx)(r.code,{children:"returnId"})," is the function name containing the provided code."]}),"\n",(0,n.jsxs)(r.p,{children:["To access property values from the ",(0,n.jsx)(r.code,{children:"payload"})," schema above, you can use the syntax: ",(0,n.jsx)(r.code,{children:"data.profile.payload"}),"."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'return new Promise(resolve => {\n   let payload = data.profile.payload\n   if (typeof (payload) === "string") {\n      payload = JSON.parse(payload);\n   }\n   console.log(payload);\n   ymLib.logger.log(payload,"init--Payload");\n   resolve(payload)\n});\n'})}),"\n",(0,n.jsx)(r.p,{children:"Store the response returned by the Function in the corresponding variable, in this case, 'userId`."}),"\n",(0,n.jsx)("img",{src:"https://i.imgur.com/qqltmgO.png",width:"70%"}),"\n",(0,n.jsx)(r.h3,{id:"capture-user-properties-from-api-or-integration-action-payload",children:"Capture user properties from API or integration action payload"}),"\n",(0,n.jsx)(r.p,{children:"First, store the payload in an object variable."}),"\n",(0,n.jsx)("img",{src:"https://i.imgur.com/ZdyD8u7.png",width:""}),"\n",(0,n.jsx)(r.p,{children:"Sample payload"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'{\n   "name": "Tom",\n   "phoneNumber":"9090000000",\n   "email":"tom@example.com"\n}\n'})}),"\n",(0,n.jsxs)(r.p,{children:["To access a specific key value from the object variable, use the syntax:  ",(0,n.jsx)(r.code,{children:"{{{variables.objVariableName.key}}}"})]}),"\n",(0,n.jsx)("img",{src:"https://i.imgur.com/vwCUkDo.png",width:"60%"}),"\n",(0,n.jsx)(r.p,{children:"For example:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"{{{variables.userData.phoneNumber}}}"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"{{{variables.userData.email}}}"})}),"\n"]}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"You can also use SDK APIs to programmatically set user properties and the user ID."}),"\n",(0,n.jsx)(r.li,{children:"You can also make use of Function to extract the required information from a payload."}),"\n"]})}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"update-user-properties-through-ai-agent-conversations",children:"Update user properties through AI-agent conversations"}),"\n",(0,n.jsx)(r.p,{children:"Once the user is identified, you can update the user properties (other than userId) using the Prompt or Variable nodes."}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsxs)(r.p,{children:["You cannot update user ID once captured. If the userId is captured again in a flow, it will map to the existing record if it already exists, or create a new userId if it does not exist. To know about user identification in Builder, see ",(0,n.jsx)(r.a,{href:"https://docs.yellow.ai/docs/platform_concepts/engagement/cdp/user_data/data_capture_convers",children:"How user records are created through conversations & unified in User 360"}),"."]})}),"\n",(0,n.jsx)(r.p,{children:"To update existing user properties:"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:["Capture the user property that you want to update using the Variable node or Prompt node, as explained in ",(0,n.jsx)(r.a,{href:"#store-user-id-through-builder",children:"Store userId through builder"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:["Store them in the respective User properties, as explained in ",(0,n.jsx)(r.a,{href:"#store-user-properties-through-builder",children:"Store user properties through builder"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"In Prompt nodes, choose the relevant name under User properties."}),"\n"]}),"\n",(0,n.jsx)("center",{children:(0,n.jsx)("img",{src:"https://i.imgur.com/mFz74Ka.png",width:"60%"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["In the Variable node, choose the relevant user property or add it manually using the syntax ",(0,n.jsx)(r.code,{children:"{{user.propertyName}}"})]}),"\n"]}),"\n",(0,n.jsx)("center",{children:(0,n.jsx)("img",{src:"https://i.imgur.com/1MvEa5O.png",width:"60%"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Furthermore, learn ",(0,n.jsx)(r.a,{href:"https://docs.yellow.ai/docs/platform_concepts/engagement/cdp/user_data/userid-flow#custom-property-identifier-flow",children:"how to capture variables from Functions, Payload, and Bot script"}),". Please note that the process for capturing userId or any  any other user property remains the same."]}),"\n"]}),"\n",(0,n.jsx)(r.hr,{})]})}function l(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);