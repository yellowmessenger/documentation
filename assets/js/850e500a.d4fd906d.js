"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[750],{603905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var o=n(667294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),s=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,d=c["".concat(p,".").concat(m)]||c[m]||g[m]||a;return n?o.createElement(d,i(i({ref:t},u),{},{components:n})):o.createElement(d,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},53481:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var o=n(487462),r=n(263366),a=(n(667294),n(603905)),i=["components"],l={title:"Debug flows",sidebar_label:"Debug flows",tags:["debug flows","debugger","flow debugger"]},p=void 0,s={unversionedId:"platform_concepts/studio/debugger",id:"platform_concepts/studio/debugger",title:"Debug flows",description:"The Flow Debugger allows AI-agent developers to inspect variables and track changes in their values at each node level. By enabling step-by-step flow execution through breakpoints, it facilitates the rapid identification of logic and runtime errors, aiding in efficient debugging processes",source:"@site/docs/platform_concepts/studio/debugger.md",sourceDirName:"platform_concepts/studio",slug:"/platform_concepts/studio/debugger",permalink:"/docs/platform_concepts/studio/debugger",draft:!1,tags:[{label:"debug flows",permalink:"/docs/tags/debug-flows"},{label:"debugger",permalink:"/docs/tags/debugger"},{label:"flow debugger",permalink:"/docs/tags/flow-debugger"}],version:"current",frontMatter:{title:"Debug flows",sidebar_label:"Debug flows",tags:["debug flows","debugger","flow debugger"]},sidebar:"platform_concepts",previous:{title:"Export flows",permalink:"/docs/platform_concepts/studio/build/Flows/exportflow"},next:{title:"Debug issues using logs",permalink:"/docs/cookbooks/studio/debug-logs"}},u={},c=[{value:"Set up breakpoints",id:"set-up-breakpoints",level:2},{value:"Start debugging the flow",id:"start-debugging-the-flow",level:2},{value:"Resume flow execution from a breakpoint",id:"resume-flow-execution-from-a-breakpoint",level:3},{value:"Step over a breakpoint",id:"step-over-a-breakpoint",level:3},{value:"End the debugging session",id:"end-the-debugging-session",level:2}],g={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The Flow Debugger allows AI-agent developers to inspect variables and track changes in their values at each node level. By enabling step-by-step flow execution through breakpoints, it facilitates the rapid identification of logic and runtime errors, aiding in efficient debugging processes"),(0,a.kt)("p",null,"To debug your flows:"),(0,a.kt)("h2",{id:"set-up-breakpoints"},"Set up breakpoints"),(0,a.kt)("p",null,"Breakpoints serve as special markers that pause flow execution at designated points. Currently, we support breakpoints only at the node level."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Go to ",(0,a.kt)("strong",{parentName:"p"},"Automation")," and open the flow you'd like to debug.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Click ",(0,a.kt)("strong",{parentName:"p"},"Preview")," > ",(0,a.kt)("strong",{parentName:"p"},"debug icon"),"."),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/WjGxCc1.png",alt:null}))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Click the ",(0,a.kt)("strong",{parentName:"p"},"Debugger")," tab. To know about how console works, click ",(0,a.kt)("a",{parentName:"p",href:"https://docs.yellow.ai/docs/platform_concepts/studio/debugger"},"here"),"."),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/3tOjmsc.png",alt:null}))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Click the ",(0,a.kt)("strong",{parentName:"p"},"Start debugging")," option to start the debug session."),(0,a.kt)("p",{parentName:"li"},"  ",(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/m0AXLDB.png",alt:null})),(0,a.kt)("p",{parentName:"li"},"After initiating the debugging session, node breakpoints become visible,  allowing users to set them at specific nodes. "),(0,a.kt)("p",{parentName:"li"},"  ",(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/Z2Ukror.png",alt:null}))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"To set a breakpoint, click the breakpoint button on the node. This stops the flow execution once the control reaches that node."),(0,a.kt)("img",{src:"https://i.imgur.com/NZK38XG.png",alt:"drawing",width:"40%"})),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"To disable the breakpoint, reclick the breakpoint on the specific node. Disabling a breakpoint for a node allows the flow execution to proceed normally without any interruption."))),(0,a.kt)("h2",{id:"start-debugging-the-flow"},"Start debugging the flow"),(0,a.kt)("p",null,"Once the breakpoints are set, ",(0,a.kt)("a",{parentName:"p",href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/Flows/configureflow#31-test-bot-flow-via-studio-overview-page"},"preview the flow"),". The flow execution will stop when it reaches a breakpoint node. An active breakpoint looks like the node highlighted in the image below."),(0,a.kt)("p",null,"   ",(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/VMbGlNO.png",alt:null})),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The widget interaction will also be disabled at this point.")),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"Debugger")," section will reflect the current state of variables or the values stored in those variables at the particular point of flow execution."),(0,a.kt)("p",null,"   ",(0,a.kt)("img",{parentName:"p",src:"https://i.postimg.cc/FFwY6W3b/1111111.png",alt:null})),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"The debugger section can be resized, with the default height set at 30% of the builder area's height and adjustable up to a maximum of 50%.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Breakpoints are applicable across multiple flows, when a flow execution switches to another flow using the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.yellow.ai/docs/platform_concepts/studio/build/nodes/action-nodes-overview/execute-flow"},"Execute flow node"),", the new flow containing the breakpoint will automatically load.")))),(0,a.kt)("h3",{id:"resume-flow-execution-from-a-breakpoint"},"Resume flow execution from a breakpoint"),(0,a.kt)("p",null,"When the flow execution halts at a breakpoint, resuming will restart the execution until it reaches the next breakpoint, if any. Click the ",(0,a.kt)("strong",{parentName:"p"},"resume")," button to continue the flow."),(0,a.kt)("p",null,"   ",(0,a.kt)("img",{parentName:"p",src:"https://i.postimg.cc/zBTHqTn2/resume.png",alt:null})),(0,a.kt)("h3",{id:"step-over-a-breakpoint"},"Step over a breakpoint"),(0,a.kt)("p",null,"Step over lets you proceed to the next step after the breakpoint, resembling the execution of a function one node at a time and moving over to the subsequent line. Click ",(0,a.kt)("strong",{parentName:"p"},"Step over")," to proceed to the next step."),(0,a.kt)("p",null,"   ",(0,a.kt)("img",{parentName:"p",src:"https://i.postimg.cc/WzwDkrbW/step-over.png",alt:null})),(0,a.kt)("h2",{id:"end-the-debugging-session"},"End the debugging session"),(0,a.kt)("p",null,"You can close a debugging session by three ways:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Click the red pause button on the debugging session."),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/1Zwpm9l.png",alt:null}))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"From the ",(0,a.kt)("strong",{parentName:"p"},"Debugger")," section."),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("img",{parentName:"p",src:"https://i.postimg.cc/qM7n3by2/close-1.png",alt:null}))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"From the flow preview section."),(0,a.kt)("img",{src:"https://i.postimg.cc/htst1cnj/wert.png",alt:"drawing",width:"40%"}))))}m.isMDXComponent=!0}}]);