"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[91337],{603905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(667294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),g=o,d=m["".concat(s,".").concat(g)]||m[g]||c[g]||r;return n?a.createElement(d,i(i({ref:t},u),{},{components:n})):a.createElement(d,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},451318:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return m}});var a=n(487462),o=n(263366),r=(n(667294),n(603905)),i=["components"],l={title:"Google sheet integration for dynamic record update",sidebar_label:"Google Sheet integration for dynamic record update"},s=void 0,p={unversionedId:"cookbooks/integrations/google-sheets",id:"cookbooks/integrations/google-sheets",title:"Google sheet integration for dynamic record update",description:"This guide will walk you through integrating Google sheets with your AI-agent to automatically update records based on user interactions.",source:"@site/docs/cookbooks/integrations/google-sheets.md",sourceDirName:"cookbooks/integrations",slug:"/cookbooks/integrations/google-sheets",permalink:"/docs/cookbooks/integrations/google-sheets",draft:!1,tags:[],version:"current",frontMatter:{title:"Google sheet integration for dynamic record update",sidebar_label:"Google Sheet integration for dynamic record update"},sidebar:"cookbooks",previous:{title:"Parse API response field",permalink:"/docs/cookbooks/integrations/parseapi"},next:{title:"Gen-AI (Beginner level)",permalink:"/docs/cookbooks/Gen-AI-beginner"}},u={},m=[{value:"Steps to automatically update a Google sheet",id:"steps-to-automatically-update-a-google-sheet",level:3}],c={toc:m};function g(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This guide will walk you through integrating Google sheets with your AI-agent to automatically update records based on user interactions."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Scenario")),(0,r.kt)("p",null,"Consider that you have created a ",(0,r.kt)("a",{parentName:"p",href:"https://docs.yellow.ai/docs/platform_concepts/engagement/outbound/outbound-campaigns/run-campaign"},"campaign")," to notify users about current offers, and you want to automatically update a Google sheet with user interaction details when the campaign is sent. The goal is to capture and insert the following information into the Google sheet:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Template name"),": Name of the template used in the campaign."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Quick reply clicked"),": User's selected quick reply option."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Campaign ID"),": Unique identifier for the campaign."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"User phone number"),": Contact number of the user."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Timestamp"),": Date and time of the interaction.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Prerequisites")),(0,r.kt)("p",null,"Consider the following prerequisite to automatically update records in Google sheet:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Google sheets integration"),": Configure the integration with ",(0,r.kt)("a",{parentName:"li",href:"https://docs.yellow.ai/docs/platform_concepts/appConfiguration/google-sheets#scope-of-integration"},"Google sheets"),".\n",(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/DKcySrP.png",alt:null})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Create an event"),": Set up an ",(0,r.kt)("a",{parentName:"li",href:"https://docs.yellow.ai/docs/platform_concepts/studio/events/event-hub"},"event")," in the ",(0,r.kt)("strong",{parentName:"li"},"Engagement")," section to trigger the data capture flow.\n",(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/RqrWo8v.png",alt:null})," ")),(0,r.kt)("h3",{id:"steps-to-automatically-update-a-google-sheet"},"Steps to automatically update a Google sheet"),(0,r.kt)("p",null,"To configure a bot flow that dynamically updates a Google sheet based on user interactions, follow these steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Go to the flow editor and select the start trigger type as ",(0,r.kt)("strong",{parentName:"p"},"Event")," and choose the event that you have created."),(0,r.kt)("img",{src:"https://i.imgur.com/x7TL32I.png",alt:"drawing",width:"50%"})),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add a Variable node to store to store all template values retrieved from the quick reply event and the values of the Google sheets nodes:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"spreadSheetID"),": Unique Google Sheet ID."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"range"),": Defines the cell range for data insertion/deletion/updates."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"majorDimension"),": Specifies how data is should be arranged (ROWS or COLUMNS)."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To append new entries in new rows and to avoid overwriting existing records, use the ",(0,r.kt)("strong",{parentName:"p"},"Google sheets")," node to retrieve existing sheet data and store the result in an object variable."))),(0,r.kt)("p",null,"Sample success response of GetValuesFromSheet:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'{\n  "spreadsheetId": "1FXBz2k8m9Ys3zkJy6n8G4237q1x43Tq4nu6CdM1A66Y",\n  "valueRanges": [\n    {\n      "range": "Sheet1!A1:A5",\n      "majorDimension": "COLUMNS",\n      "values": [\n        [\n          "J",\n          "O",\n          "H",\n          "N"\n        ]\n      ]\n    }\n  ]\n}\n')),(0,r.kt)("img",{src:"https://i.imgur.com/ZEORR4B.png",alt:"drawing",width:"80%"}),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Connect ",(0,r.kt)("strong",{parentName:"p"},"Analytics")," node to the Google Sheets node\u2019s fallback to capture any errors or event data for further analysis."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/4DH3WbE.png",alt:null}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"After retrieving the sheet records, add a Function node to insert the data. The function node performs two operations:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Adjust the range value"),": The function increments the row index by +1 to ensure new data is inserted into the next available row, avoiding any overwriting of existing records.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Output"),": The function's output should be saved in an object variable that includes the array of values to be inserted into the sheet and the updated range for data placement."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/7j0hE4s.png",alt:null})))))),(0,r.kt)("p",null,"A sample code to get the total length of records and to populate an array variable for inserting the records in the sheet: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'return new Promise(resolve => {\n        // Your logic goes here\n\n    let templateName = data.variables.template_name\n    let phone = data.variables.phone\n    let campaignid = data.variables.campaignId\n\n    let qrclicked = data.variables.QRclicked\n\n    let currentTime = new Date();\n    \n\n    let currentOffset = currentTime.getTimezoneOffset();\n    let ISTOffset = 330;   // IST offset UTC +5:30 \n    let ISTTime = new Date(currentTime.getTime() + (ISTOffset + currentOffset) * 60000);\n    console.log(ISTTime, " istToday ")\n    let hoursIST = ISTTime.getHours()\n    let minutes = ISTTime.getMinutes()\n    // console.log(hoursIST, " hoursIST ")\n    // console.log(minutes, " minutes ")\n\n    let date = ISTTime.getDate()\n    let month = ISTTime.getMonth() + 1\n    let year = ISTTime.getFullYear()\n    let day = ISTTime.getDay()\n    console.log(month, "month ==")\n\n    console.log(day, "day ==")\n\n    let d = `${date}/${month}/${year}`\n   let t\n\n    if (hoursIST >= 0 && hoursIST < 12) {\n        t = " AM";\n    } else if (hoursIST >= 12 && hoursIST < 24) {\n      t = " PM";\n    }\n    let time = `${d}, ${hoursIST}:${minutes} ${t}`\n    console.log(time, " time ")\n\n\n    let myArray = [\n                    [phone], \n                    [qrclicked],\n                    [templateName],\n                    [campaignid],\n                    [time]\n                     ]\n\n console.log(myArray, " ==== my array ====")\n \n    let y = data.variables.obj.valueRanges[0].values.length\n    // console.log(data.variables.obj, " === data.variables.obj")\n    console.log(y, "====== Number of Records =====" )\n //Range = Main!A:Z\n    let range = `Main!A${y + 1}:Z`\n\n\n    let obj = {\n        "a": myArray,\n        "b": range\n    }\n\n     console.log(obj," === obj ===")\n        resolve(obj);\n    });                                 \n')),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add a Variable node to modify the ",(0,r.kt)("strong",{parentName:"p"},"majorDimension"),' variable to "COLUMNS". This ensures each array record is added to a separate column within the sheet.'),(0,r.kt)("p",{parentName:"li"}," ",(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/Rn8RqLu.png",alt:null})))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),": If your data is: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"}," [\n    [1, 2, 3],\n    [4, 5, 6]\n]\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If major dimension is rows the data in the sheets will be added as vertically"),(0,r.kt)("img",{src:"https://i.imgur.com/vfecWkN.png",alt:"drawing",width:"60%"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If the major dimension is COLUMNS then the data shall be added as horizontally."),(0,r.kt)("img",{src:"https://i.imgur.com/dkAHzID.png",alt:"drawing",width:"60%"}))),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In Google sheets nodes, define the following:"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Select ",(0,r.kt)("strong",{parentName:"li"},"Insert/UpdateValuesInSheet")," option from Google Sheets node. "),(0,r.kt)("li",{parentName:"ol"},"Pass the parameters such as majorDimension, Range (updated value from step 5), values (data array to be inserted), spreadSheetID."),(0,r.kt)("li",{parentName:"ol"},"Store the node output in an object variable.")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/c7drrps.png",alt:null})," ")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Connect ",(0,r.kt)("strong",{parentName:"p"},"Analytics")," node to the Google sheet's node fallback. This node will capture the event name and error response for analysis."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/4DH3WbE.png",alt:null})))),(0,r.kt)("p",null,"The screenshot below illustrates how user interaction data from a campaign is automatically inserted into a Google sheet:"),(0,r.kt)("p",null,"   ",(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/noNjlSl.png",alt:null})))}g.isMDXComponent=!0}}]);