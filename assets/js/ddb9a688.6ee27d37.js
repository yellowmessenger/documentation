"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[88617],{28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>l});var i=o(96540);const t={},s=i.createContext(t);function r(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}},53378:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"platform_concepts/mobile/chatbot/ios","title":"iOS Chatbot SDK","description":"Installation","source":"@site/docs/platform_concepts/mobile/chatbot/ios.md","sourceDirName":"platform_concepts/mobile/chatbot","slug":"/platform_concepts/mobile/chatbot/ios","permalink":"/docs/platform_concepts/mobile/chatbot/ios","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"iOS Chatbot SDK","sidebar_label":"iOS"},"sidebar":"platform_concepts","previous":{"title":"Flutter","permalink":"/docs/platform_concepts/mobile/chatbot/flutter"},"next":{"title":"React Native","permalink":"/docs/platform_concepts/mobile/chatbot/react-native"}}');var t=o(74848),s=o(28453);const r={title:"iOS Chatbot SDK",sidebar_label:"iOS"},l=void 0,c={},a=[{value:"Installation",id:"installation",level:2},{value:"CocoaPods",id:"cocoapods",level:3},{value:"Swift Package Manager Install",id:"swift-package-manager-install",level:3},{value:"Add Package directly to your Swift Project",id:"add-package-directly-to-your-swift-project",level:3},{value:"Basic Usage",id:"basic-usage",level:2},{value:"YMConfig",id:"ymconfig",level:2},{value:"Initialize YMConfig",id:"initialize-ymconfig",level:3},{value:"YM AuthenticationToken",id:"ym-authenticationtoken",level:3},{value:"Use Secure YM Auth",id:"use-secure-ym-auth",level:3},{value:"Push Notifications",id:"push-notifications",level:3},{value:"Payload",id:"payload",level:3},{value:"Trigger journey",id:"trigger-journey",level:4},{value:"On Premise / Region Specific deployments",id:"on-premise--region-specific-deployments",level:3},{value:"Custom loader",id:"custom-loader",level:3},{value:"V2 bot",id:"v2-bot",level:3},{value:"Speech to Text",id:"speech-to-text",level:3},{value:"Enable Speech to Text",id:"enable-speech-to-text",level:4},{value:"Mic Icon Color",id:"mic-icon-color",level:4},{value:"Mic Background Color",id:"mic-background-color",level:4},{value:"Set Mic Button Movable",id:"set-mic-button-movable",level:4},{value:"Hide Input Bar",id:"hide-input-bar",level:3},{value:"Use Lite version",id:"use-lite-version",level:3},{value:"Colors",id:"colors",level:3},{value:"Status bar background",id:"status-bar-background",level:4},{value:"Status bar style",id:"status-bar-style",level:4},{value:"Close button",id:"close-button",level:4},{value:"Theme setup",id:"theme-setup",level:3},{value:"Set bot name",id:"set-bot-name",level:4},{value:"Set bot description",id:"set-bot-description",level:4},{value:"Set bot primary color",id:"set-bot-primary-color",level:4},{value:"Set bot secondary color",id:"set-bot-secondary-color",level:4},{value:"Set bot bubble background color",id:"set-bot-bubble-background-color",level:4},{value:"Set link color",id:"set-link-color",level:4},{value:"Set bot icon",id:"set-bot-icon",level:4},{value:"Set bot click icon",id:"set-bot-click-icon",level:4},{value:"Start chatbot",id:"start-chatbot",level:2},{value:"Initialise View",id:"initialise-view",level:2},{value:"Bot Events",id:"bot-events",level:2},{value:"Bot close event",id:"bot-close-event",level:4},{value:"Disabling external link navigation",id:"disabling-external-link-navigation",level:2},{value:"Close bot",id:"close-bot",level:2},{value:"Reload bot",id:"reload-bot",level:2},{value:"Register Device",id:"register-device",level:2},{value:"Unlink Device Token",id:"unlink-device-token",level:2},{value:"Unread Message Count",id:"unread-message-count",level:2},{value:"Revalidate Token",id:"revalidate-token",level:2},{value:"Send Event To Bot",id:"send-event-to-bot",level:2},{value:"Permissions",id:"permissions",level:2},{value:"Logging",id:"logging",level:2},{value:"Demo App",id:"demo-app",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.h3,{id:"cocoapods",children:"CocoaPods"}),"\n",(0,t.jsxs)(n.p,{children:["To integrate YMChatbot into your Xcode project using CocoaPods, specify it in your ",(0,t.jsx)(n.code,{children:"Podfile"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"pod 'YMChat'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"swift-package-manager-install",children:"Swift Package Manager Install"}),"\n",(0,t.jsxs)(n.p,{children:["To integrate YMChatbot into your Xcode project using SPM, specify it in your ",(0,t.jsx)(n.code,{children:"Package.swift"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'dependencies: [\n    .package(url: "https://github.com/yellowmessenger/YMChatbot-iOS.git", .upToNextMajor(from: "1.7.3"))\n]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"add-package-directly-to-your-swift-project",children:"Add Package directly to your Swift Project"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://cdn.yellowmessenger.com/3NnDTb2GSSDG1644486017511.png",alt:""})}),"\n",(0,t.jsx)(n.admonition,{title:"Supported iOS versions:",type:"info",children:(0,t.jsx)(n.p,{children:"iOS 12 and above"})}),"\n",(0,t.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsxs)(n.p,{children:["Import the ",(0,t.jsx)(n.code,{children:"YMChat"})," framework in the Swift file"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"import YMChat\n"})}),"\n",(0,t.jsx)(n.p,{children:"After the framework is imported the bot can be presented with few lines as below"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'do {\n    let config = YMConfig(botId: "x1234567890")\n    YMChat.shared.config = config\n    try YMChat.shared.startChatbot(on: self)\n} catch {\n    print("Error occured while loading chatbot \\(error)")\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"ymconfig",children:"YMConfig"}),"\n",(0,t.jsxs)(n.p,{children:["YMConfig can be used to set the bot id and other bot related settings. It is recommended to set all appropriate config ",(0,t.jsx)(n.strong,{children:"before"})," starting the bot"]}),"\n",(0,t.jsx)(n.h3,{id:"initialize-ymconfig",children:"Initialize YMConfig"}),"\n",(0,t.jsxs)(n.p,{children:["YMConfig requires ",(0,t.jsx)(n.code,{children:"botID"})," to initialize. All other settings are optional."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'let config = YMConfig(botId: "<bot-id>")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"ym-authenticationtoken",children:"YM AuthenticationToken"}),"\n",(0,t.jsx)(n.p,{children:"ymAuthenticationToken is used to associate an identity of the user with the chat bot. This token is unique and remains constant for each individual user, and should be kept secure."}),"\n",(0,t.jsxs)(n.p,{children:["Whenever chatbot is launched with ymAuthenticationToken it will load the previous chats associated with this user since ",(0,t.jsx)(n.strong,{children:"inception"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'config.ymAuthenticationToken = "your-token"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Note: History will load only when ",(0,t.jsx)(n.code,{children:"Show history"})," flag is enabled in the channel settings"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"use-secure-ym-auth",children:"Use Secure YM Auth"}),"\n",(0,t.jsxs)(n.p,{children:["You can pass ",(0,t.jsx)(n.code,{children:"useSecureYmAuth"})," to enable additional security to your chat history. This safeguards your chatbot from unauthorized access even if an unauthorized party tries to access the token."]}),"\n",(0,t.jsxs)(n.p,{children:["To enable secure YmAuth, set ",(0,t.jsx)(n.code,{children:"useSecureYmAuth"})," to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"config.useSecureYmAuth = true\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["For more detailed information on how to set up secure YMAuthentication, click ",(0,t.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/mobile/chatbot/sdk-faq-worflows/secure-ymauth",children:"here"}),"."]})}),"\n",(0,t.jsx)(n.h3,{id:"push-notifications",children:"Push Notifications"}),"\n",(0,t.jsxs)(n.p,{children:["YMChat supports firebase notifications. Assign your ",(0,t.jsx)(n.code,{children:"FCM token"})," to deviceToken"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'config.deviceToken = "your-firebase-device-token"\n'})}),"\n",(0,t.jsx)(n.admonition,{title:"Mapping Firebase service key against Bot Id",type:"note",children:(0,t.jsxs)(n.p,{children:["To ",(0,t.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/mobile/chatbot/sdk-faq-worflows/push-notifications-sdks",children:"set up push notifications"}),", a Firebase service account JSON file is required. You need to map the service account JSON file against your bot ID. For detailed instructions on obtaining and using the Firebase service account JSON file, please refer to the link provided ",(0,t.jsx)(n.a,{href:"https://developers.google.com/assistant/engagement/notifications#get_a_service_account_key",children:"here"}),"."]})}),"\n",(0,t.jsx)(n.h3,{id:"payload",children:"Payload"}),"\n",(0,t.jsx)(n.p,{children:"Additional information can be passed in the form of key value pair from app to bot using payload."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'config.payload = ["name": "ym.bot.name", "device-type": "mobile"]\n'})}),"\n",(0,t.jsx)(n.p,{children:"Payload can be used to pass information from host app to bot. The payload dictionary should be JSON compatible else an error will be thrown"}),"\n",(0,t.jsxs)(n.p,{children:["For passing data from bot to app refer bot ",(0,t.jsx)(n.a,{href:"#bot-events",children:"Bot Events"})]}),"\n",(0,t.jsx)(n.admonition,{title:"payload security",type:"note",children:(0,t.jsx)(n.p,{children:"Payload is securely passed in HTTPS post request to protect the information passed in it"})}),"\n",(0,t.jsx)(n.h4,{id:"trigger-journey",children:"Trigger journey"}),"\n",(0,t.jsx)(n.p,{children:"A specific journey can be triggered on launch, by passing the slug in the payload."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'config.payload = ["JourneySlug" : "checkout-cart"]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"on-premise--region-specific-deployments",children:"On Premise / Region Specific deployments"}),"\n",(0,t.jsxs)(n.p,{children:["Your on-prem deployment URL can be set to ",(0,t.jsx)(n.code,{children:"customBaseUrl"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'config.customBaseUrl = "https://yourcustomurl.com"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["If the bot is deployed in a specific region(e.g. r1,r2,r3..rn) on yellow.ai cloud, set the ",(0,t.jsx)(n.code,{children:"customBaseUrl"})," as follows"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'config.customBaseUrl = "https://rx.cloud.yellow.ai"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Here rx = r1,r2,r3,r4,r5 etc"}),"\n",(0,t.jsx)(n.h3,{id:"custom-loader",children:"Custom loader"}),"\n",(0,t.jsx)(n.p,{children:"You can customize the loading image while bot loads. Just pass the URL in the following way. It is recommended to use jpg, png, svg or gif"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'config.customLoaderUrl = "https://example.com/your/custom/image.gif"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"v2-bot",children:"V2 bot"}),"\n",(0,t.jsx)(n.p,{children:"You can enable V2 bot by setting the version in config. Default value is 1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"config.version = 2\n"})}),"\n",(0,t.jsx)(n.h3,{id:"speech-to-text",children:"Speech to Text"}),"\n",(0,t.jsx)(n.h4,{id:"enable-speech-to-text",children:"Enable Speech to Text"}),"\n",(0,t.jsxs)(n.p,{children:["Speech to text can be enabled by setting the enableSpeech flag. Default value is ",(0,t.jsx)(n.code,{children:"false"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"config.speechConfig.enableSpeech = true\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The following config has deprecated in ",(0,t.jsx)(n.code,{children:"v1.20.0"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"config.enableSpeech = true\n"})}),"\n",(0,t.jsx)(n.h4,{id:"mic-icon-color",children:"Mic Icon Color"}),"\n",(0,t.jsxs)(n.p,{children:["You can change the mic button icon color by setting ",(0,t.jsx)(n.code,{children:"fabIconColor"})," in ",(0,t.jsx)(n.code,{children:"speechConfig"})," of YMConfig:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"config.speechConfig.fabIconColor = UIColor.white\n"})}),"\n",(0,t.jsx)(n.h4,{id:"mic-background-color",children:"Mic Background Color"}),"\n",(0,t.jsxs)(n.p,{children:["You can change the background color of the mic button by setting ",(0,t.jsx)(n.code,{children:"fabBackgroundColor"})," in ",(0,t.jsx)(n.code,{children:"speechConfig"})," of YMConfig."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"config.speechConfig.fabBackgroundColor = UIColor.blue\n"})}),"\n",(0,t.jsx)(n.h4,{id:"set-mic-button-movable",children:"Set Mic Button Movable"}),"\n",(0,t.jsxs)(n.p,{children:["You can set the mic button as movable or static by setting ",(0,t.jsx)(n.code,{children:"isButtonMovable"})," in ",(0,t.jsx)(n.code,{children:"speechConfig"})," of YMConfig. Default value is ",(0,t.jsx)(n.code,{children:"true"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"config.speechConfig.isButtonMovable = true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"hide-input-bar",children:"Hide Input Bar"}),"\n",(0,t.jsxs)(n.p,{children:["You can hide the input bar while bot is loading by setting the disableActionsOnLoad flag present in config. Default value is ",(0,t.jsx)(n.code,{children:"false"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"config.disableActionsOnLoad = true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"use-lite-version",children:"Use Lite version"}),"\n",(0,t.jsxs)(n.p,{children:["You can use lite version of the bot by setting the useLiteVersion flag present in config. Default value is ",(0,t.jsx)(n.code,{children:"false"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"config.useLiteVersion = true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"colors",children:"Colors"}),"\n",(0,t.jsx)(n.h4,{id:"status-bar-background",children:"Status bar background"}),"\n",(0,t.jsxs)(n.p,{children:["Status bar background color can be set using ",(0,t.jsx)(n.code,{children:"statusBarColor"})," variable present in YMConfig"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"config.statusBarColor = UIColor.red\n"})}),"\n",(0,t.jsx)(n.h4,{id:"status-bar-style",children:"Status bar style"}),"\n",(0,t.jsxs)(n.p,{children:["Status bar style can be set on ",(0,t.jsx)(n.code,{children:"statusBarStyle"})," variable present in YMConfig."]}),"\n",(0,t.jsxs)(n.p,{children:["Values can be either ",(0,t.jsx)(n.code,{children:"default"}),", ",(0,t.jsx)(n.code,{children:"lightContent"})," or ",(0,t.jsx)(n.code,{children:"darkContent"}),". Default type is ",(0,t.jsx)(n.code,{children:"default"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"config.statusBarStyle = UIStatusBarStyle.darkContent\n"})}),"\n",(0,t.jsx)(n.h4,{id:"close-button",children:"Close button"}),"\n",(0,t.jsxs)(n.p,{children:["Close button color can be set on ",(0,t.jsx)(n.code,{children:"closeButtonColor"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"config.closeButtonColor = UIColor.blue\n"})}),"\n",(0,t.jsx)(n.h3,{id:"theme-setup",children:"Theme setup"}),"\n",(0,t.jsx)(n.p,{children:"You can customize the appearance of your chatbot interface by applying a theme. Using the YMConfig's theme property, you can modify various aspects of your chatbot, including its name, description, primary and secondary colors, icon, and click icon."}),"\n",(0,t.jsxs)(n.p,{children:["You can set the theme using the ",(0,t.jsx)(n.code,{children:"theme"})," property of the YMConfig object."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"let theme = YMTheme() // YMTheme will holds the theme properties for your chatbot.\n\n// update properties of theme variable\n\nconfig.theme = theme // sets the theme to your bot config\n"})}),"\n",(0,t.jsx)(n.h4,{id:"set-bot-name",children:"Set bot name"}),"\n",(0,t.jsxs)(n.p,{children:["Define your bot's name using ",(0,t.jsx)(n.code,{children:"theme.botName"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'theme.botName = "Demo Bot Name" \n'})}),"\n",(0,t.jsx)(n.h4,{id:"set-bot-description",children:"Set bot description"}),"\n",(0,t.jsxs)(n.p,{children:["Provide a description for your bot using ",(0,t.jsx)(n.code,{children:"theme.botDescription"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'theme.botDescription = "Demo Bot Description" \n'})}),"\n",(0,t.jsx)(n.h4,{id:"set-bot-primary-color",children:"Set bot primary color"}),"\n",(0,t.jsxs)(n.p,{children:["Customize the primary color of your bot using ",(0,t.jsx)(n.code,{children:"theme.primaryColor"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"theme.primaryColor = .black\n"})}),"\n",(0,t.jsx)(n.h4,{id:"set-bot-secondary-color",children:"Set bot secondary color"}),"\n",(0,t.jsxs)(n.p,{children:["Define the secondary color of your bot using ",(0,t.jsx)(n.code,{children:"theme.secondaryColor"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"theme.secondaryColor = .white\n"})}),"\n",(0,t.jsx)(n.h4,{id:"set-bot-bubble-background-color",children:"Set bot bubble background color"}),"\n",(0,t.jsxs)(n.p,{children:["Customize the background color of your bot bubble or message using ",(0,t.jsx)(n.code,{children:"theme.botBubbleBackgroundColor"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"theme.botBubbleBackgroundColor = .green\n"})}),"\n",(0,t.jsx)(n.h4,{id:"set-link-color",children:"Set link color"}),"\n",(0,t.jsxs)(n.p,{children:["Customize the link color in messages using ",(0,t.jsx)(n.code,{children:"theme.linkColor"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'theme.linkColor = "#FF0000";\n'})}),"\n",(0,t.jsx)(n.h4,{id:"set-bot-icon",children:"Set bot icon"}),"\n",(0,t.jsxs)(n.p,{children:["Choose an icon to represent your bot using ",(0,t.jsx)(n.code,{children:"theme.botIcon"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'theme.botIcon = "https://cdn.yellowmessenger.com/XJFcMhLpN6L91684914460598.png"\n'})}),"\n",(0,t.jsx)(n.h4,{id:"set-bot-click-icon",children:"Set bot click icon"}),"\n",(0,t.jsxs)(n.p,{children:["Define an icon for the minimized state of your bot using ",(0,t.jsx)(n.code,{children:"theme.botClickIcon"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'theme.botClickIcon = "https://cdn.yellowmessenger.com/XJFcMhLpN6L91684914460598.png"\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"start-chatbot",children:"Start chatbot"}),"\n",(0,t.jsxs)(n.p,{children:["Once the config is set, chat bot can be presented by calling ",(0,t.jsx)(n.code,{children:"startChatbot()"})," method and passing your view controller as an argument"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'do {\n    try YMChat.shared.startChatbot(on: self)\n} catch {\n    print("Error occured while loading chatbot \\(error)")\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"initialise-view",children:"Initialise View"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"initialiseView()"})," creates an instance of UIViewController which can be used to show the chat view. This view controller can be presented over an existing view controller or can be pushed in navigation controller."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'do {\n   let chatViewController = try YMChat.shared.initialiseView()\n   self.navigationController?.pushViewController(chatViewController, animated: true)\n} catch {\n    print("Error occured while loading chatbot \\(error)")\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"bot-events",children:"Bot Events"}),"\n",(0,t.jsxs)(n.p,{children:["Bot events are used to pass information from bot to app. For passing events from app to bot refer ",(0,t.jsx)(n.a,{href:"#payload",children:"Payload"})]}),"\n",(0,t.jsx)(n.p,{children:"Events from bot can be handled using delegate pattern."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"YMChat.shared.delegate = self\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Once the delegate is assigned define the ",(0,t.jsx)(n.code,{children:"eventResponse(_:)"})," function. The handler class should conform to ",(0,t.jsx)(n.code,{children:"YMChatDelegate"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'func onEventFromBot(_ response: YMBotEventResponse) {\n    print("Event received \\(response)")\n    if response.code == "code-from-bot" {\n        print("Even from a bot has been received", response.data)\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"bot-close-event",children:"Bot close event"}),"\n",(0,t.jsxs)(n.p,{children:["Bot close event is separetly sent and it can be handled in following way. The handler class should conform to ",(0,t.jsx)(n.code,{children:"YMChatDelegate"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'func onBotClose() {\n    print("Bot closed")\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"disabling-external-link-navigation",children:"Disabling external link navigation"}),"\n",(0,t.jsxs)(n.p,{children:["To prevent url opening in the external browser, set ",(0,t.jsx)(n.code,{children:"shouldOpenLinkExternally"})," to false in config and listen to ",(0,t.jsx)(n.code,{children:"url-clicked"})," event in ",(0,t.jsx)(n.code,{children:"onEventFromBot"})," listner to get the url of the link clicked."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"config.shouldOpenLinkExternally = false\n"})}),"\n",(0,t.jsx)(n.h2,{id:"close-bot",children:"Close bot"}),"\n",(0,t.jsxs)(n.p,{children:["Bot can be programatically closed using ",(0,t.jsx)(n.code,{children:"closeBot()"})," function"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"YMChat.shared.closeBot()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"reload-bot",children:"Reload bot"}),"\n",(0,t.jsxs)(n.p,{children:["To reload the bot with the same configuration, use the ",(0,t.jsx)(n.code,{children:"reloadBot()"})," function. This will reload the bot without closing and reopening it."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"YMChat.shared.reloadBot()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"register-device",children:"Register Device"}),"\n",(0,t.jsxs)(n.p,{children:["If you want to receiving push notifications without or before launching the bot, you can register your device.\nTo use this api ",(0,t.jsx)(n.code,{children:"apiKey"}),", ",(0,t.jsx)(n.code,{children:"botId"}),", ",(0,t.jsx)(n.code,{children:"deviceToken"})," and ",(0,t.jsx)(n.code,{children:"ymAuthenticationToken"})," are mandatory parameters."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'    let config = YMConfig(botId: "your bot id")\n    config.deviceToken = "your FCM Token"\n    config.ymAuthenticationToken = "your ymAuthentication token"\n\n    // Set custom base url in case your bot does not belong to india region and yellow cloud\n    // Example- If your bot is in `r5` region custom base url would be `https://r5.cloud.yellow.ai`\n    // config.customBaseUrl = "`https://r5.cloud.yellow.ai`"\n\n    YMChat.shared.registerDevice(apiKey: apiKey, ymConfig: config) {\n        print("Success")\n    } failure: { error in\n        print(error)\n    }\n'})}),"\n",(0,t.jsx)(n.h2,{id:"unlink-device-token",children:"Unlink Device Token"}),"\n",(0,t.jsxs)(n.p,{children:["If you want to stop receiving push notifications you can unlink the device.\nTo use this api ",(0,t.jsx)(n.code,{children:"apiKey"}),", ",(0,t.jsx)(n.code,{children:"botId"})," and ",(0,t.jsx)(n.code,{children:"deviceToken"})," are mandatory parameters.\nDevice token typically is unlinked when the user logs out of the app."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'    let config = YMConfig(botId: "your bot id")\n    // Set the FCM token as device token, this is required so that it can be removed and customer stop receiving the notification\n    config.deviceToken = "your FCM Token"\n    // Set custom base url in case your bot does not belong to india region and yellow cloud\n    // Example- If your bot is in `r5` or EURO region custom base url would be `https://r5.cloud.yellow.ai`\n    // config.customBaseUrl = "`https://r5.cloud.yellow.ai`";\n\n    YMChat.shared.unlinkDeviceToken(apiKey: apiKey, ymConfig: config) {\n        print("Token removed successfully")\n    } failure: { errorString in\n        print("ERROR: \\(errorString)")\n    }\n'})}),"\n",(0,t.jsx)(n.admonition,{title:"API Key",type:"note",children:(0,t.jsxs)(n.p,{children:["API key can be generated/found by visiting ",(0,t.jsx)(n.code,{children:"https://cloud.yellow.ai"})," -> Overview -> Configure -> API Key section"]})}),"\n",(0,t.jsx)(n.h2,{id:"unread-message-count",children:"Unread Message Count"}),"\n",(0,t.jsxs)(n.p,{children:["If you want to show an indicator in your app if there is any unread messages, you can achieve that by calling the given api when bot is in closed state.\nPre condition to use this api is that customer must have opened the bot at least once with ",(0,t.jsx)(n.code,{children:"ymAuthenticationToken"})," otherwise you will receive an error message.\nTo use this api ",(0,t.jsx)(n.code,{children:"botId"})," and ",(0,t.jsx)(n.code,{children:"ymAuthenticationToken"})," are mandatory parameters."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'    let config = YMConfig(botId: "your bot id")\n    // `ymAuthenticationToken` is required to identify the right\n    config.ymAuthenticationToken = "your ymAuthentication token"\n    // Set custom base url in case your bot does not belong to india region and yellow cloud\n    // Example- If your bot is in `r5` region custom base url would be `https://r5.cloud.yellow.ai`\n    // config.customBaseUrl = "`https://r5.cloud.yellow.ai`";\n\n    YMChat.shared.getUnreadMessagesCount(ymConfig: config) { count in\n        print("Unread message count:" + count)\n    } failure: { error in\n        print(error)\n    }\n'})}),"\n",(0,t.jsx)(n.h2,{id:"revalidate-token",children:"Revalidate Token"}),"\n",(0,t.jsx)(n.p,{children:"When your authentication token expires, you can use revalidate token to generate a new token."}),"\n",(0,t.jsx)(n.p,{children:"Once your secure YMAuth is enabled, whenever your authentication token expires, the server will automatically initiate a request to get a fresh token from Yellow."}),"\n",(0,t.jsxs)(n.p,{children:["When you are using the ",(0,t.jsx)(n.code,{children:"ym-revalidate-token"})," event, your application must include both the ",(0,t.jsx)(n.code,{children:"apiToken"})," and ",(0,t.jsx)(n.code,{children:"refreshSession"})," as mandatory parameters. This ensures a seamless and secure revalidation process."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'    YMChat.shared.revalidateToken(token: "new token", refreshSession: refreshSession)\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.mdxAdmonitionTitle,{}),(0,t.jsxs)(n.p,{children:["For more detailed information on how to set up secure YMAuthentication, click ",(0,t.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/mobile/chatbot/sdk-faq-worflows/secure-ymauth",children:"here"}),"."]})]}),"\n",(0,t.jsx)(n.h2,{id:"send-event-to-bot",children:"Send Event To Bot"}),"\n",(0,t.jsx)(n.p,{children:"If you intend to transmit data back to the bot after it has been successfully launched and is in a running state, you can make use of this API."}),"\n",(0,t.jsxs)(n.p,{children:["To use this api ",(0,t.jsx)(n.code,{children:"event"})," is a mandatory parameter."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:'let event = YMEventModel(code: "code", data: ["token": "token"])\nYMChat.shared.sendEventToBot(event: event)\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.mdxAdmonitionTitle,{}),(0,t.jsxs)(n.p,{children:["For more detailed information on how to send event to bot workflow, click ",(0,t.jsx)(n.a,{href:"https://docs.yellow.ai/docs/platform_concepts/mobile/chatbot/sdk-faq-worflows/send-event-workflow",children:"here"}),"."]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"permissions",children:"Permissions"}),"\n",(0,t.jsx)(n.p,{children:"We are requesting for following permissions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<key>NSMicrophoneUsageDescription</key>\n<string>Your microphone will be used to record your speech when you use the Voice feature.</string>\n<key>NSSpeechRecognitionUsageDescription</key>\n<string>Speech recognition will be used to determine which words you speak into this device&apos;s microphone.</string>\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"Microphone and Speech Permission",type:"note",children:(0,t.jsxs)(n.p,{children:["Apple's Speech Framework is added in the SDK to support the ",(0,t.jsx)(n.a,{href:"#speech-to-text",children:"Speech to Text"})," feature, and it will only be used when it has been declared in your config."]})}),"\n",(0,t.jsx)(n.h2,{id:"logging",children:"Logging"}),"\n",(0,t.jsx)(n.p,{children:"Logging can be enabled to understand the code flow and to fix bugs."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"YMChat.shared.enableLogging = true\n"})}),"\n",(0,t.jsx)(n.h2,{id:"demo-app",children:"Demo App"}),"\n",(0,t.jsxs)(n.p,{children:["A demo has been created to better understand the integration of SDK in iOS app\n",(0,t.jsx)(n.a,{href:"https://github.com/yellowmessenger/YMChatbot-iOS-DemoApp",children:"https://github.com/yellowmessenger/YMChatbot-iOS-DemoApp"})]}),"\n",(0,t.jsxs)(n.p,{children:["For more info feel free to email us at ",(0,t.jsx)(n.a,{href:"mailto:apps@yellow.ai",children:"apps@yellow.ai"})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);